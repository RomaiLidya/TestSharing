{"version":3,"sources":["images/simplify_logo2C.png","images/logo_round.png","images/avatar.png","images/logo.png","hooks/useRouter.ts","pages/SettingsPage/index.tsx","hooks/useDebounce.ts","components/ActionSnackBar.tsx","constants/url.ts","constants/colors.ts","components/Table/TableCellCustom.tsx","components/Table/TableRowCustom.tsx","pages/UserPage/components/UserTable/components/BodyRow.tsx","components/HeaderCell.tsx","components/HeaderRow.tsx","pages/UserPage/components/UserTable/index.tsx","utils/index.ts","pages/UserPage/components/CreateUserModal/components/CreateUserForm.tsx","pages/UserPage/components/CreateUserModal/index.tsx","pages/UserPage/components/EditUserModal/components/EditUserForm.tsx","pages/UserPage/components/EditUserModal/index.tsx","components/SearchInput/index.tsx","components/StandardConfirmationDialog.tsx","components/Page.tsx","components/AntSwitch.tsx","components/IOSSwitch.tsx","components/PaperCustom.tsx","components/Breadcrumb.tsx","components/Table/TableCustom.tsx","components/Table/TableCellHead.tsx","components/Table/HeaderCell.tsx","components/Table/HeaderRow.tsx","components/Table/TableRowCollapse.tsx","pages/UserPage/index.tsx","components/BodyCell.tsx","pages/AccesPage/LevelAccesUserTable/components/BodyRow.tsx","pages/AccesPage/LevelAccesUserTable/index.tsx","pages/AccesPage/EditLevelAccesUserModal/components/EditLevelAccessUserForm.tsx","pages/AccesPage/EditLevelAccesUserModal/index.tsx","pages/AccesPage/CreateLevelAccessUserModal/components/CreateLevelAccessForm.tsx","pages/AccesPage/CreateLevelAccessUserModal/index.tsx","pages/AccesPage/index.tsx","components/ConditionalRoute.tsx","components/LoadingButton.tsx","contexts/CurrentUserContext.ts","pages/LoginPage/index.tsx","pages/HomePage.tsx","pages/NotFoundPage/index.tsx","pages/CompanyPage/components/CompanyForm.tsx","pages/CompanyPage/index.tsx","pages/PartnerPage/components/PartnerTable/components/BodyRow.tsx","pages/PartnerPage/components/PartnerTable/index.tsx","pages/PartnerPage/components/PartnerModal/components/PartnerWizard.tsx","pages/PartnerPage/components/PartnerModal/index.tsx","pages/PartnerPage/index.tsx","pages/CategoryPage/components/CategoryTable/components/BodyRow.tsx","pages/CategoryPage/components/CategoryTable/index.tsx","pages/CategoryPage/components/CategoryModal/components/CategoryWizard.tsx","pages/CategoryPage/components/CategoryModal/index.tsx","pages/CategoryPage/index.tsx","pages/ProductPage/components/ProductTable/components/BodyRow.tsx","pages/ProductPage/components/ProductTable/index.tsx","pages/ProductPage/components/ProductModal/components/ProductWizard.tsx","pages/ProductPage/components/ProductModal/index.tsx","pages/ProductPage/index.tsx","pages/ProductDetailPage/components/ImageSlider.tsx","pages/ProductDetailPage/components/ProductDetail.tsx","pages/ProductDetailPage/components/ProductModal/ProductWizard.tsx","pages/ProductDetailPage/components/ProductModal/index.tsx","pages/ProductDetailPage/index.tsx","pages/PartnerDetailPage/components/PartnerDetail.tsx","pages/PartnerDetailPage/components/PartnerWizard.tsx","pages/PartnerDetailPage/index.tsx","pages/CommissionPage/components/CommissionPageTable/components/BodyRow.tsx","pages/CommissionPage/components/CommissionPageTable/index.tsx","pages/CommissionPage/index.tsx","pages/CommissionDetail/components/SalesDetail.tsx","pages/CommissionDetail/components/InvoiceDetail/components/BodyRow.tsx","pages/CommissionDetail/components/InvoiceDetail/index.tsx","pages/CommissionDetail/index.tsx","components/AppHeader.tsx","components/AppDrawer/components/DrawerItem.tsx","components/AppDrawer/index.tsx","App.tsx","utils/AxiosUtils.ts","serviceWorker.ts","theme/hady/index.ts","index.tsx"],"names":["module","exports","useRouter","useContext","RouterContext","history","location","match","useStyles","makeStyles","theme","root","paddingTop","spacing","paddingBottom","container","marginTop","text","fontWeight","fontSize","textSpace","divider","marginBottom","paper","width","subMenuGrid","borderRight","maxWidth","rootPaper","display","flexWrap","margin","height","content","paddingLeft","headerSubMenuTitleContainer","headerPageTitleContainer","borderColor","color","paddingRight","spaceText","spaceTextBold","contentContainer","SettingsPage","classes","Container","className","clsx","Grid","item","sm","Typography","variant","Divider","Paper","onClick","event","preventDefault","push","xs","elevation","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","success","backgroundColor","green","error","palette","dark","icon","iconVariant","opacity","marginRight","message","alignItems","ActionSnackBar","props","open","handleClose","Icon","isSuccessVariant","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","aria-describedby","id","action","IconButton","key","aria-label","BASE_URL","process","LOGIN_URL","USER_BASE_URL","GET_CURRENT_USER_URL","COMPANY_BASE_URL","ACCESS_USER_BASE_URL","PARTNER_BASE_URL","PARTNER_LAST_ID_BASE_URL","WILAYAH_BASE_URL","WILAYAH_PROVINSI_BASE_URL","WILAYAH_KABUPATEN_BASE_URL","code","WILAYAH_KECAMATAN_BASE_URL","ZONE_BASE_URL","PRODUCT_BASE_URL","CATEGORY_BASE_URL","SALES_BASE_URL","WHITE","GREY","GRAY_3","TableCellStart","withStyles","createStyles","border","borderTopLeftRadius","borderBottomLeftRadius","lineHeight","TableCell","TableCellEnd","borderTopRightRadius","borderBottomRightRadius","borderLeft","TableCellMiddle","TableRowCustom","background","boxShadow","TableRow","BodyRow","isLoadingData","user","onEditUser","Skeleton","firstName","name","email","contactNumber","role","align","Button","size","headerCellText","grey","A200","cellStyle","pL","pR","pT","pB","verticalAlign","undefined","HeaderCell","isCheckBox","children","tableRow","checkBox","checkBoxSize","HeaderRow","headers","map","header","countChecked","checked","length","totalShouldBeChecked","rowsPerPage","label","Checkbox","checkedIcon","renderCheckBoxIcon","edge","tabIndex","disableRipple","onChange","handleCheckAll","tableWrapper","overflowX","table","borderCollapse","borderSpacing","UserTable","users","setOpenSnackbar","setSnackbarVarient","handleOpenEditUser","dummyUser","lastName","roleId","showSkeleton","setShowSkeleton","timeout","Table","TableHead","TableBody","index","isValidEmail","test","String","toLowerCase","ucWords","charAt","toUpperCase","slice","AddButton","getContrastText","orange","controlDiv","marginLeft","cancelButton","addButton","CreateUserForm","setEmail","emailError","setFirstName","firstNameError","setLastName","lastNameError","setContactNumber","contactNumberError","selectedlevelId","setSelectedlevelId","levelIdError","isSubmitting","onSubmit","onCancel","okLabel","levelUser","handleChange","noValidate","md","lg","xl","TextField","required","fullWidth","helperText","target","autoComplete","select","MenuItem","level","FormControl","component","FormGroup","FormControlLabel","control","justify","disabled","type","position","shadows","padding","outline","top","left","transform","borderRadius","closeButton","right","CreateUserModal","cancelTokenSource","isLoading","setLoading","password","selectedLevelId","setSelectedLevelId","setEmailError","setFirstNameError","setLastNameError","setContactNumberError","setLevelIdError","addNewUser","handleCancel","clearFormValue","clearFormErrors","validateForm","ret","trim","handleOnSubmit","a","axios","CancelToken","source","post","cancelToken","token","response","data","console","log","Modal","aria-labelledby","disableBackdropClick","direction","EditUserForm","EditUserModal","updateIndividualUser","resetFormValues","useCallback","handleOnClose","errorCode","search","shape","fade","common","white","breakpoints","up","appbarSearch","searchIcon","pointerEvents","justifyContent","searchIconCustomColor","iconColor","clearIcon","inputRoot","inputInput","widthTransition","transition","transitions","create","bordered","primary","customWidth","SearchInput","setAnchorEl","setPlacement","isAppbar","withTransition","withBorder","placeHolder","tableSearchValue","globalSearchValue","setTableSearchValue","openPopper","setGlobalSearchValue","setOpenPopper","InputBase","placeholder","input","inputProps","currentTarget","handleTextGlobalSearchChange","handleTextTableSearchChange","Tooltip","title","successAvatarIcon","warnigAvatarIcon","dangerAvatarIcon","noCancelButton","okButton","blue","dialogActions","titleText","messageText","iconGrid","StandardConfirmationDialog","titleMessage","onConfirm","Dialog","DialogTitle","DialogContent","DialogActions","disableElevation","Page","forwardRef","ref","Helmet","switchBase","main","thumb","track","Switch","IOSSwitch","secondary","focusVisible","focusVisibleClassName","PaperCustom","active","link","breadCrumb","Breadcrumb","path","pathname","split","filter","x","handleClick","Breadcrumbs","Link","href","join","TableCustom","TableCellHead","letterSpacing","textTransform","visuallyHidden","clip","overflow","property","order","orderBy","sort","onRequestSort","TableSortLabel","expand","normal","TableRowCollapse","colSpan","Collapse","in","unmountOnExit","tableRoot","button","extendedIcon","addGrid","textAlign","leftHeader","rightHeader","ButtonNew","UserPage","openSnackbar","snackbarVarient","setUsers","query","setQuery","queryString","setQueryString","setSearchUserError","openEditUser","setOpenEditUser","isSearchingUser","setSearchingUser","openCreateUserModal","setOpenCreateUserModal","currentEditingUserIndex","setCurrentEditingUserIndex","setLevelUser","get","roleData","roles","getAllRoles","cancel","handleCancelEditUser","handleSearch","searchQuery","fetchData","getQueryParams","params","URLSearchParams","append","toString","url","searchUser","debouncedSearchTerm","userIndex","updatedUserProperties","Object","assign","new","unshift","CheckCircleIcon","ErrorIcon","bodyCellText","black","hideBorder","borderBottom","isRemoveBorderBottom","cellWidth","customPadding","BodyCell","rowSpan","isComponent","tableCellInner","avatar","menuAvatar","menuList","minHeight","chip","nameTextCell","flexDirection","otherTextCell","secondText","circle","redCircle","red","actionCell","wrapper","newIcon","onEditLevelAccess","accessRight","Chip","LevelAccesUserTable","levelUsers","handleOpenEditLevelAccess","dummyLevelUser","EditLevelAccessUserForm","setLevel","levelError","accessRightError","setAccessRight","setOpenConfirmationModal","EditLevelAccessUserModal","setLevelError","setAccessRightError","updateIndividualLevelUser","accesUserId","CreateLevelAccessForm","CreateLevelAccessUserModal","addNewLevelUser","setLevelAccessUser","levelAccessData","searchLevelAccess","textPaper","AccesPage","state","setLevelUsers","messageSuccess","messageError","openEditLevelUser","setOpenEditLevelUser","currentEditingLevelUserIndex","setCurrentEditingLevelUserIndex","openCreateLevelUserModal","setOpenCreateLevelUserModal","searchLevelUser","accessIndex","handleCancelEditLevelUser","levelUserIndex","EditLevelAccesUserModal","updatedLevelUserProperties","ConditionalRoute","Component","rest","routeCondition","redirectTo","render","renderProps","to","buttonProgress","LoadingButton","timerRef","React","useRef","style","disabledDueToLoading","setDisabledDueToLoading","current","Fade","transitionDelay","CircularProgress","CurrentUserContext","createContext","setCurrentUser","unsetCurrentUser","CurrentUserProvider","Provider","Consumer","body","form","logoContainer","logo","linkButton","LoginPage","currentUserContext","useTheme","isAuthenticationError","setAuthenticationError","setPassword","isEmptyFieldError","setEmptyFieldError","isShowPassword","setShowPassword","login","currentUser","onSubmitHandler","src","alt","autoFocus","InputProps","endAdornment","InputAdornment","VisibilityOff","Visibility","textDecoration","HomePage","NotFoundPage","rightPaper","dividerStyle","textTypo","textField","textFieldFont","bigAvatar","minWidth","spacingNewLine","buttonBaseStyle","down","inputImageStyle","buttonImage","cancelImage","cursor","spaceImage","textLast","imageRemarks","fontStyle","marginButtom","CompanyForm","setName","nameError","address","setAddress","addressError","npwp","setNPWP","npwpError","district","setDistrict","districtError","subDistrict","setSubDistrict","subDistrictError","postalCode","setPostalCode","postalCodeError","contactPerson","setContactPerson","contactPersonError","handphone","setHandphone","handphoneError","website","setWebsite","websiteError","province","setProvince","provinceError","setImage","setImageView","imageView","image","handleChooseImage","selectedImage","selectedImageView","files","URL","createObjectURL","gutterBottom","InputLabelProps","multiline","rowsMax","accept","htmlFor","ButtonBase","focusRipple","placement","Avatar","Badge","badgeContent","CompanyPage","setMessageSuccess","setMessageError","setCompany","setNameError","setAddressError","setPostalCodeError","setDistrictError","setHandphoneError","setWebsiteError","setContactPersonError","setNPWPError","setSubDistrictError","setProvinceError","handleSetMessageError","formData","FormData","config","deleteButton","partner","onDelete","partnerId","partnerType","cellPhoneNumber","dummyPartner","areaCode","businessEntity","notes","phoneNumber","regionName","virtualAccount","PartnerTable","partners","count","currentPage","setType","setPartnerId","setCellPhoneNumber","setOrder","handleChangePage","handleChangeRowsPerPage","setOrderBy","handleConfirmationDelete","TableContainer","Select","notesGrid","buttonGrid","tabGrid","gridWrapper","boxSizing","TabPanel","other","hidden","a11yProps","dummyRegion","dummyZone","PartnerWizard","setPartners","setOpen","handleSnackBar","setPhoneNumber","setVirtualAccount","setNotes","setValue","setPartnerType","provinsi","setProvinsi","kabupaten","setKabupaten","kecamatan","setKecamatan","zone","setZone","route","setRoute","region","setRegion","isSubmit","setSubmit","nameMessage","setNameMessage","emailMessage","setEmailMessage","addressMessage","setAddressMessage","businessEntityMessage","setBusinessEntityMessage","provinsiMessage","setProvinsiMessage","kabupatenMessage","setKabupatenMessage","kecamatanMessage","setKecamatanMessage","postalCodeMessage","setPostalCodeMessage","zoneMessage","setZoneMessage","phoneNumberMessage","setPhoneNumberMessage","fetch","handleSearchProvinsi","handleSearchKabupaten","handleSearchZone","handleSearchKecamatan","resetValidation","validation","ZoneId","valid","Tabs","indicatorColor","newValue","Tab","FormHelperText","Autocomplete","options","getOptionLabel","option","renderInput","rows","disableTypography","MuiDialogContent","PartnerModal","reason","titleWrapper","PartnerPage","setCount","setIsLoadingData","setCurrentPage","setRowsPerPage","selectedId","setSelectedId","confirmationDelete","setConfirmationDelete","snackbarVariant","setSnackbarVariant","setMessage","meta","total","performActionAndRevertPage","actionParam","deletePartner","delete","handleCloseSnackbar","page","category","onUpdate","EditOutlined","cellStart","dummyCategory","CategoryTable","categories","description","setDescription","handleOnUpdate","CategoryWizard","setCategories","setCategory","setId","resetForm","CategoryModal","CategoryPage","deleteCategory","Pagination","boundaryCount","media","productImage","heigth","price","dummyProductImage","product","setProductImage","ProductImage","Category","Card","CardMedia","CardContent","productName","productCode","sellingPrice","displayType","thousandSeparator","prefix","thirdGrid","dummyProduct","purchasePrice","typeUnit","totalStock","isReminder","minimumStock","ProductTable","products","dropZone","flex","borderWidth","borderStyle","thumbsContainer","thumbInner","img","inputFile","ProductWizard","setProducts","setProductName","setProductCode","setSellingPrice","setPurchasePrice","setTypeUnit","setReminder","setMinimumStock","productNameMessage","setProductNameMessage","productCodeMessage","setProductCodeMessage","typeUnitMessage","setTypeUnitMessage","minimumStockMessage","setMinimumStockMessage","sellingPriceMessage","setSellingPriceMessage","purchasePriceMessage","setPurchasePriceMessage","categoryMessage","setCategoryMessage","setFiles","progress","setProgress","useDropzone","maxFiles","onDrop","acceptedFiles","uploadImage","getRootProps","getInputProps","file","preview","onUploadProgress","progressEvent","totalLength","lengthComputable","getResponseHeader","Math","round","loaded","thumbs","forEach","revokeObjectURL","handleSearchCategory","CategoryId","textColor","getOptionSelected","LinearProgress","ProductModal","secondGrid","fourthGrid","ProductPage","last_page","current_page","deleteProduct","ImageSlider","productImages","showArrows","cell","tableDetail","MuiTableCell","ProductDetail","setProduct","upload","ProductDetailPage","setProductImages","ProductImages","handleOpenForm","DeleteRounded","EditRounded","disableFocusRipple","disableTouchRipple","PartnerDetail","Provinsi","Kabupaten","Kecamatan","Zone","setPartner","setUpdate","setBusinessEntity","maxLength","PartnerDetailPage","isUpdate","salesCommission","salesId","dummySales","CommissionPageTable","salesCommissions","setSalesId","CommissionPage","setSalesCommissions","SalesDetail","paidChip","invoiceDetail","invoices","KeyboardArrowUp","KeyboardArrowDown","statusInvoice","amount","amountOwed","invoiceDate","dueDate","status","InvoiceDetail","invoiceId","setInvoiceId","setStatusInvoice","CommissionDetail","setStatus","setAmountOwed","setAmount","setInvoiceDate","setDueDate","REACT_APP_DRAWER_WIDTH","toolbar","appBar","zIndex","drawer","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","ListItemIcon","greeting","date","displayName","AppHeader","handleDrawerOpen","detailDate","format","Date","AppBar","Toolbar","now","renderGreeting","colorDrawer","textDrawer","DrawerItem","ListItem","ListItemText","toolbarIcon","mixins","drawerPaper","whiteSpace","drawerPaperClose","textIcon","AppDrawer","openDrawer","handleDrawerClose","Drawer","List","HomeIcon","PeopleIcon","ShoppingCartIcon","DescriptionIcon","ClientsIcon","SettingsIcon","appBarSpacer","footerPaddingIsLoggedIn","App","CurrentUserData","setCurrentUserData","isAuthenticating","setAuthenticating","setOpenDrawer","isLoggedIn","localStorage","setItem","defaults","Authorization","attachTokenToHeader","removeItem","getItem","getCurrentUserData","Box","exact","CommissionDetailPage","Boolean","window","hostname","createMuiTheme","contrastText","default","typography","fontFamily","h1","h5","h6","subtitle1","MuiButton","MuiPaper","MuiTextField","overrides","MuiOutlinedInput","MuiIconButton","remountApp","ReactDOM","unmountComponentAtNode","document","getElementById","ThemeProvider","CssBaseline","navigator","serviceWorker","ready","then","registration","unregister","interceptors","use","Promise","reject"],"mappings":"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","file":"static/js/main.54ce9f20.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/simplify_logo2C.fa4ba6ba.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_round.fa4ba6ba.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar.f5b08587.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.fa4ba6ba.png\";","import { useContext } from 'react';\r\n\r\nimport { __RouterContext as RouterContext, match } from 'react-router';\r\n\r\ninterface MatchParams {\r\n  id: string;\r\n}\r\n\r\nconst useRouter = () => {\r\n  const { history, location, match } = useContext(RouterContext);\r\n\r\n  return {\r\n    history,\r\n    location,\r\n    match: match as match<MatchParams>\r\n  };\r\n};\r\n\r\nexport default useRouter;\r\n","import React, { FC } from 'react';\r\nimport clsx from 'clsx';\r\nimport { Container, Divider, Grid, makeStyles, Paper, Theme, Typography } from '@material-ui/core';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport useRouter from 'hooks/useRouter';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4)\r\n  },\r\n  container: {\r\n    '& > :nth-child(n+2)': {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  },\r\n  text: {\r\n    fontWeight: 'bold',\r\n    fontSize: '30px',\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  textSpace: {\r\n    fontWeight: 'bold',\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  divider: {\r\n    marginBottom: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    width: '10%'\r\n  },\r\n  subMenuGrid: {\r\n    borderRight: '1px solid #dcdcdc',\r\n    maxWidth: theme.spacing(15)\r\n  },\r\n  rootPaper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(36),\r\n      height: theme.spacing(20)\r\n    }\r\n  },\r\n  content: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingTop: theme.spacing(0.2)\r\n  },\r\n  headerSubMenuTitleContainer: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    paddingLeft: theme.spacing(0)\r\n  },\r\n  headerPageTitleContainer: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(4),\r\n    paddingLeft: theme.spacing(2)\r\n  },\r\n  borderColor: {\r\n    color: '#0c88b8',\r\n    width: '110%',\r\n    height: '110%',\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  spaceText: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2)\r\n  },\r\n  spaceTextBold: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    fontWeight: 'bold'\r\n  },\r\n  contentContainer: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(0),\r\n    paddingBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst SettingsPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { history } = useRouter();\r\n\r\n  const onClickHandler: React.MouseEventHandler = event => {\r\n    event.preventDefault();\r\n\r\n    history.push('/users');\r\n  };\r\n\r\n  const onClickCompanyHandler: React.MouseEventHandler = event => {\r\n    event.preventDefault();\r\n\r\n    history.push('/company');\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth='lg' className={clsx(classes.root, classes.container)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item sm={6}>\r\n          <Typography className={classes.text} variant='h3' >\r\n            Pengaturan\r\n          </Typography>\r\n          <Typography className={classes.textSpace} variant='h4' >\r\n            Awal {'>'}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Divider className={classes.divider} />\r\n      <div className={classes.rootPaper}>\r\n        <Paper onClick={onClickHandler}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={9}>\r\n              <Typography variant='h4' className={classes.spaceTextBold}>\r\n                Pengguna\r\n              </Typography>\r\n              <Typography variant='h5'  className={classes.spaceText}>\r\n                Pengaturan Pengguna dan Hak Akses Pengguna\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <PeopleIcon className={classes.borderColor} />\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <Paper onClick={onClickCompanyHandler}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={9}>\r\n              <Typography variant='h4' className={classes.spaceTextBold}>\r\n                Perusahaan\r\n              </Typography>\r\n              <Typography variant='h5'  className={classes.spaceText}>\r\n                Informasi Perusahaan terkait nama, logo dan alamat\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <BusinessIcon className={classes.borderColor} />\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <Paper elevation={3}></Paper>\r\n        <Paper elevation={3}></Paper>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useDebounce = (value: string, delay: number) => {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    // Update debounced value after delay\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    // Cancel the timeout if value changes (also on delay change or unmount)\r\n    // This is how we prevent debounced value from updating if value is changed ...\r\n    // .. within the delay period. Timeout gets cleared and restarted.\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]); // Only re-call effect if value or delay changes\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","import React from 'react';\r\nimport { Snackbar, makeStyles, Theme, SnackbarContent, IconButton } from '@material-ui/core';\r\nimport { green } from '@material-ui/core/colors';\r\nimport clsx from 'clsx';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { SvgIconProps } from '@material-ui/core/SvgIcon';\r\n\r\ninterface Props {\r\n  variant?: 'success' | 'error';\r\n  message: string;\r\n  open: boolean;\r\n  handleClose(): void;\r\n  Icon: React.ComponentType<SvgIconProps>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  icon: {\r\n    fontSize: 20\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  }\r\n}));\r\n\r\nconst ActionSnackBar: React.FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { variant, message, open, handleClose, Icon } = props;\r\n  const isSuccessVariant = variant === 'success';\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center'\r\n      }}\r\n      open={open}\r\n      autoHideDuration={6000}\r\n      onClose={handleClose}\r\n    >\r\n      <SnackbarContent\r\n        className={isSuccessVariant ? classes.success : classes.error}\r\n        aria-describedby='client-snackbar'\r\n        message={\r\n          <span id='client-snackbar' className={classes.message}>\r\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n            {message}\r\n          </span>\r\n        }\r\n        action={[\r\n          <IconButton key='close' aria-label='Close' color='inherit' onClick={handleClose}>\r\n            <CloseIcon className={classes.icon} />\r\n          </IconButton>\r\n        ]}\r\n      />\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default ActionSnackBar;\r\n","const BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\nexport const LOGIN_URL = `${BASE_URL}/login`;\r\nexport const LOGOUT_URL = `${BASE_URL}/logout`;\r\nexport const FORGOT_PASSWORD_URL = `${BASE_URL}/forgotpassword`;\r\nexport const RESET_PASSWORD_URL = `${BASE_URL}/resetpassword`;\r\nexport const CHANGE_PASSWORD_URL = `${BASE_URL}/changepassword`;\r\n\r\nexport const USER_BASE_URL = `${BASE_URL}/users`;\r\nexport const GET_CURRENT_USER_URL = `${USER_BASE_URL}/me`;\r\n\r\nexport const GET_EDIT_USER_URL = (userId: number) => `${USER_BASE_URL}/${userId}`;\r\n\r\nexport const COMPANY_BASE_URL = `${BASE_URL}/company`;\r\n\r\nexport const ACCESS_USER_BASE_URL = `${BASE_URL}/access`;\r\nexport const GET_EDIT_ACCESS_USER_URL = (accesUserId: number) => `${ACCESS_USER_BASE_URL}/${accesUserId}`;\r\n\r\nexport const PARTNER_BASE_URL = `${BASE_URL}/partner`;\r\nexport const PARTNER_LAST_ID_BASE_URL = `${PARTNER_BASE_URL}/last`;\r\n\r\nexport const WILAYAH_BASE_URL = `${BASE_URL}/wilayah`\r\nexport const WILAYAH_PROVINSI_BASE_URL = `${WILAYAH_BASE_URL}/provinsi`;\r\nexport const WILAYAH_KABUPATEN_BASE_URL = (code: string) => `${WILAYAH_BASE_URL}/kabupaten/${code}`;\r\nexport const WILAYAH_KECAMATAN_BASE_URL = (code: string) => `${WILAYAH_BASE_URL}/kecamatan/${code}`;\r\n\r\nexport const ZONE_BASE_URL = `${BASE_URL}/zone`;\r\n\r\nexport const PRODUCT_BASE_URL = `${BASE_URL}/product`;\r\n\r\nexport const CATEGORY_BASE_URL = `${BASE_URL}/category`;\r\nexport const SALES_BASE_URL = `${BASE_URL}/sales`;","export const WHITE = '#FFFFFF';\r\nexport const BLUE_PRIMARY = '#02A9EA';\r\nexport const BLUE_SECONDARY = '#0088BD';\r\nexport const BLACK = '#333333';\r\nexport const BLACK_2 = '#2E384D';\r\nexport const BLACK_3 = '#222B45';\r\nexport const GREY = '#E0E0E0';\r\nexport const GRAY_3 = '#828282';\r\nexport const GREEN = '#00FF00';\r\nexport const BACKGROUND = '#F7F9FC';\r\nexport const GRADIENT_DRAWER_COLOR = 'linear-gradient(#0088BD 30%, #02A9EA 70%)';\r\nexport const ORANGE = '#F2994A';\r\nexport const RED = '#EB5757';\r\n","import { withStyles, createStyles, Theme, TableCell } from '@material-ui/core';\r\nimport { GREY, BLACK_2 } from 'constants/colors';\r\n\r\nconst TableCellStart = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      border: `1px solid ${GREY}`,\r\n      borderTopLeftRadius: 5,\r\n      borderBottomLeftRadius: 5,\r\n      borderRight: 'none',\r\n      color: BLACK_2,\r\n      fontWeight: 500,\r\n      fontSize: '15px',\r\n      lineHeight:'18px',\r\n    }\r\n  })\r\n)(TableCell);\r\n\r\nconst TableCellEnd = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n        border: `1px solid ${GREY}`,\r\n        borderTopRightRadius: 5,\r\n        borderBottomRightRadius: 5,\r\n        borderLeft: 'none'\r\n    }\r\n  })\r\n)(TableCell);\r\n\r\nconst TableCellMiddle = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      border: `1px solid ${GREY}`,\r\n      borderRight: 'none',\r\n      borderLeft: 'none'\r\n    }\r\n  })\r\n)(TableCell);\r\n\r\nexport { TableCellStart, TableCellEnd, TableCellMiddle };\r\n","import { withStyles, createStyles, TableRow } from '@material-ui/core';\r\n\r\nconst TableRowCustom = withStyles(theme =>\r\n  createStyles({\r\n    root: {\r\n      '&:hover': {\r\n        background: '#F7F9FC',\r\n        boxShadow: '0px 5px 12px rgba(0, 0, 0, 0.08)'\r\n      }\r\n    }\r\n  })\r\n)(TableRow);\r\n\r\nexport default TableRowCustom;\r\n","import React, { FC, Fragment } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { TableCellMiddle, TableCellEnd, TableCellStart } from 'components/Table/TableCellCustom';\r\nimport TableRowCustom from 'components/Table/TableRowCustom';\r\n\r\ninterface Props {\r\n  isLoadingData: boolean;\r\n  user: UserDetailsModel;\r\n  setOpenSnackbar: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setSnackbarVarient: React.Dispatch<React.SetStateAction<'success' | 'error'>>;\r\n  onEditUser: React.MouseEventHandler;\r\n}\r\n\r\nconst BodyRow: FC<Props> = props => {\r\n  const { isLoadingData, user, onEditUser } = props;\r\n\r\n  return (\r\n    <TableRowCustom>\r\n      <TableCellStart>{isLoadingData ? <Skeleton variant='text' width={'100%'} height={25} /> : user.id}</TableCellStart>\r\n      <TableCellMiddle>{isLoadingData ? <Skeleton variant='text' width={'100%'} height={25} /> : user.firstName}</TableCellMiddle>\r\n      <TableCellMiddle>{isLoadingData ? <Skeleton variant='text' width={'100%'} height={25} /> : user.name}</TableCellMiddle>\r\n      <TableCellMiddle>{isLoadingData ? <Skeleton variant='text' width={'100%'} height={25} /> : user.email}</TableCellMiddle>\r\n      <TableCellMiddle>{isLoadingData ? <Skeleton variant='text' width={'100%'} height={25} /> : user.contactNumber}</TableCellMiddle>\r\n      <TableCellMiddle>{isLoadingData ? <Skeleton variant='text' width={'100%'} height={25} /> : user.role}</TableCellMiddle>\r\n\r\n      <TableCellEnd align='right'>\r\n        {isLoadingData ? null : (\r\n          <Fragment>\r\n            <Button variant='text' size='small' color='primary' onClick={onEditUser}>\r\n              Edit\r\n            </Button>\r\n          </Fragment>\r\n        )}\r\n      </TableCellEnd>\r\n    </TableRowCustom>\r\n  );\r\n};\r\n\r\nexport default BodyRow;\r\n","import React, { FC } from 'react';\r\nimport { TableCell, Typography, Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props {\r\n  pL?: string;\r\n  pR?: string;\r\n  pT?: string;\r\n  pB?: string;\r\n  verticalAlign?: 'top' | 'middle' | 'bottom';\r\n  isCheckBox?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  headerCellText: {\r\n    fontWeight: 500,\r\n    color: theme.palette.grey.A200\r\n  },\r\n  cellStyle: (props: Props) => ({\r\n    paddingLeft: props.pL === '' || props.pL === null ? theme.spacing(0) : props.pL,\r\n    paddingRight: props.pR === '' || props.pR === null ? theme.spacing(0) : props.pR,\r\n    paddingTop: props.pT === '' || props.pT === null ? theme.spacing(0) : props.pT,\r\n    paddingBottom: props.pB === '' || props.pB === null ? theme.spacing(0) : props.pB,\r\n    verticalAlign: props.verticalAlign === undefined ? 'middle' : props.verticalAlign\r\n  })\r\n}));\r\n\r\nconst HeaderCell: FC<Props> = props => {\r\n  const { pL, pR, pT, pB, isCheckBox } = props;\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <TableCell align='left' className={clsx({ [classes.cellStyle]: pL || pR || pT || pB })}>\r\n      {isCheckBox ? (\r\n        props.children\r\n      ) : (\r\n        <Typography variant='overline' className={classes.headerCellText}>\r\n          {props.children}\r\n        </Typography>\r\n      )}\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nexport default HeaderCell;\r\n","import React, { FC } from 'react';\r\nimport { TableRow, Checkbox } from '@material-ui/core';\r\nimport HeaderCell from './HeaderCell';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxOutlinedUncompletedIcon from '@material-ui/icons/IndeterminateCheckBox';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\ninterface Header {\r\n  label: string;\r\n  pT?: string;\r\n  pR?: string;\r\n  pB?: string;\r\n  pL?: string;\r\n  verticalAlign?: 'top' | 'middle' | 'bottom';\r\n  isCheckBox?: boolean;\r\n  checked?: number[];\r\n  rowsPerPage?: number;\r\n  handleCheckAll?: () => void;\r\n}\r\n\r\ninterface Props {\r\n  headers: Header[];\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  tableRow: {\r\n    height: 64\r\n  },\r\n  checkBox: {\r\n    '&&:hover': {\r\n      backgroundColor: 'transparent'\r\n    }\r\n  },\r\n  checkBoxSize: {\r\n    fontSize: '16px'\r\n  }\r\n}));\r\n\r\nconst HeaderRow: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { headers } = props;\r\n\r\n  const renderContent = () => {\r\n    return headers.map(header => {\r\n      const countChecked = header.checked && header.checked.length;\r\n      const totalShouldBeChecked = header.rowsPerPage && header.rowsPerPage;\r\n      const renderCheckBoxIcon = () => {\r\n        if (countChecked !== 0) {\r\n          if (countChecked !== totalShouldBeChecked) {\r\n            return <CheckBoxOutlinedUncompletedIcon className={classes.checkBoxSize} />;\r\n          } else {\r\n            return <CheckBoxIcon className={classes.checkBoxSize} />;\r\n          }\r\n        }\r\n      };\r\n      return (\r\n        <HeaderCell\r\n          key={header.label}\r\n          pL={header.pL}\r\n          pR={header.pR}\r\n          pT={header.pT}\r\n          pB={header.pB}\r\n          verticalAlign={header.verticalAlign}\r\n          isCheckBox={header.isCheckBox}\r\n        >\r\n          {header.isCheckBox ? (\r\n            <Checkbox\r\n              key={header.label}\r\n              icon={<CheckBoxOutlineBlankIcon className={classes.checkBoxSize} />}\r\n              checkedIcon={renderCheckBoxIcon()}\r\n              edge='start'\r\n              color='secondary'\r\n              className={classes.checkBox}\r\n              checked={countChecked !== 0 ? true : false}\r\n              tabIndex={-1}\r\n              disableRipple\r\n              onChange={header.handleCheckAll}\r\n            />\r\n          ) : (\r\n            header.label\r\n          )}\r\n        </HeaderCell>\r\n      );\r\n    });\r\n  };\r\n  return <TableRow className={classes.tableRow}>{renderContent()}</TableRow>;\r\n};\r\n\r\nexport default HeaderRow;\r\n","import React, { FC, Fragment, useState, useEffect, useContext, useCallback } from 'react';\r\nimport { CancelTokenSource } from 'axios';\r\nimport { Theme, makeStyles, Table, TableBody, TableHead } from '@material-ui/core';\r\nimport BodyRow from './components/BodyRow';\r\nimport HeaderRow from 'components/HeaderRow';\r\n\r\ninterface Props {\r\n  isLoadingData: boolean;\r\n  users: UserDetailsModel[];\r\n  handleOpenEditUser: (userIndex: number) => React.MouseEventHandler;\r\n  handleCancelEditUser: () => void;\r\n  setOpenSnackbar: React.Dispatch<React.SetStateAction<boolean>>;\r\n  updateIndividualUser: (userIndex: number) => (updatedUserProperties: Partial<UserDetailsModel>) => void;\r\n  setSnackbarVarient: React.Dispatch<React.SetStateAction<'success' | 'error'>>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tableWrapper: {\r\n    overflowX: 'auto'\r\n  },\r\n  table: {\r\n    borderCollapse: 'separate',\r\n    borderSpacing: '0 8px'\r\n  },\r\n  headerPageTitleContainer: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingLeft: theme.spacing(0)\r\n  }\r\n}));\r\n\r\nconst UserTable: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  let cancelTokenSource: CancelTokenSource;\r\n\r\n  const { isLoadingData, users, setOpenSnackbar, setSnackbarVarient, handleOpenEditUser } = props;\r\n\r\n  const dummyUser: UserDetailsModel = {\r\n    id: 0,\r\n    firstName: '',\r\n    lastName: '',\r\n    contactNumber: '',\r\n    email: '',\r\n    name: '',\r\n    role: '',\r\n    roleId: 0\r\n  };\r\n\r\n  const [showSkeleton, setShowSkeleton] = useState<boolean>(false);\r\n  useEffect(() => {\r\n    let timeout: NodeJS.Timeout;\r\n\r\n    if (isLoadingData) {\r\n      timeout = setTimeout(() => {\r\n        setShowSkeleton(true);\r\n      }, 500);\r\n    }\r\n\r\n    setShowSkeleton(false);\r\n\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [isLoadingData]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <HeaderRow\r\n              headers={[\r\n                { label: 'ID', pL: '25', pR: '25px', verticalAlign: 'top' },\r\n                { label: 'USERNAME', pL: '25px', pR: '25px', verticalAlign: 'top' },\r\n                { label: 'NAMALENGKAP', pL: '25px', pR: '25px', verticalAlign: 'top' },\r\n                { label: 'EMAIL', pL: '25px', pR: '25px', verticalAlign: 'top' },\r\n                { label: 'NO.HANDPHONE', pL: '25px', pR: '25px', verticalAlign: 'top' },\r\n                { label: 'LEVEL', pL: '25px', pR: '25px', verticalAlign: 'top' },\r\n                { label: '', pL: '25px', pR: '25px', verticalAlign: 'top' }\r\n              ]}\r\n            />\r\n          </TableHead>\r\n          <TableBody>\r\n            {showSkeleton\r\n              ? [1, 2, 3, 4, 5, 6].map(index => (\r\n                  <BodyRow\r\n                    key={index}\r\n                    user={dummyUser}\r\n                    setOpenSnackbar={setOpenSnackbar}\r\n                    setSnackbarVarient={setSnackbarVarient}\r\n                    isLoadingData={showSkeleton}\r\n                    onEditUser={handleOpenEditUser(index)}\r\n                  />\r\n                ))\r\n              : users.map((user, index) => (\r\n                  <BodyRow\r\n                    key={user.id}\r\n                    user={user}\r\n                    setOpenSnackbar={setOpenSnackbar}\r\n                    setSnackbarVarient={setSnackbarVarient}\r\n                    isLoadingData={showSkeleton}\r\n                    onEditUser={handleOpenEditUser(index)}\r\n                  />\r\n                ))}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserTable;\r\n","export const isValidEmail = (email: string): boolean => {\r\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  };\r\n\r\n  export const ucWords = (text: string): string => text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();","import React from 'react';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Theme,\r\n  withStyles,\r\n  FormControl,\r\n  FormLabel,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  MenuItem\r\n} from '@material-ui/core';\r\nimport { orange } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\ninterface Props {\r\n  okLabel: 'Simpan';\r\n\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  contactNumber: string;\r\n  selectedlevelId: number;\r\n\r\n  setEmail: React.Dispatch<React.SetStateAction<string>>;\r\n  setFirstName: React.Dispatch<React.SetStateAction<string>>;\r\n  setLastName: React.Dispatch<React.SetStateAction<string>>;\r\n  setContactNumber: React.Dispatch<React.SetStateAction<string>>;\r\n  setSelectedlevelId: React.Dispatch<React.SetStateAction<number>>;\r\n\r\n  emailError: string;\r\n  firstNameError: string;\r\n  lastNameError: string;\r\n  contactNumberError: string;\r\n  levelIdError: string;\r\n\r\n  levelUser: LevelAccessUserDetailsModel[];\r\n  isSubmitting: boolean;\r\n  onSubmit: React.FormEventHandler;\r\n  onCancel: React.MouseEventHandler;\r\n}\r\n\r\nconst AddButton = withStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(orange[500]),\r\n    backgroundColor: '#53A0BE',\r\n    '&:hover': {\r\n      backgroundColor: orange[700]\r\n    }\r\n  }\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  controlDiv: {\r\n    '& > :nth-child(n+2)': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  },\r\n  cancelButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  addButton: {\r\n    color: '#FFFFFF'\r\n  }\r\n}));\r\n\r\nconst CreateUserForm: React.FC<Props> = props => {\r\n  const classes = useStyles();\r\n\r\n  const { email, setEmail, emailError } = props;\r\n  const { firstName, setFirstName, firstNameError } = props;\r\n  const { lastName, setLastName, lastNameError } = props;\r\n  const { contactNumber, setContactNumber, contactNumberError } = props;\r\n  const { selectedlevelId, setSelectedlevelId, levelIdError } = props;\r\n  const { isSubmitting, onSubmit, onCancel, okLabel, levelUser } = props;\r\n\r\n  const handleChange = () => {};\r\n  return (\r\n    <form noValidate onSubmit={onSubmit}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='firstName'\r\n            label='firstName'\r\n            error={firstNameError !== ''}\r\n            helperText={firstNameError}\r\n            value={firstName}\r\n            onChange={event => setFirstName(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='lastName'\r\n            label='lastName'\r\n            error={lastNameError !== ''}\r\n            helperText={lastNameError}\r\n            value={lastName}\r\n            onChange={event => setLastName(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='email'\r\n            label='Email'\r\n            error={emailError !== ''}\r\n            helperText={emailError}\r\n            value={email}\r\n            onChange={event => setEmail(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='contactNumber'\r\n            label='contactNumber '\r\n            error={contactNumberError !== ''}\r\n            helperText={contactNumberError}\r\n            value={contactNumber}\r\n            onChange={event => setContactNumber(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            select\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='level'\r\n            label='Level'\r\n            error={levelIdError !== ''}\r\n            helperText={levelIdError}\r\n            value={selectedlevelId}\r\n            onChange={event => setSelectedlevelId(+event.target.value)}\r\n            autoComplete='off'\r\n          >\r\n            {levelUser.map(levelUser => (\r\n              <MenuItem key={levelUser.id} value={levelUser.id}>\r\n                {levelUser.level}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n            <FormControl component='fieldset'>\r\n              <FormGroup>\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Mitra Page' />} label='Mitra Page' />\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Product Page' />} label='Product Page' />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n            <FormControl component='fieldset'>\r\n              <FormGroup>\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Data Stok' />} label='Data Stok' />\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Order Page' />} label='Order Page' />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n            <FormControl component='fieldset'>\r\n              <FormGroup>\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='invoice Page' />} label='invoice Page' />\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Commission Page' />} label='Commission Page' />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container item justify='flex-end' xs={12} sm={12} md={12} lg={12} xl={12} className={classes.controlDiv}>\r\n          <Button variant='contained' className={classes.cancelButton} onClick={onCancel} disabled={isSubmitting}>\r\n            Cancel\r\n          </Button>\r\n          <AddButton type='submit' variant='contained' color='primary' className={classes.addButton} disabled={isSubmitting}>\r\n            {okLabel}\r\n          </AddButton>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateUserForm;\r\n","import React, { useState } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { IconButton, Theme, makeStyles, Typography, Grid } from '@material-ui/core';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { isValidEmail } from '../../../../utils';\r\nimport { USER_BASE_URL } from '../../../../constants/url';\r\nimport CreateUserForm from './components/CreateUserForm';\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  levelUser: LevelAccessUserDetailsModel[];\r\n  addNewUser(user: UserDetailsModel): void;\r\n  handleCancel(): void;\r\n  setOpenSnackbar: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setSnackbarVarient: React.Dispatch<React.SetStateAction<'success' | 'error'>>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(4),\r\n    outline: 'none',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    borderRadius: 4\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n}));\r\n\r\nconst CreateUserModal: React.FC<Props> = props => {\r\n  const classes = useStyles();\r\n  let cancelTokenSource: CancelTokenSource;\r\n\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n\r\n  const [email, setEmail] = useState<string>('');\r\n  const [firstName, setFirstName] = useState<string>('');\r\n  const [lastName, setLastName] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('Passw0rd');\r\n  const [contactNumber, setContactNumber] = useState<string>('');\r\n  const [selectedLevelId, setSelectedLevelId] = useState<number>(0);\r\n\r\n  const [emailError, setEmailError] = useState<string>('');\r\n  const [firstNameError, setFirstNameError] = useState<string>('');\r\n  const [lastNameError, setLastNameError] = useState<string>('');\r\n  const [contactNumberError, setContactNumberError] = useState<string>('');\r\n  const [levelIdError, setLevelIdError] = useState<string>('');\r\n\r\n  const { open, levelUser, addNewUser, handleCancel, setOpenSnackbar, setSnackbarVarient } = props;\r\n\r\n  const handleClose = () => {\r\n    handleCancel();\r\n    clearFormValue();\r\n    clearFormErrors();\r\n  };\r\n\r\n  const clearFormValue = () => {\r\n    setEmail('');\r\n    setFirstName('');\r\n    setLastName('');\r\n    setContactNumber('');\r\n    setSelectedLevelId(0);\r\n  };\r\n\r\n  const clearFormErrors = () => {\r\n    setEmailError('');\r\n    setFirstNameError('');\r\n    setContactNumberError('');\r\n    setLevelIdError('');\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let ret = true;\r\n    clearFormErrors();\r\n\r\n    if (!email || !email.trim()) {\r\n      setEmailError('Please enter email');\r\n      ret = false;\r\n    } else if (!isValidEmail(email)) {\r\n      setEmailError('Please enter an valid email');\r\n      ret = false;\r\n    }\r\n\r\n    if (!firstName || !firstName.trim()) {\r\n      setFirstNameError('Please enter username');\r\n      ret = false;\r\n    }\r\n\r\n    if (!lastName || !lastName.trim()) {\r\n      setLastNameError('Please enter lastName');\r\n      ret = false;\r\n    }\r\n\r\n    if (!contactNumber || !contactNumber.trim()) {\r\n      setContactNumberError('Please enter contactNumber ');\r\n      ret = false;\r\n    }\r\n\r\n    // if (!selectedLevelId) {\r\n    //   setLevelIdError('Please select Level');\r\n    //   ret = false;\r\n    // }\r\n\r\n    return ret;\r\n  };\r\n\r\n  const handleOnSubmit: React.FormEventHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      cancelTokenSource = axios.CancelToken.source();\r\n      const response = await axios.post(\r\n        `${USER_BASE_URL}`,\r\n        {\r\n          firstName,\r\n          email,\r\n          contactNumber,\r\n          lastName,\r\n          password\r\n        },\r\n        { cancelToken: cancelTokenSource.token }\r\n      );\r\n      addNewUser(response.data.data);\r\n      setOpenSnackbar(true);\r\n      setSnackbarVarient('success');\r\n      handleClose();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Modal aria-labelledby='modal-title' open={open} disableBackdropClick={true}>\r\n      <Grid container item xs={8} sm={8} md={8} lg={5} xl={5} spacing={3} direction='column' className={classes.paper}>\r\n        <Typography variant='h4' id='modal-title'>\r\n          Tambah Data User\r\n        </Typography>\r\n        <IconButton size='small' className={classes.closeButton} onClick={handleClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <CreateUserForm\r\n          okLabel='Simpan'\r\n          email={email}\r\n          setEmail={setEmail}\r\n          emailError={emailError}\r\n          firstName={firstName}\r\n          setFirstName={setFirstName}\r\n          firstNameError={firstNameError}\r\n          lastName={lastName}\r\n          setLastName={setLastName}\r\n          lastNameError={lastNameError}\r\n          contactNumber={contactNumber}\r\n          setContactNumber={setContactNumber}\r\n          contactNumberError={contactNumberError}\r\n          selectedlevelId={selectedLevelId}\r\n          setSelectedlevelId={setSelectedLevelId}\r\n          levelIdError={levelIdError}\r\n          isSubmitting={isLoading}\r\n          onSubmit={handleOnSubmit}\r\n          onCancel={handleClose}\r\n          levelUser={levelUser}\r\n        />\r\n      </Grid>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateUserModal;\r\n","import React from 'react';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Button,\r\n  Theme,\r\n  withStyles,\r\n  FormControl,\r\n  FormLabel,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport { orange } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\ninterface Props {\r\n  okLabel: 'Add' | 'Edit';\r\n\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  contactNumber: string;\r\n  selectedlevelId: number;\r\n \r\n  setEmail: React.Dispatch<React.SetStateAction<string>>;\r\n  setFirstName: React.Dispatch<React.SetStateAction<string>>;\r\n  setLastName: React.Dispatch<React.SetStateAction<string>>;\r\n  setContactNumber: React.Dispatch<React.SetStateAction<string>>;\r\n  setSelectedlevelId: React.Dispatch<React.SetStateAction<number>>;\r\n\r\n  emailError: string;\r\n  firstNameError: string;\r\n  lastNameError: string;\r\n  contactNumberError: string;\r\n  levelIdError: string;\r\n\r\n  levelUser: LevelAccessUserDetailsModel[];\r\n  isSubmitting: boolean;\r\n  onSubmit: React.FormEventHandler;\r\n  onCancel: React.MouseEventHandler;\r\n}\r\n\r\nconst AddButton = withStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(orange[500]),\r\n    backgroundColor: '#EF965A',\r\n    '&:hover': {\r\n      backgroundColor: orange[700]\r\n    }\r\n  }\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  controlDiv: {\r\n    '& > :nth-child(n+2)': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  },\r\n  cancelButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  addButton: {\r\n    color: '#FFFFFF'\r\n  }\r\n}));\r\n\r\nconst EditUserForm: React.FC<Props> = props => {\r\n  const classes = useStyles();\r\n\r\n  const { email, setEmail, emailError } = props;\r\n  const { firstName, setFirstName, firstNameError } = props;\r\n  const { lastName, setLastName, lastNameError } = props;\r\n  const { contactNumber, setContactNumber, contactNumberError } = props;\r\n  const { selectedlevelId, setSelectedlevelId, levelIdError } = props;\r\n  const { isSubmitting, onSubmit, onCancel, okLabel, levelUser } = props;\r\n  const handleChange = () => {};\r\n\r\n  return (\r\n    <form noValidate onSubmit={onSubmit}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='firstName'\r\n            label='firstName'\r\n            error={firstNameError !== ''}\r\n            helperText={firstNameError}\r\n            value={firstName}\r\n            onChange={event => setFirstName(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='lastName'\r\n            label='lastName'\r\n            error={lastNameError !== ''}\r\n            helperText={lastNameError}\r\n            value={lastName}\r\n            onChange={event => setLastName(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='email'\r\n            label='Email'\r\n            error={emailError !== ''}\r\n            helperText={emailError}\r\n            value={email}\r\n            onChange={event => setEmail(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='contact'\r\n            label='Contact '\r\n            error={contactNumberError !== ''}\r\n            helperText={contactNumberError}\r\n            value={contactNumber}\r\n            onChange={event => setContactNumber(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            select\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='level'\r\n            label='Level'\r\n            error={levelIdError !== ''}\r\n            helperText={levelIdError}\r\n            value={selectedlevelId}\r\n            onChange={event => setSelectedlevelId(+event.target.value)}\r\n            autoComplete='off'\r\n          >\r\n            {levelUser.map(levelUser => (\r\n              <MenuItem key={levelUser.id} value={levelUser.id}>\r\n                {levelUser.level}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n            <FormControl component='fieldset'>\r\n              <FormGroup>\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Mitra Page' />} label='Mitra Page' />\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Product Page' />} label='Product Page' />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n            <FormControl component='fieldset'>\r\n              <FormGroup>\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Data Stok' />} label='Data Stok' />\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Order Page' />} label='Order Page' />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n            <FormControl component='fieldset'>\r\n              <FormGroup>\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='invoice Page' />} label='invoice Page' />\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Commission Page' />} label='Commission Page' />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container item justify='flex-end' xs={12} sm={12} md={12} lg={12} xl={12} className={classes.controlDiv}>\r\n          <Button variant='contained' className={classes.cancelButton} onClick={onCancel} disabled={isSubmitting}>\r\n            Cancel\r\n          </Button>\r\n          <AddButton type='submit' variant='contained' color='primary' className={classes.addButton} disabled={isSubmitting}>\r\n            {okLabel}\r\n          </AddButton>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditUserForm;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { IconButton, Theme, Modal, Grid, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport EditUserForm from './components/EditUserForm';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { USER_BASE_URL } from '../../../../constants/url';\r\nimport { isValidEmail } from 'utils';\r\ninterface Props {\r\n  user: UserDetailsModel;\r\n  open: boolean;\r\n  levelUser: LevelAccessUserDetailsModel[];\r\n  handleCancel(): void;\r\n  updateIndividualUser: (updatedUserProperties: Partial<UserDetailsModel>) => void;\r\n  setOpenSnackbar: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setSnackbarVarient: React.Dispatch<React.SetStateAction<'success' | 'error'>>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(4),\r\n    outline: 'none',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    borderRadius: 4\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n}));\r\n\r\nconst EditUserModal: React.FC<Props> = props => {\r\n  const classes = useStyles();\r\n  let cancelTokenSource: CancelTokenSource;\r\n\r\n  const { levelUser, user, open, handleCancel, setOpenSnackbar, setSnackbarVarient, updateIndividualUser } = props;\r\n\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n\r\n  const [email, setEmail] = useState<string>('');\r\n  const [firstName, setFirstName] = useState<string>('');\r\n  const [lastName, setLastName] = useState<string>('');\r\n  const [contactNumber, setContactNumber] = useState<string>('');\r\n  const [selectedLevelId, setSelectedLevelId] = useState<number>(0);\r\n\r\n  const [emailError, setEmailError] = useState<string>('');\r\n  const [firstNameError, setFirstNameError] = useState<string>('');\r\n  const [lastNameError, setLastNameError] = useState<string>('');\r\n  const [contactNumberError, setContactNumberError] = useState<string>('');\r\n  const [levelIdError, setLevelIdError] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n\r\n  const resetFormValues = useCallback(() => {\r\n    if (!user) {\r\n      return;\r\n    }\r\n\r\n    const { email, firstName, lastName, contactNumber, name } = user;\r\n\r\n    setEmail(email);\r\n    setFirstName(firstName);\r\n    setLastName(lastName);\r\n    setContactNumber(contactNumber);\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    resetFormValues();\r\n    clearFormErrors();\r\n  }, [resetFormValues]);\r\n\r\n  const clearFormErrors = () => {\r\n    setEmailError('');\r\n    setLastNameError('');\r\n    setContactNumberError('');\r\n    setLevelIdError('');\r\n  };\r\n\r\n  // This is to ensure that the form vale and erors are reset/cleared when user canceled the editing\r\n  const handleOnClose = () => {\r\n    resetFormValues();\r\n    clearFormErrors();\r\n    handleCancel();\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let ret = true;\r\n    clearFormErrors();\r\n\r\n    if (!email || !email.trim()) {\r\n      setEmailError('Please enter email');\r\n      ret = false;\r\n    } else if (!isValidEmail(email)) {\r\n      setEmailError('Please enter an valid email');\r\n      ret = false;\r\n    }\r\n\r\n    if (!firstName || !firstName.trim()) {\r\n      setFirstNameError('Please enter username');\r\n      ret = false;\r\n    }\r\n\r\n    if (!lastName || !lastName.trim()) {\r\n      setLastNameError('Please enter lastName');\r\n      ret = false;\r\n    }\r\n\r\n    if (!contactNumber || !contactNumber.trim()) {\r\n      setContactNumberError('Please enter contactNumber ');\r\n      ret = false;\r\n    }\r\n\r\n    // if (!selectedLevelId) {\r\n    //   setLevelIdError('Please select level');\r\n    //   ret = false;\r\n    // }\r\n\r\n    return ret;\r\n  };\r\n\r\n  const handleOnSubmit: React.FormEventHandler = async event => {\r\n    event.preventDefault();\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n    setLoading(true);\r\n\r\n    try {\r\n      cancelTokenSource = axios.CancelToken.source();\r\n      const response = await axios.post(\r\n        `${USER_BASE_URL}`,\r\n        {\r\n          id: user.id,\r\n          firstName,\r\n          email,\r\n          contactNumber,\r\n          lastName\r\n        },\r\n        { cancelToken: cancelTokenSource.token }\r\n      );\r\n\r\n      updateIndividualUser(response.data.data);\r\n      setOpenSnackbar(true);\r\n      setSnackbarVarient('success');\r\n      handleCancel();\r\n    } catch (err) {\r\n      console.log(err);\r\n      const { errorCode } = err.data;\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Modal aria-labelledby='modal-title' open={open} disableBackdropClick={true}>\r\n      <Grid container item xs={8} sm={8} md={8} lg={5} xl={5} spacing={3} direction='column' className={classes.paper}>\r\n        <Typography variant='h4' id='modal-title'>\r\n          Edit User\r\n        </Typography>\r\n        <IconButton size='small' className={classes.closeButton} onClick={handleOnClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <EditUserForm\r\n          okLabel='Edit'\r\n          email={email}\r\n          setEmail={setEmail}\r\n          emailError={emailError}\r\n          firstName={firstName}\r\n          setFirstName={setFirstName}\r\n          firstNameError={firstNameError}\r\n          lastName={lastName}\r\n          setLastName={setLastName}\r\n          lastNameError={lastNameError}\r\n          contactNumber={contactNumber}\r\n          setContactNumber={setContactNumber}\r\n          contactNumberError={contactNumberError}\r\n          selectedlevelId={selectedLevelId}\r\n          setSelectedlevelId={setSelectedLevelId}\r\n          levelIdError={levelIdError}\r\n          isSubmitting={isLoading}\r\n          onSubmit={handleOnSubmit}\r\n          onCancel={handleOnClose}\r\n          levelUser={levelUser}\r\n        />\r\n      </Grid>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditUserModal;\r\n","import React, { FC, useState } from 'react';\r\nimport { PopperPlacementType } from '@material-ui/core/Popper';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { IconButton, InputBase, Theme, Tooltip } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { fade } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props {\r\n  isAppbar?: boolean;\r\n  withTransition?: boolean;\r\n  withBorder?: boolean;\r\n  width?: number;\r\n  placeHolder?: string;\r\n  iconColor?: string;\r\n  tableSearchValue?: string;\r\n  setTableSearchValue?: React.Dispatch<React.SetStateAction<string>>;\r\n  globalSearchValue?: string;\r\n  setGlobalSearchValue?: React.Dispatch<React.SetStateAction<string>>;\r\n  openPopper?: boolean;\r\n  setOpenPopper?: React.Dispatch<React.SetStateAction<boolean>>;\r\n  isLoadingData?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.5),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 1)\r\n    },\r\n    marginRight: theme.spacing(1),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 'auto'\r\n    }\r\n  },\r\n  appbarSearch: {\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25)\r\n    }\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  searchIconCustomColor: (props: Props) => ({\r\n    color: props.iconColor\r\n  }),\r\n  clearIcon: {\r\n    color: '#ffffff'\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit'\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    width: '100%',\r\n    fontSize: '13px',\r\n    '&::placeholder': {\r\n      fontSize: '13px'\r\n    }\r\n  },\r\n  widthTransition: {\r\n    transition: theme.transitions.create('width'),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 100,\r\n      '&:focus': {\r\n        width: 120\r\n      }\r\n    }\r\n  },\r\n  bordered: {\r\n    border: `1px solid ${theme.border.primary}}`\r\n  },\r\n  customWidth: (props: Props) => ({\r\n    width: props.width\r\n  })\r\n}));\r\n\r\nconst SearchInput: FC<Props> = props => {\r\n  const classes = useStyles(props);\r\n\r\n  // eslint-disable-next-line\r\n  const [anchorEl, setAnchorEl] = useState<HTMLInputElement | null>(null);\r\n  // eslint-disable-next-line\r\n  const [placement, setPlacement] = useState<PopperPlacementType>();\r\n\r\n  const {\r\n    isAppbar = false,\r\n    withTransition = true,\r\n    withBorder = false,\r\n    width,\r\n    placeHolder = 'Search...',\r\n    iconColor,\r\n    tableSearchValue,\r\n    globalSearchValue,\r\n    // eslint-disable-next-line\r\n    openPopper,\r\n    setTableSearchValue,\r\n    setGlobalSearchValue,\r\n    // eslint-disable-next-line\r\n    setOpenPopper,\r\n    // eslint-disable-next-line\r\n    isLoadingData \r\n  } = props;\r\n\r\n  // This method use for global search client on AppHeader\r\n  const handleTextGlobalSearchChange = (event: any) => {\r\n    setGlobalSearchValue && setGlobalSearchValue(event.target.value);\r\n    setAnchorEl(event.currentTarget);\r\n    setPlacement('left-start');\r\n  };\r\n\r\n  // This method use for search on table\r\n  const handleTextTableSearchChange = (event: any) => {\r\n    setTableSearchValue && setTableSearchValue(event.target.value);\r\n  };\r\n\r\n  // This method use for clear search\r\n  const handleClearSearch = () => {\r\n    setTableSearchValue && setTableSearchValue('');\r\n    setGlobalSearchValue && setGlobalSearchValue('');\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.search, { [classes.bordered]: withBorder, [classes.appbarSearch]: isAppbar })}>\r\n      <div className={clsx(classes.searchIcon, { [classes.searchIconCustomColor]: iconColor })}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        autoComplete='off'\r\n        placeholder={placeHolder}\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: clsx(classes.inputInput, { [classes.widthTransition]: withTransition }, { [classes.customWidth]: width })\r\n        }}\r\n        inputProps={{ 'aria-label': 'Search' }}\r\n        value={isAppbar ? globalSearchValue : tableSearchValue}\r\n        onChange={event => (isAppbar ? handleTextGlobalSearchChange(event) : handleTextTableSearchChange(event))}\r\n      />\r\n      {tableSearchValue === '' || globalSearchValue === '' ? (\r\n        ''\r\n      ) : (\r\n        <Tooltip title='Clear'>\r\n          <IconButton size='small' onClick={handleClearSearch}>\r\n            <ClearIcon className={clsx(classes.clearIcon, { [classes.searchIconCustomColor]: iconColor })} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React, { FC } from 'react';\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, Grid, makeStyles, Theme, Typography } from '@material-ui/core';\r\nimport SuccessIcon from '@material-ui/icons/CheckCircle';\r\nimport WarningIcon from '@material-ui/icons/Error';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ErrorIcon from '@material-ui/icons/Close';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { orange } from '@material-ui/core/colors';\r\nimport { red, blue } from '@material-ui/core/colors';\r\n\r\ninterface Props {\r\n  variant: string;\r\n  titleMessage?: string;\r\n  message: string;\r\n  open: boolean;\r\n  handleClose(): void;\r\n  onConfirm?: React.MouseEventHandler<HTMLButtonElement>;\r\n  noCancelButton?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  successAvatarIcon: {\r\n    fontSize: 60,\r\n    color: green[500]\r\n  },\r\n  warnigAvatarIcon: {\r\n    fontSize: 60,\r\n    color: orange[500]\r\n  },\r\n  dangerAvatarIcon: {\r\n    width: 54,\r\n    height: 54,\r\n    color: '#f44336'\r\n  },\r\n  cancelButton: (props: Props) => ({\r\n    marginRight: theme.spacing(props.noCancelButton ? 0 : 3),\r\n    color: '#FFFF'\r\n  }),\r\n  okButton: {\r\n    backgroundColor: '#02A9EA',\r\n    '&:hover': {\r\n      backgroundColor: blue[700]\r\n    }\r\n  },\r\n  dialogActions: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  titleText: {\r\n    paddingBottom: 2\r\n  },\r\n  messageText: {\r\n    paddingBottom: theme.spacing(4)\r\n  },\r\n  iconGrid:{\r\n    marginTop: 4\r\n  }\r\n}));\r\n\r\nconst StandardConfirmationDialog: FC<Props> = props => {\r\n  const classes = useStyles(props);\r\n  const { variant, titleMessage, message, open, handleClose, onConfirm, noCancelButton } = props;\r\n\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        <Grid container justify='center' alignItems='center' className={classes.iconGrid}>\r\n          {variant === 'success' && <SuccessIcon className={classes.successAvatarIcon} />}\r\n          {variant === 'warning' && <WarningIcon className={classes.warnigAvatarIcon} />}\r\n          {variant === 'danger' && <DeleteOutlineIcon className={classes.dangerAvatarIcon} />}\r\n          {variant === 'error' && <ErrorIcon className={classes.dangerAvatarIcon} />}\r\n        </Grid>\r\n      </DialogTitle>\r\n      <DialogContent className={classes.titleText}>\r\n        <Typography variant='h4' component='p' align={'center'}>\r\n          {titleMessage}\r\n        </Typography>\r\n      </DialogContent>\r\n      <DialogContent className={classes.messageText}>\r\n        <Typography variant='h6' component='p' align={'center'}>\r\n          {message}\r\n        </Typography>\r\n      </DialogContent>\r\n      <DialogActions className={classes.dialogActions}>\r\n        <Grid container justify='center' alignItems='center'>\r\n          <Button disableElevation variant='contained' color={'default'} className={classes.cancelButton} onClick={handleClose}>\r\n            {noCancelButton ? 'Ok' : 'Cancel'}\r\n          </Button>\r\n          {!noCancelButton && (\r\n            <Button disableElevation variant='contained' className={classes.okButton} onClick={onConfirm}>\r\n              Konfirmasi\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default StandardConfirmationDialog;","import React, { forwardRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { BACKGROUND} from 'constants/colors';\r\n\r\ntype Props = {\r\n  title: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root:{\r\n    background: BACKGROUND,\r\n    paddingTop: 15\r\n  }\r\n})\r\n\r\n\r\nconst Page = forwardRef<HTMLDivElement, Props>((props, ref) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div ref={ref} className={classes.root}>\r\n      <Helmet>\r\n        <title>{props.title}</title>\r\n      </Helmet>\r\n      {props.children}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport { withStyles, createStyles, Theme, Switch } from '@material-ui/core';\r\n\r\nconst AntSwitch = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 28,\r\n      height: 16,\r\n      padding: 0,\r\n      display: 'flex'\r\n    },\r\n    switchBase: {\r\n      padding: 2,\r\n      color: theme.palette.grey[500],\r\n      '&$checked': {\r\n        transform: 'translateX(12px)',\r\n        color: theme.palette.common.white,\r\n        '& + $track': {\r\n          opacity: 1,\r\n          backgroundColor: theme.palette.primary.main,\r\n          borderColor: theme.palette.primary.main\r\n        }\r\n      }\r\n    },\r\n    thumb: {\r\n      width: 12,\r\n      height: 12,\r\n      boxShadow: 'none'\r\n    },\r\n    track: {\r\n      border: `1px solid ${theme.palette.grey[500]}`,\r\n      borderRadius: 16 / 2,\r\n      opacity: 1,\r\n      backgroundColor: theme.palette.common.white\r\n    },\r\n    checked: {}\r\n  })\r\n)(Switch);\r\n\r\nexport default AntSwitch;\r\n","import React from 'react';\r\nimport { withStyles, createStyles, Theme, Switch, SwitchClassKey, SwitchProps } from '@material-ui/core';\r\n\r\ninterface Styles extends Partial<Record<SwitchClassKey, string>> {\r\n  focusVisible?: string;\r\n}\r\n\r\ninterface Props extends SwitchProps {\r\n  classes: Styles;\r\n}\r\n\r\nconst IOSSwitch = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 42,\r\n      height: 26,\r\n      padding: 0,\r\n      margin: theme.spacing(1)\r\n    },\r\n    switchBase: {\r\n      padding: 1,\r\n      '&$checked': {\r\n        transform: 'translateX(16px)',\r\n        color: theme.palette.common.white,\r\n        '& + $track': {\r\n          backgroundColor: theme.palette.secondary,\r\n          opacity: 1,\r\n          border: 'none'\r\n        }\r\n      },\r\n      '&$focusVisible $thumb': {\r\n        color: '#52d869',\r\n        border: '6px solid #fff'\r\n      }\r\n    },\r\n    thumb: {\r\n      width: 24,\r\n      height: 24\r\n    },\r\n    track: {\r\n      borderRadius: 26 / 2,\r\n      border: `1px solid ${theme.palette.grey[400]}`,\r\n      backgroundColor: theme.palette.grey[50],\r\n      opacity: 1,\r\n      transition: theme.transitions.create(['background-color', 'border'])\r\n    },\r\n    checked: {},\r\n    focusVisible: {}\r\n  })\r\n)(({ classes, ...props }: Props) => {\r\n  return (\r\n    <Switch\r\n      focusVisibleClassName={classes.focusVisible}\r\n      disableRipple\r\n      classes={{\r\n        root: classes.root,\r\n        switchBase: classes.switchBase,\r\n        thumb: classes.thumb,\r\n        track: classes.track,\r\n        checked: classes.checked\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nexport default IOSSwitch;\r\n","import { withStyles, createStyles, Theme, Paper } from '@material-ui/core';\r\n\r\nconst PaperCustom = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n        padding: '24px',\r\n        marginTop: '24px',\r\n        marginBottom: '24px',\r\n        boxShadow: '0px 5px 12px rgba(0, 0, 0, 0.08)',\r\n        width:'100%'\r\n    },\r\n  })\r\n)(Paper);\r\n\r\nexport default PaperCustom;\r\n\r\n","import React, { FC } from 'react';\r\nimport { Breadcrumbs, Typography, makeStyles } from '@material-ui/core';\r\nimport Link from '@material-ui/core/Link';\r\nimport useRouter from 'hooks/useRouter';\r\nimport { ucWords } from 'utils';\r\n\r\nconst useStyles = makeStyles({\r\n  active: {\r\n    fontWeight: 500,\r\n    fontSize: '16px',\r\n    lineHeight: '16px'\r\n  },\r\n  link: {\r\n    fontWeight: 400,\r\n    fontSize: '16px',\r\n    lineHeight: '32px'\r\n  },\r\n  breadCrumb:{\r\n    marginTop: '3px'\r\n  }\r\n});\r\n\r\nconst Breadcrumb: FC = () => {\r\n  const classes = useStyles();\r\n  const { location, history } = useRouter();\r\n  const path = location.pathname.split('/').filter(x => x);\r\n\r\n  const handleClick = (path: string): React.MouseEventHandler => event => {\r\n    event.preventDefault();\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <Breadcrumbs aria-label='breadcrumb' className={classes.breadCrumb}>\r\n      <Link color='inherit' href='/' onClick={handleClick('/')}>\r\n        Beranda\r\n      </Link>\r\n      {path.map((value, index) =>\r\n        index === path.length - 1 ? (\r\n          <Typography className={classes.active}>{ucWords(value)}</Typography>\r\n        ) : (\r\n          <Link\r\n            color='inherit'\r\n            href={`/${path.slice(0, index + 1).join('/')}`}\r\n            onClick={handleClick(`/${path.slice(0, index + 1).join('/')}`)}\r\n            className={classes.link}\r\n          >\r\n            {ucWords(value)}\r\n          </Link>\r\n        )\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import { withStyles, createStyles, Theme, Table } from '@material-ui/core';\r\n\r\nconst TableCustom = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      borderCollapse: 'separate',\r\n      borderSpacing: '0 8px'\r\n    }\r\n  })\r\n)(Table);\r\n\r\nexport default TableCustom;\r\n","import { withStyles, createStyles, Theme, TableCell } from '@material-ui/core';\r\n\r\nconst TableCellHead = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      color: '#BFC5D2',\r\n      padding: '0px 24px 0px 0px',\r\n      border: 'none',\r\n      fontWeight: 500,\r\n      fontSize: '12px',\r\n      lineHeight: '14px',\r\n      letterSpacing: '1.12px',\r\n      textTransform: 'uppercase'\r\n    }\r\n  })\r\n)(TableCell);\r\n\r\nexport default TableCellHead;\r\n","import React, { FC } from 'react';\r\nimport { TableCell, TableSortLabel, Theme, makeStyles, createStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport { LabelImportantTwoTone } from '@material-ui/icons';\r\nimport TableCellHead from './TableCellHead';\r\n\r\ninterface Props {\r\n  id?: string;\r\n  pL?: string;\r\n  pR?: string;\r\n  pT?: string;\r\n  pB?: string;\r\n  align?: 'left' | 'center' | 'right' | 'justify' | 'inherit' | undefined;\r\n  verticalAlign?: 'top' | 'middle' | 'bottom';\r\n  isCheckBox?: boolean;\r\n  orderBy?: string;\r\n  order?: 'asc' | 'desc';\r\n  sort?: boolean;\r\n  onRequestSort?: (event: React.MouseEvent<unknown>, property: string) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: 'none'\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1\r\n    }\r\n  })\r\n);\r\n\r\nconst HeaderCell: FC<Props> = props => {\r\n  const { id, pL, pR, pT, pB, order, orderBy, align, sort, onRequestSort } = props;\r\n  const classes = useStyles(props);\r\n\r\n  const createSortHandler = (property: string) => (event: React.MouseEvent<unknown>) => {\r\n    onRequestSort!(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableCellHead variant='head' align={align} size='small'>\r\n      {sort && sort! ? (\r\n        <TableSortLabel active={orderBy === id} direction={orderBy === id ? order : 'asc'} onClick={createSortHandler(id ? id : '')}>\r\n          {props.children}\r\n          {orderBy === id ? <span className={classes.visuallyHidden}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</span> : null}\r\n        </TableSortLabel>\r\n      ) : (\r\n        props.children\r\n      )}\r\n    </TableCellHead>\r\n  );\r\n};\r\n\r\nexport default HeaderCell;\r\n","import React, { FC } from 'react';\r\nimport { TableRow, Checkbox } from '@material-ui/core';\r\nimport HeaderCell from './HeaderCell';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxOutlinedUncompletedIcon from '@material-ui/icons/IndeterminateCheckBox';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\ninterface Header {\r\n  label: string;\r\n  id?: string;\r\n  pT?: string;\r\n  pR?: string;\r\n  pB?: string;\r\n  pL?: string;\r\n  verticalAlign?: 'top' | 'middle' | 'bottom';\r\n  isCheckBox?: boolean;\r\n  checked?: number[];\r\n  rowsPerPage?: number;\r\n  align?: 'left' | 'center' | 'right' | 'justify' | 'inherit' | undefined;\r\n  sort?: boolean;\r\n  handleCheckAll?: () => void;\r\n}\r\n\r\ninterface Props {\r\n  headers: Header[];\r\n  height?: number | string;\r\n  order?: 'asc' | 'desc';\r\n  orderBy?: string;\r\n  onRequestSort?: (event: React.MouseEvent<unknown>, property: string) => void;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableRow: (props: Props) => ({\r\n    height: '20px'\r\n  }),\r\n  checkBox: {\r\n    '&&:hover': {\r\n      backgroundColor: 'transparent'\r\n    }\r\n  },\r\n  checkBoxSize: {\r\n    fontSize: '16px'\r\n  }\r\n}));\r\n\r\nconst HeaderRow: FC<Props> = props => {\r\n  const classes = useStyles(props);\r\n  const { headers, orderBy, order, onRequestSort } = props;\r\n\r\n  const renderContent = () => {\r\n    return headers.map(header => {\r\n      const countChecked = header.checked && header.checked.length;\r\n      const totalShouldBeChecked = header.rowsPerPage && header.rowsPerPage;\r\n      const renderCheckBoxIcon = () => {\r\n        if (countChecked !== 0) {\r\n          if (countChecked !== totalShouldBeChecked) {\r\n            return <CheckBoxOutlinedUncompletedIcon className={classes.checkBoxSize} />;\r\n          } else {\r\n            return <CheckBoxIcon className={classes.checkBoxSize} />;\r\n          }\r\n        }\r\n      };\r\n      return (\r\n        <HeaderCell\r\n          key={header.label}\r\n          pL={header.pL}\r\n          pR={header.pR}\r\n          pT={header.pT}\r\n          pB={header.pB}\r\n          align={header.align}\r\n          verticalAlign={header.verticalAlign}\r\n          isCheckBox={header.isCheckBox}\r\n          orderBy={orderBy}\r\n          order={order}\r\n          sort={header.sort}\r\n          id={header.id}\r\n          onRequestSort={onRequestSort!}\r\n        >\r\n          {header.isCheckBox ? (\r\n            <Checkbox\r\n              key={header.label}\r\n              icon={<CheckBoxOutlineBlankIcon className={classes.checkBoxSize} />}\r\n              checkedIcon={renderCheckBoxIcon()}\r\n              edge='start'\r\n              color='primary'\r\n              className={classes.checkBox}\r\n              checked={countChecked !== 0 ? true : false}\r\n              tabIndex={-1}\r\n              disableRipple\r\n              onChange={header.handleCheckAll}\r\n            />\r\n          ) : (\r\n            header.label\r\n          )}\r\n        </HeaderCell>\r\n      );\r\n    });\r\n  };\r\n  return <TableRow className={classes.tableRow}>{renderContent()}</TableRow>;\r\n};\r\n\r\nexport default HeaderRow;\r\n","import React, { FC } from 'react';\r\nimport clsx from 'clsx';\r\nimport { GREY } from 'constants/colors';\r\nimport { TableCell, Collapse, makeStyles } from '@material-ui/core';\r\nimport TableRowCustom from './TableRowCustom';\r\n\r\ninterface Props {\r\n  colSpan: number;\r\n  open: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  expand: {\r\n    border: `1px solid ${GREY}`,\r\n    borderRadius: 5\r\n  },\r\n  normal: {\r\n    border: 'none'\r\n  }\r\n});\r\n\r\nconst TableRowCollapse: FC<Props> = props => {\r\n  const { expand, normal } = useStyles();\r\n  return (\r\n    <TableRowCustom>\r\n      <TableCell colSpan={props.colSpan} className={clsx({ [expand]: props.open, [normal]: !props.open })}>\r\n        <Collapse in={props.open} timeout='auto' unmountOnExit>\r\n          {props.children}\r\n        </Collapse>\r\n      </TableCell>\r\n    </TableRowCustom>\r\n  );\r\n};\r\n\r\nexport default TableRowCollapse;\r\n","import React, { FC, useState, useContext, useEffect, useCallback } from 'react';\r\nimport { green } from '@material-ui/core/colors';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport useRouter from 'hooks/useRouter';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport clsx from 'clsx';\r\nimport { Button, Container, Divider, Grid, makeStyles, Paper, Theme, Typography, Breadcrumbs, Link } from '@material-ui/core';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ActionSnackBar from 'components/ActionSnackBar';\r\nimport { USER_BASE_URL, ACCESS_USER_BASE_URL } from 'constants/url';\r\nimport UserTable from './components/UserTable';\r\nimport CreateUserModal from './components/CreateUserModal';\r\nimport EditUserModal from './components/EditUserModal';\r\nimport SearchInput from 'components/SearchInput';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport { Page } from 'components';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(2),\r\n    margin: 'auto'\r\n  },\r\n  text: {\r\n    fontWeight: 'bold',\r\n    fontSize: '30px',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3)\r\n  },\r\n  textSpace: {\r\n    fontWeight: 'bold',\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  divider: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  container: {\r\n    '& > :nth-child(n+2)': {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  },\r\n  tableRoot: {\r\n    width: '100%',\r\n    overflowX: 'auto'\r\n  },\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  button: {\r\n    paddingTop: theme.spacing(4)\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  addButton: {\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  extendedIcon: {\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  addGrid: {\r\n    textAlign: 'end'\r\n  },\r\n  leftHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2)\r\n  },\r\n  rightHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    paddingRight: theme.spacing(1.5)\r\n  },\r\n  Button: {\r\n    width: '70%'\r\n  },\r\n  ButtonNew: {\r\n    width: '130%'\r\n  }\r\n}));\r\n\r\nconst UserPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { history } = useRouter();\r\n\r\n  const dummyUser: UserDetailsModel = {\r\n    id: 0,\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    contactNumber: '',\r\n    name: '',\r\n    role: '',\r\n    roleId: 0\r\n  };\r\n\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n  const [snackbarVarient, setSnackbarVarient] = useState<'success' | 'error'>('success');\r\n  const [users, setUsers] = useState<UserDetailsModel[]>([dummyUser]);\r\n  const [query, setQuery] = useState<string>('');\r\n  const [queryString, setQueryString] = useState<string>();\r\n  const [isSearchUserError, setSearchUserError] = useState<boolean>(false);\r\n  const [openEditUser, setOpenEditUser] = useState<boolean>(false);\r\n  const [isSearchingUser, setSearchingUser] = useState<boolean>(false);\r\n  const [openCreateUserModal, setOpenCreateUserModal] = useState<boolean>(false);\r\n  const [currentEditingUserIndex, setCurrentEditingUserIndex] = useState<number>(0);\r\n  const [levelUser, setLevelUser] = useState<LevelAccessUserDetailsModel[]>([]);\r\n\r\n  useEffect(() => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n\r\n    const getAllRoles = async () => {\r\n      try {\r\n        const { data } = await axios.get(ACCESS_USER_BASE_URL, { cancelToken: cancelTokenSource.token });\r\n\r\n        let roleData: LevelAccessUserDetailsModel[] = [...levelUser];\r\n        data.roles.map((value: any) => roleData.push({ id: value.id, name: value.name }));\r\n        setLevelUser(roleData);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    getAllRoles();\r\n\r\n    return () => {\r\n      // Canceling the request if component is unmounted\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, []);\r\n\r\n  const performActionAndRevertPage = (action: React.Dispatch<React.SetStateAction<any>>, actionParam: any) => {\r\n    action(actionParam);\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  const addNewUser = (user: UserDetailsModel) => {\r\n    user.new = true;\r\n    users.unshift(user);\r\n    setUsers([...users]);\r\n  };\r\n\r\n  const handleCancelEditUser = () => {\r\n    setOpenEditUser(false);\r\n  };\r\n\r\n  const handleOpenEditUser = (userIndex: number): React.MouseEventHandler => () => {\r\n    setCurrentEditingUserIndex(userIndex);\r\n    setOpenEditUser(true);\r\n  };\r\n\r\n  const handleOpenCreateUser = () => {\r\n    setOpenCreateUserModal(true);\r\n  };\r\n\r\n  const handleCancelCreateUser = () => {\r\n    setOpenCreateUserModal(false);\r\n  };\r\n\r\n  const handleSearch = useCallback((searchQuery: string) => {\r\n    performActionAndRevertPage(setQueryString, searchQuery);\r\n  }, []);\r\n\r\n  // Search Client whenever rowsPerPage, currentPage, queryString, user, and filterby changes\r\n  const fetchData = useCallback(() => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n\r\n    const getQueryParams = () => {\r\n      const params = new URLSearchParams();\r\n      if (queryString) {\r\n        params.append('q', queryString);\r\n      }\r\n\r\n      return params.toString();\r\n    };\r\n\r\n    const searchUser = async () => {\r\n      setSearchingUser(true);\r\n      setSearchUserError(false);\r\n\r\n      try {\r\n        const url = `${USER_BASE_URL}?${getQueryParams()}`;\r\n        const { data } = await axios.get(url, { cancelToken: cancelTokenSource.token });\r\n        setUsers(data.data);\r\n      } catch (err) {\r\n        setSearchUserError(true);\r\n      }\r\n\r\n      setSearchingUser(false);\r\n    };\r\n\r\n    searchUser();\r\n\r\n    return () => {\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, [queryString]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const debouncedSearchTerm = useDebounce(query, 500);\r\n  // Load User data to populate on search list\r\n  useEffect(() => {\r\n    if (debouncedSearchTerm.length >= 3) {\r\n      handleSearch(debouncedSearchTerm);\r\n    } else if (debouncedSearchTerm.length === 0) {\r\n      handleSearch(debouncedSearchTerm);\r\n    }\r\n  }, [debouncedSearchTerm, handleSearch]);\r\n\r\n  const onClickHandler: React.MouseEventHandler = event => {\r\n    event.preventDefault();\r\n\r\n    history.push('/access');\r\n  };\r\n  const updateIndividualUser = (userIndex: number) => {\r\n    return (updatedUserProperties: Partial<UserDetailsModel>) => {\r\n      setUsers(\r\n        users!.map((user, index) => {\r\n          if (index !== userIndex) {\r\n            return user;\r\n          }\r\n\r\n          return Object.assign({}, user, updatedUserProperties);\r\n        })\r\n      );\r\n    };\r\n  };\r\n\r\n  const onClick: React.MouseEventHandler = event => {\r\n    event.preventDefault();\r\n\r\n    history.push('/settings');\r\n  };\r\n\r\n  return (\r\n    <Page title='User'>\r\n      <Container maxWidth='lg' className={clsx(classes.root, classes.container)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item sm={6}>\r\n            <Typography className={classes.text} variant='h3'>\r\n              Pengaturan\r\n            </Typography>\r\n\r\n            <Breadcrumbs aria-label='breadcrumb'>\r\n              <Link variant='h6' color='inherit' onClick={onClick}>\r\n                Awal\r\n              </Link>\r\n\r\n              <Typography variant='h6' color='textPrimary'>\r\n                Pengguna\r\n              </Typography>\r\n            </Breadcrumbs>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider className={classes.divider} />\r\n        <Paper className={classes.paper}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\r\n              <Grid container direction='row' justify='flex-start' alignItems='center' className={classes.leftHeader}>\r\n                <SearchInput\r\n                  withBorder\r\n                  withTransition={false}\r\n                  width={150}\r\n                  placeHolder='Pencarian'\r\n                  iconColor='#989898'\r\n                  tableSearchValue={query}\r\n                  setTableSearchValue={setQuery}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n              <Grid container direction='row' justify='flex-end' alignItems='center' className={classes.rightHeader}>\r\n                <Button className={classes.Button} color='primary' size='medium' variant='outlined' onClick={onClickHandler}>\r\n                  <LockOpenIcon className={classes.extendedIcon} />\r\n                  Level Akses\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n              <Grid container direction='row' justify='flex-end' alignItems='center' className={classes.rightHeader}>\r\n                <Button\r\n                  className={classes.ButtonNew}\r\n                  color='primary'\r\n                  size='medium'\r\n                  variant='contained'\r\n                  onClick={() => {\r\n                    handleOpenCreateUser();\r\n                  }}\r\n                >\r\n                  <AddBoxIcon className={classes.extendedIcon} />\r\n                  Tambah User Baru\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <UserTable\r\n            isLoadingData={isSearchingUser}\r\n            users={users}\r\n            handleOpenEditUser={handleOpenEditUser}\r\n            handleCancelEditUser={handleCancelEditUser}\r\n            setOpenSnackbar={setOpenSnackbar}\r\n            setSnackbarVarient={setSnackbarVarient}\r\n            updateIndividualUser={updateIndividualUser}\r\n          />\r\n          <CreateUserModal\r\n            open={openCreateUserModal}\r\n            handleCancel={handleCancelCreateUser}\r\n            addNewUser={addNewUser}\r\n            setOpenSnackbar={setOpenSnackbar}\r\n            setSnackbarVarient={setSnackbarVarient}\r\n            levelUser={levelUser}\r\n          />\r\n          <EditUserModal\r\n            open={openEditUser}\r\n            user={users[currentEditingUserIndex]}\r\n            handleCancel={handleCancelEditUser}\r\n            setOpenSnackbar={setOpenSnackbar}\r\n            setSnackbarVarient={setSnackbarVarient}\r\n            updateIndividualUser={updateIndividualUser(currentEditingUserIndex)}\r\n            levelUser={levelUser}\r\n          />\r\n        </Paper>\r\n        <ActionSnackBar\r\n          variant={snackbarVarient}\r\n          message={snackbarVarient === 'success' ? 'Operation is successful' : 'Operation failed'}\r\n          open={openSnackbar}\r\n          handleClose={handleCloseSnackbar}\r\n          Icon={snackbarVarient === 'success' ? CheckCircleIcon : ErrorIcon}\r\n        />\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { FC } from 'react';\r\nimport { TableCell, Typography, Theme, withStyles } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props {\r\n  cellWidth?: string;\r\n  pL?: string;\r\n  pR?: string;\r\n  pT?: string;\r\n  pB?: string;\r\n  colSpan?: number;\r\n  rowSpan?: number;\r\n  align?: 'left' | 'right' | 'inherit' | 'center' | 'justify' | undefined;\r\n  isComponent?: boolean;\r\n  isRemoveBorderBottom?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  bodyCellText: {\r\n    color: theme.palette.common.black\r\n  },\r\n  hideBorder: (props: Props) => ({\r\n    '&.MuiTableCell-root': {\r\n      borderBottom: props.isRemoveBorderBottom === false || props.isRemoveBorderBottom === null ? '1' : 'none'\r\n    }\r\n  }),\r\n  customWidth: (props: Props) => ({\r\n    width: props.cellWidth\r\n  }),\r\n  customPadding: (props: Props) => ({\r\n    paddingLeft: props.pL === '' || props.pL === null ? theme.spacing(0) : props.pL,\r\n    paddingRight: props.pR === '' || props.pR === null ? theme.spacing(0) : props.pR,\r\n    paddingTop: props.pT === '' || props.pT === null ? theme.spacing(0) : props.pT,\r\n    paddingBottom: props.pB === '' || props.pB === null ? theme.spacing(0) : props.pB\r\n  })\r\n}));\r\n\r\nconst BodyCell: FC<Props> = props => {\r\n  const { cellWidth, pL, pR, pT, pB, align, colSpan, rowSpan, isComponent, isRemoveBorderBottom } = props;\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <TableCell\r\n      align={align}\r\n      rowSpan={rowSpan}\r\n      colSpan={colSpan}\r\n      className={clsx(\r\n        { [classes.hideBorder]: isRemoveBorderBottom },\r\n        { [classes.customWidth]: cellWidth },\r\n        { [classes.customPadding]: pL || pR || pT || pB }\r\n      )}\r\n    >\r\n      {isComponent ? (\r\n        props.children\r\n      ) : (\r\n        <Typography variant='body1' className={classes.bodyCellText}>\r\n          {props.children}\r\n        </Typography>\r\n      )}\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nexport default BodyCell;\r\n","import React, { FC, Fragment, useState } from 'react';\r\nimport {\r\n  TableRow,\r\n  makeStyles,\r\n  Theme,\r\n  Avatar,\r\n  Typography,\r\n  IconButton,\r\n  CircularProgress,\r\n  Menu,\r\n  MenuItem,\r\n  Checkbox,\r\n  Button,\r\n  Chip\r\n} from '@material-ui/core';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { grey, green, red } from '@material-ui/core/colors';\r\nimport BodyCell from 'components/BodyCell';\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\ninterface Props {\r\n  isLoadingData: boolean;\r\n  levelUser: LevelAccessUserDetailsModel;\r\n  onEditLevelAccess: React.MouseEventHandler;\r\n  setOpenSnackbar: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setSnackbarVarient: React.Dispatch<React.SetStateAction<'success' | 'error'>>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tableRow: {\r\n    height: 64\r\n  },\r\n  tableCellInner: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    display: 'inline-flex',\r\n    fontSize: '14px',\r\n    fontWeight: 500,\r\n    height: '36px',\r\n    width: '36px'\r\n  },\r\n  menuAvatar: {\r\n    backgroundColor: '#ffffff',\r\n    display: 'inline-flex',\r\n    fontSize: '14px',\r\n    fontWeight: 500,\r\n    height: '36px',\r\n    width: '36px',\r\n    color: '#707070'\r\n  },\r\n  menuList: {\r\n    minHeight: 30\r\n  },\r\n  chip: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  nameTextCell: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  otherTextCell: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  secondText: {\r\n    color: grey[500]\r\n  },\r\n  circle: {\r\n    height: theme.spacing(3),\r\n    width: theme.spacing(3),\r\n    borderRadius: '50%',\r\n    display: 'inline-block',\r\n    backgroundColor: green[500],\r\n    marginRight: theme.spacing(1),\r\n    content: \"''\"\r\n  },\r\n  redCircle: {\r\n    backgroundColor: red[500]\r\n  },\r\n  actionCell: {\r\n    '& > :nth-child(n+2)': {\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n  },\r\n  wrapper: {\r\n    position: 'relative'\r\n  },\r\n\r\n  newIcon: {\r\n    color: green[500]\r\n  }\r\n}));\r\n\r\nconst BodyRow: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { isLoadingData, levelUser, onEditLevelAccess, setOpenSnackbar, setSnackbarVarient } = props;\r\n\r\n  const { level, accessRight, new: isNew } = levelUser;\r\n\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n  return (\r\n    <TableRow className={classes.tableRow}>\r\n      <BodyCell cellWidth='25%' pR='5px'>\r\n        {isLoadingData ? <Skeleton width={100} height={25} /> : level}\r\n      </BodyCell>\r\n      <Chip label={accessRight} className={classes.chip} variant='default' color='secondary' />\r\n\r\n      <BodyCell cellWidth='5%' isComponent={true}>\r\n        {isLoadingData ? null : (\r\n          <Fragment>\r\n            <Button variant='text' size='small' color='primary' onClick={onEditLevelAccess}>\r\n              Edit\r\n            </Button>\r\n          </Fragment>\r\n        )}\r\n      </BodyCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default BodyRow;\r\n","import React, { FC, Fragment, useState, useEffect, useContext, useCallback } from 'react';\r\nimport{ CancelTokenSource } from 'axios';\r\nimport { Theme, makeStyles, Table, TableBody, TableHead, Modal } from '@material-ui/core';\r\nimport BodyRow from './components/BodyRow';\r\nimport HeaderRow from 'components/HeaderRow';\r\nimport TablePagination from 'components/TablePagination';\r\nimport { StandardConfirmationDialog } from 'components/AppDialog';\r\n\r\ninterface Props {\r\n  isLoadingData: boolean;\r\n  levelUsers: LevelAccessUserDetailsModel[];\r\n  handleCancelEditLevelUser: () => void;\r\n  setOpenSnackbar: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setSnackbarVarient: React.Dispatch<React.SetStateAction<'success' | 'error'>>;\r\n  handleOpenEditLevelAccess: (accessIndex: number) => React.MouseEventHandler;\r\n }\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tableWrapper: {\r\n    overflowX: 'auto'\r\n  },\r\n  headerPageTitleContainer: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingLeft: theme.spacing(0)\r\n  }\r\n}));\r\n\r\nconst LevelAccesUserTable: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  let cancelTokenSource: CancelTokenSource;\r\n\r\n  const { isLoadingData, levelUsers, setOpenSnackbar, setSnackbarVarient, handleOpenEditLevelAccess } = props;\r\n\r\n  const dummyLevelUser: LevelAccessUserDetailsModel = {\r\n    id: 0,\r\n    name:'',\r\n    level: 'Superadmin',\r\n    accessRight: 'Stok'\r\n  };\r\n\r\n  const [showSkeleton, setShowSkeleton] = useState<boolean>(false);\r\n  useEffect(() => {\r\n    let timeout: NodeJS.Timeout;\r\n\r\n    if (isLoadingData) {\r\n      timeout = setTimeout(() => {\r\n        setShowSkeleton(true);\r\n      }, 500);\r\n    }\r\n\r\n    setShowSkeleton(false);\r\n\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [isLoadingData]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.tableWrapper}>\r\n        <Table>\r\n          <TableHead>\r\n            <HeaderRow\r\n              headers={[\r\n                { label: 'LEVEL ', pL: '25', pR: '25px', verticalAlign: 'top' },\r\n                { label: 'HAK AKSES', pL: '25px', pR: '25px', verticalAlign: 'top' },\r\n                { label: '', pL: '25px', pR: '25px', verticalAlign: 'top' }\r\n              ]}\r\n            />\r\n          </TableHead>\r\n          <TableBody>\r\n            {showSkeleton\r\n              ? [1, 2, 3, 4, 5, 6].map(index => (\r\n                  <BodyRow\r\n                    key={index}\r\n                    levelUser={dummyLevelUser}\r\n                    setOpenSnackbar={setOpenSnackbar}\r\n                    setSnackbarVarient={setSnackbarVarient}\r\n                    isLoadingData={showSkeleton}\r\n                    onEditLevelAccess={handleOpenEditLevelAccess(index)}\r\n                  />\r\n                ))\r\n              : levelUsers.map((levelUser, index) => (\r\n                  <BodyRow\r\n                    key={levelUser.id}\r\n                    levelUser={levelUser}\r\n                    setOpenSnackbar={setOpenSnackbar}\r\n                    setSnackbarVarient={setSnackbarVarient}\r\n                    isLoadingData={showSkeleton}\r\n                    onEditLevelAccess={handleOpenEditLevelAccess(index)}\r\n                  />\r\n                ))}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LevelAccesUserTable;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Button,\r\n  Theme,\r\n  withStyles,\r\n  FormControl,\r\n  FormLabel,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport { orange } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\ninterface Props {\r\n  okLabel: 'Simpan';\r\n  level: string;\r\n  accessRight: string;\r\n\r\n  setLevel: React.Dispatch<React.SetStateAction<string>>;\r\n  setAccessRight: React.Dispatch<React.SetStateAction<string>>;\r\n\r\n  levelError: string;\r\n  accessRightError: string;\r\n\r\n  isSubmitting: boolean;\r\n  onSubmit: React.FormEventHandler;\r\n  onCancel: React.MouseEventHandler;\r\n}\r\n\r\nconst AddButton = withStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(orange[500]),\r\n    backgroundColor: '#EF965A',\r\n    '&:hover': {\r\n      backgroundColor: orange[700]\r\n    }\r\n  }\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  controlDiv: {\r\n    '& > :nth-child(n+2)': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  },\r\n  cancelButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  addButton: {\r\n    color: '#FFFFFF'\r\n  }\r\n}));\r\n\r\nconst EditLevelAccessUserForm: React.FC<Props> = props => {\r\n  const classes = useStyles();\r\n\r\n  const { level, setLevel, levelError } = props;\r\n  const { accessRightError, setAccessRight, accessRight } = props;\r\n  const { isSubmitting, onSubmit, onCancel, okLabel } = props;\r\n  const [openConfirmationModal, setOpenConfirmationModal] = useState<boolean>(false);\r\n  const [snackbarVarient, setSnackbarVarient] = useState<'success' | 'error'>('success');\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const handleChange = () => {};\r\n\r\n  const handleOpenConfirmation = () => {\r\n    setOpenConfirmationModal(true);\r\n  };\r\n\r\n  const handleCancelConfirmation = () => {\r\n    setOpenConfirmationModal(false);\r\n  };\r\n\r\n  const handleClose = () => {};\r\n\r\n  return (\r\n    <form noValidate onSubmit={onSubmit}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='level'\r\n            label='Level'\r\n            error={levelError !== ''}\r\n            helperText={levelError}\r\n            value={level}\r\n            onChange={event => setLevel(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <FormControl component='fieldset'>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Mitra Page' />}\r\n                label='Mitra Page'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Product Page' />}\r\n                label='Product Page'\r\n              />\r\n            </FormGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n          <FormControl component='fieldset'>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Data Stok' />}\r\n                label='Data Stok'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Order Page' />}\r\n                label='Order Page'\r\n              />\r\n            </FormGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n          <FormControl component='fieldset'>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='invoice Page' />}\r\n                label='invoice Page'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Commission Page' />}\r\n                label='Commission Page'\r\n              />\r\n            </FormGroup>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid container item justify='flex-end' xs={12} sm={12} md={12} lg={12} xl={12} className={classes.controlDiv}>\r\n          <Button\r\n            variant='contained'\r\n            className={classes.cancelButton}\r\n            disabled={isSubmitting}\r\n            onClick={() => {\r\n              handleOpenConfirmation();\r\n            }}\r\n          >\r\n            Batal\r\n          </Button>\r\n          <AddButton type='submit' variant='contained' color='primary' className={classes.addButton} disabled={isSubmitting}>\r\n            {okLabel}\r\n          </AddButton>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditLevelAccessUserForm;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { IconButton, Theme, makeStyles, Typography, Grid } from '@material-ui/core';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { GET_EDIT_ACCESS_USER_URL } from '../../../constants/url';\r\nimport EditLevelAccessUserForm from './components/EditLevelAccessUserForm';\r\n\r\ninterface Props {\r\n  levelUser?: LevelAccessUserDetailsModel;\r\n  open: boolean;\r\n  handleCancel(): void;\r\n  updateIndividualLevelUser: (updatedLevelUserProperties: Partial<LevelAccessUserDetailsModel>) => void;\r\n  setOpenSnackbar: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setSnackbarVarient: React.Dispatch<React.SetStateAction<'success' | 'error'>>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(4),\r\n    outline: 'none',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    borderRadius: 4\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n}));\r\n\r\nconst EditLevelAccessUserModal: React.FC<Props> = props => {\r\n  const classes = useStyles();\r\n  let cancelTokenSource: CancelTokenSource;\r\n\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n  const [level, setLevel] = useState<string>('');\r\n  const [accessRight, setAccessRight] = useState<string>('');\r\n  const [levelError, setLevelError] = useState<string>('');\r\n  const [accessRightError, setAccessRightError] = useState<string>('');\r\n  const { open, handleCancel, setOpenSnackbar, setSnackbarVarient, levelUser, updateIndividualLevelUser } = props;\r\n\r\n  const resetFormValues = useCallback(() => {\r\n    if (!levelUser) {\r\n      return;\r\n    }\r\n\r\n    const { level, accessRight } = levelUser;\r\n  }, [levelUser]);\r\n\r\n  useEffect(() => {\r\n    resetFormValues();\r\n    clearFormErrors();\r\n  }, [resetFormValues]);\r\n\r\n  const clearFormErrors = () => {\r\n    setLevelError('');\r\n    setAccessRightError('');\r\n  };\r\n\r\n  const handleOnClose = () => {\r\n    resetFormValues();\r\n    clearFormErrors();\r\n    handleCancel();\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let ret = true;\r\n    clearFormErrors();\r\n\r\n    if (!level || !level.trim()) {\r\n      setLevelError('Please enter Level');\r\n      ret = false;\r\n    }\r\n\r\n    if (!accessRight || !accessRight.trim()) {\r\n      setAccessRightError('Please enter acces user');\r\n      ret = false;\r\n    }\r\n\r\n    return ret;\r\n  };\r\n\r\n  const handleOnSubmit: React.FormEventHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      cancelTokenSource = axios.CancelToken.source();\r\n      const response = await axios.post(\r\n        `${GET_EDIT_ACCESS_USER_URL(levelUser!.id)}`,\r\n        {\r\n          level,\r\n          accessRight\r\n        },\r\n        { cancelToken: cancelTokenSource.token }\r\n      );\r\n      updateIndividualLevelUser(response.data);\r\n      setOpenSnackbar(true);\r\n      setSnackbarVarient('success');\r\n      handleCancel();\r\n    } catch (err) {\r\n      console.log(err);\r\n      const { errorCode } = err.data;\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Modal aria-labelledby='modal-title' open={open} disableBackdropClick={true}>\r\n      <Grid container item xs={8} sm={8} md={8} lg={5} xl={5} spacing={3} direction='column' className={classes.paper}>\r\n        <Typography variant='h4' id='modal-title'>\r\n          Edit Hak Akses\r\n        </Typography>\r\n        <IconButton size='small' className={classes.closeButton} onClick={handleOnClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <EditLevelAccessUserForm\r\n          okLabel='Simpan'\r\n          level={level}\r\n          accessRight={accessRight}\r\n          setLevel={setLevel}\r\n          setAccessRight={setAccessRight}\r\n          levelError={levelError}\r\n          accessRightError={accessRightError}\r\n          isSubmitting={isLoading}\r\n          onSubmit={handleOnSubmit}\r\n          onCancel={handleOnClose}\r\n        />\r\n      </Grid>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditLevelAccessUserModal;\r\n","import React from 'react';\r\nimport { Grid, TextField, Button, Theme, withStyles, FormControl, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core';\r\nimport { orange } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\ninterface Props {\r\n  okLabel: 'Simpan';\r\n\r\n  level: string;\r\n  accessRight: string;\r\n\r\n  setLevel: React.Dispatch<React.SetStateAction<string>>;\r\n  setAccessRight: React.Dispatch<React.SetStateAction<string>>;\r\n\r\n  levelError: string;\r\n  accessRightError: string;\r\n\r\n  isSubmitting: boolean;\r\n  onSubmit: React.FormEventHandler;\r\n  onCancel: React.MouseEventHandler;\r\n}\r\n\r\nconst AddButton = withStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(orange[500]),\r\n    backgroundColor: '#EF965A',\r\n    '&:hover': {\r\n      backgroundColor: orange[700]\r\n    }\r\n  }\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  controlDiv: {\r\n    '& > :nth-child(n+2)': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  },\r\n  cancelButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  addButton: {\r\n    color: '#FFFFFF'\r\n  }\r\n}));\r\n\r\nconst CreateLevelAccessForm: React.FC<Props> = props => {\r\n  const classes = useStyles();\r\n\r\n  const { level, setLevel, levelError } = props;\r\n  const { accessRightError, setAccessRight, accessRight } = props;\r\n  const { isSubmitting, onSubmit, onCancel, okLabel } = props;\r\n  const handleChange = () => {};\r\n\r\n  return (\r\n    <form noValidate onSubmit={onSubmit}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='level'\r\n            label='Level'\r\n            error={levelError !== ''}\r\n            helperText={levelError}\r\n            value={level}\r\n            onChange={event => setLevel(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <FormControl component='fieldset'>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Mitra Page' />}\r\n                label='Mitra Page'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Product Page' />}\r\n                label='Product Page'\r\n              />\r\n            </FormGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n          <FormControl component='fieldset'>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Data Stok' />}\r\n                label='Data Stok'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Order Page' />}\r\n                label='Order Page'\r\n              />\r\n            </FormGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n          <FormControl component='fieldset'>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='invoice Page' />}\r\n                label='invoice Page'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Commission Page' />}\r\n                label='Commission Page'\r\n              />\r\n            </FormGroup>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid container item justify='flex-end' xs={12} sm={12} md={12} lg={12} xl={12} className={classes.controlDiv}>\r\n          <Button variant='contained' className={classes.cancelButton} onClick={onCancel} disabled={isSubmitting}>\r\n            Cancel\r\n          </Button>\r\n          <AddButton type='submit' variant='contained' color='primary' className={classes.addButton} disabled={isSubmitting}>\r\n            {okLabel}\r\n          </AddButton>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateLevelAccessForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { IconButton, Theme, Modal, Grid, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport CreateLevelAccessForm from './components/CreateLevelAccessForm';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { ACCESS_USER_BASE_URL } from '../../../constants/url';\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  addNewLevelUser(levelUser: LevelAccessUserDetailsModel): void;\r\n  handleCancel(): void;\r\n  setOpenSnackbar: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setSnackbarVarient: React.Dispatch<React.SetStateAction<'success' | 'error'>>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(4),\r\n    outline: 'none',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    borderRadius: 4\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n}));\r\n\r\nconst CreateLevelAccessUserModal: React.FC<Props> = props => {\r\n  const classes = useStyles();\r\n  let cancelTokenSource: CancelTokenSource;\r\n\r\n  const { addNewLevelUser, open, handleCancel, setOpenSnackbar, setSnackbarVarient } = props;\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n  const [level, setLevel] = useState<string>('');\r\n  const [levelError, setLevelError] = useState<string>('');\r\n  const [levelAccessUser, setLevelAccessUser] = useState<LevelAccessUserDetailsModel[]>([]);\r\n  const [accessRight, setAccessRight] = useState<string>('');\r\n  const [accessRightError, setAccessRightError] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n\r\n    const searchLevelAccess = async () => {\r\n      try {\r\n        const url = `${ACCESS_USER_BASE_URL}?`;\r\n        const { data } = await axios.get(url, { cancelToken: cancelTokenSource.token });\r\n\r\n        let levelAccessData: LevelAccessUserDetailsModel[] = [...data.level];\r\n\r\n        setLevelAccessUser(levelAccessData);\r\n      } catch (e) {}\r\n    };\r\n\r\n    searchLevelAccess();\r\n  }, []);\r\n\r\n  const clearFormErrors = () => {\r\n    setLevelError('');\r\n    setAccessRightError('');\r\n  };\r\n\r\n  const clearFormValue = () => {\r\n    setLevel('');\r\n    setAccessRight('');\r\n  };\r\n  // This is to ensure that the form vale and erors are reset/cleared when user canceled the editing\r\n  const handleOnClose = () => {\r\n    clearFormErrors();\r\n    handleCancel();\r\n    clearFormValue();\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let ret = true;\r\n    clearFormErrors();\r\n\r\n    if (!level || !level.trim()) {\r\n      setLevelError('Please enter email');\r\n      ret = false;\r\n    }\r\n    if (!accessRight || !accessRight.trim()) {\r\n      setAccessRightError('Please enter acccess user');\r\n      ret = false;\r\n    }\r\n    return ret;\r\n  };\r\n\r\n  const handleOnSubmit: React.FormEventHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      cancelTokenSource = axios.CancelToken.source();\r\n      const response = await axios.post(\r\n        `${ACCESS_USER_BASE_URL}`,\r\n        {\r\n          level,\r\n          accessRight\r\n        },\r\n        { cancelToken: cancelTokenSource.token }\r\n      );\r\n      addNewLevelUser(response.data);\r\n      setOpenSnackbar(true);\r\n      setSnackbarVarient('success');\r\n      handleOnClose();\r\n    } catch (err) {\r\n      console.log(err);\r\n      const { errorCode } = err.data;\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Modal aria-labelledby='modal-title' open={open} disableBackdropClick={true}>\r\n      <Grid container item xs={8} sm={8} md={8} lg={5} xl={5} spacing={3} direction='column' className={classes.paper}>\r\n        <Typography variant='h4' id='modal-title'>\r\n          Edit User\r\n        </Typography>\r\n        <IconButton size='small' className={classes.closeButton} onClick={handleOnClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <CreateLevelAccessForm\r\n          okLabel='Simpan'\r\n          level={level}\r\n          accessRight={accessRight}\r\n          setLevel={setLevel}\r\n          setAccessRight={setAccessRight}\r\n          levelError={levelError}\r\n          accessRightError={accessRightError}\r\n          isSubmitting={isLoading}\r\n          onSubmit={handleOnSubmit}\r\n          onCancel={handleOnClose}\r\n        />\r\n      </Grid>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateLevelAccessUserModal;\r\n","import React, { FC, useState, useContext, useEffect, useCallback } from 'react';\r\nimport { green } from '@material-ui/core/colors';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport useRouter from 'hooks/useRouter';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport clsx from 'clsx';\r\nimport { Button, Container, Grid, makeStyles, Paper, Theme, Typography } from '@material-ui/core';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ActionSnackBar from 'components/ActionSnackBar';\r\nimport { ACCESS_USER_BASE_URL } from 'constants/url';\r\nimport LevelAccessUserTable from './LevelAccesUserTable';\r\nimport EditLevelAccesUserModal from './EditLevelAccesUserModal';\r\nimport CreateLevelAccessUserModal from './CreateLevelAccessUserModal';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(2),\r\n    margin: 'auto'\r\n  },\r\n  text: {\r\n    fontWeight: 'bold',\r\n    fontSize: '30px',\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  textPaper: {\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  textSpace: {\r\n    fontWeight: 'bold',\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  divider: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  container: {\r\n    '& > :nth-child(n+2)': {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  },\r\n  tableRoot: {\r\n    width: '100%',\r\n    overflowX: 'auto'\r\n  },\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  button: {\r\n    paddingTop: theme.spacing(4)\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  addButton: {\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  extendedIcon: {\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  addGrid: {\r\n    textAlign: 'end'\r\n  },\r\n  leftHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2)\r\n  },\r\n  rightHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    paddingRight: theme.spacing(1.5)\r\n  },\r\n  Button: {\r\n    width: '70%'\r\n  },\r\n  ButtonNew: {\r\n    width: '60%',\r\n    paddingLeft: theme.spacing(7)\r\n  }\r\n}));\r\n\r\nconst AccesPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { history } = useRouter();\r\n  const state = history.location.state as any;\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n  const [snackbarVarient, setSnackbarVarient] = useState<'success' | 'error'>('success');\r\n\r\n  const dummyLevelUser: LevelAccessUserDetailsModel = {\r\n    id: 0,\r\n    name:'',\r\n    level: 'SuperAdmin',\r\n    accessRight: 'Warehouse'\r\n  };\r\n\r\n  const [levelUsers, setLevelUsers] = useState<LevelAccessUserDetailsModel[]>([dummyLevelUser]);\r\n  const [queryString, setQueryString] = useState<string>();\r\n  const [isSearchUserError, setSearchUserError] = useState<boolean>(false);\r\n\r\n  const [messageSuccess, setMessageSuccess] = useState<string>('');\r\n  const [messageError, setMessageError] = useState<string>('');\r\n  const [openEditLevelUser, setOpenEditLevelUser] = useState<boolean>(false);\r\n  const [isSearchingUser, setSearchingUser] = useState<boolean>(false);\r\n  const [currentEditingLevelUserIndex, setCurrentEditingLevelUserIndex] = useState<number>(0); // sudah\r\n  const [openCreateLevelUserModal, setOpenCreateLevelUserModal] = useState<boolean>(false);\r\n\r\n  const handleCancelEditUser = () => {\r\n    setOpenEditLevelUser(false);\r\n  };\r\n\r\n  // Loading all the roles to populate the tabs once\r\n\r\n  useEffect(() => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n\r\n    return () => {\r\n      // Canceling the request if component is unmounted\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, []);\r\n\r\n  const performActionAndRevertPage = (action: React.Dispatch<React.SetStateAction<any>>, actionParam: any) => {\r\n    action(actionParam);\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  const handleCancelEditLevelUser = () => {\r\n    setOpenEditLevelUser(false);\r\n  };\r\n\r\n  const handleOpenEditLevelAccess = (levelUserIndex: number): React.MouseEventHandler => () => {\r\n    setCurrentEditingLevelUserIndex(levelUserIndex);\r\n    setOpenEditLevelUser(true);\r\n  };\r\n  const handleOpenCreateLevelUser = () => {\r\n    setOpenCreateLevelUserModal(true);\r\n  };\r\n\r\n  const handleCancelCreateUser = () => {\r\n    setOpenCreateLevelUserModal(false);\r\n  };\r\n\r\n  const handleSearch = useCallback((searchQuery: string) => {\r\n    performActionAndRevertPage(setQueryString, searchQuery);\r\n  }, []);\r\n\r\n  // Search Client whenever rowsPerPage, currentPage, queryString, user, and filterby changes\r\n  const fetchData = useCallback(() => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n\r\n    const getQueryParams = () => {\r\n      const params = new URLSearchParams();\r\n      if (queryString) {\r\n        params.append('q', queryString);\r\n      }\r\n\r\n      return params.toString();\r\n    };\r\n\r\n    const searchLevelUser = async () => {\r\n      setSearchingUser(true);\r\n      setSearchUserError(false);\r\n\r\n      try {\r\n        const url = `${ACCESS_USER_BASE_URL}?${getQueryParams()}`;\r\n        const { data } = await axios.get(url, { cancelToken: cancelTokenSource.token });\r\n        setLevelUsers(data.levelUsers);\r\n      } catch (err) {\r\n        setSearchUserError(true);\r\n      }\r\n\r\n      setSearchingUser(false);\r\n    };\r\n\r\n    searchLevelUser();\r\n\r\n    return () => {\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, [queryString]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const addNewLevelUser = (levelUser: LevelAccessUserDetailsModel) => {\r\n    levelUser.new = true;\r\n    levelUsers.unshift(levelUser);\r\n    setLevelUsers([...levelUsers]);\r\n  };\r\n\r\n  const updateIndividualLevelUser = (accessIndex: number) => {\r\n    return (updatedLevelUserProperties: Partial<LevelAccessUserDetailsModel>) => {\r\n      setLevelUsers(\r\n        levelUsers!.map((levelUser, index) => {\r\n          if (index !== accessIndex) {\r\n            return levelUser;\r\n          }\r\n\r\n          return Object.assign({}, levelUser, updatedLevelUserProperties);\r\n        })\r\n      );\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth='lg' className={clsx(classes.root, classes.container)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item sm={6}>\r\n          <Typography className={classes.text} variant='h3' >\r\n            Pengaturan\r\n          </Typography>\r\n          <Typography className={classes.textSpace} variant='h4'>\r\n            Awal {'>'} Pengguna {'>'} Level Akses\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item sm={6} className={classes.addGrid}>\r\n          <Button\r\n            color='primary'\r\n            size='medium'\r\n            variant='contained'\r\n            className={classes.addButton}\r\n            onClick={() => {\r\n              handleOpenCreateLevelUser();\r\n            }}\r\n          >\r\n            <PersonAddIcon className={classes.extendedIcon} />\r\n            Tambah Level Akses\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Paper className={classes.paper}>\r\n        <Typography className={classes.text} variant='h4' color='secondary'>\r\n          Semua Level Akses\r\n        </Typography>\r\n\r\n        <LevelAccessUserTable\r\n          isLoadingData={isSearchingUser}\r\n          levelUsers={levelUsers}\r\n          handleCancelEditLevelUser={handleCancelEditLevelUser}\r\n          setOpenSnackbar={setOpenSnackbar}\r\n          setSnackbarVarient={setSnackbarVarient}\r\n          handleOpenEditLevelAccess={handleOpenEditLevelAccess}\r\n        />\r\n\r\n        <CreateLevelAccessUserModal\r\n          open={openCreateLevelUserModal}\r\n          handleCancel={handleCancelCreateUser}\r\n          addNewLevelUser={addNewLevelUser}\r\n          setOpenSnackbar={setOpenSnackbar}\r\n          setSnackbarVarient={setSnackbarVarient}\r\n        />\r\n\r\n        <EditLevelAccesUserModal\r\n          open={openEditLevelUser}\r\n          levelUser={levelUsers[currentEditingLevelUserIndex]}\r\n          handleCancel={handleCancelEditUser}\r\n          setOpenSnackbar={setOpenSnackbar}\r\n          setSnackbarVarient={setSnackbarVarient}\r\n          updateIndividualLevelUser={updateIndividualLevelUser(currentEditingLevelUserIndex)}\r\n        />\r\n      </Paper>\r\n      <ActionSnackBar\r\n        variant={snackbarVarient}\r\n        message={snackbarVarient === 'success' ? messageSuccess : messageError}\r\n        open={openSnackbar}\r\n        handleClose={handleCloseSnackbar}\r\n        Icon={snackbarVarient === 'success' ? CheckCircleIcon : ErrorIcon}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AccesPage;\r\n","import React from 'react';\r\nimport { RouteComponentProps, RouteProps, Redirect, Route } from 'react-router';\r\n\r\ninterface Props extends RouteProps {\r\n  routeCondition: boolean;\r\n  redirectTo: string;\r\n}\r\n\r\nconst ConditionalRoute: React.FC<Props> = props => {\r\n  const { component: Component, routeCondition, redirectTo, ...rest } = props;\r\n\r\n  const renderFn = (renderProps: RouteComponentProps<any>) => {\r\n    if (props.routeCondition) {\r\n      if (!Component) {\r\n        return null;\r\n      }\r\n      return <Component {...renderProps} />;\r\n    }\r\n\r\n    return <Redirect to={props.redirectTo} />;\r\n  };\r\n\r\n  return (\r\n    // Extract RouteProps without component property to rest.\r\n    <Route {...rest} render={renderFn} />\r\n  );\r\n};\r\n\r\nexport default ConditionalRoute;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport Button, { ButtonProps } from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Theme, CircularProgress, Fade } from '@material-ui/core';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\ninterface Props extends ButtonProps {\r\n  isLoading: boolean;\r\n  delay: number;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  wrapper: {\r\n    position: 'relative'\r\n  },\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12\r\n  }\r\n}));\r\n\r\nconst LoadingButton: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const timerRef = React.useRef<NodeJS.Timeout>();\r\n\r\n  // The className and styling defined for LoadingButton will be used to style the root div\r\n  const { isLoading, delay, disabled, children, className, style, ...rest } = props;\r\n\r\n  const [disabledDueToLoading, setDisabledDueToLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      timerRef.current = setTimeout(() => {\r\n        setDisabledDueToLoading(true);\r\n      }, delay);\r\n    } else {\r\n      const test = timerRef.current!;\r\n      clearTimeout(test);\r\n      setDisabledDueToLoading(false);\r\n    }\r\n\r\n    return () => {\r\n      const test = timerRef.current!;\r\n      clearTimeout(test);\r\n      setDisabledDueToLoading(false);\r\n    };\r\n  }, [isLoading, delay]);\r\n\r\n  return (\r\n    <div className={className} style={style}>\r\n      <div className={classes.wrapper}>\r\n        <Button disabled={disabled || disabledDueToLoading} {...rest}>\r\n          {children}\r\n        </Button>\r\n        <Fade\r\n          in={isLoading}\r\n          style={{\r\n            transitionDelay: isLoading ? `${delay}ms` : '0ms'\r\n          }}\r\n          unmountOnExit\r\n        >\r\n          <CircularProgress size={24} className={classes.buttonProgress} />\r\n        </Fade>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingButton;\r\n","import React from 'react';\r\n\r\nexport interface CurrentUserContextData {\r\n  currentUser?: CurrentUser;\r\n  setCurrentUser: (currentUser: CurrentUser, token: string) => void;\r\n  unsetCurrentUser: () => void;\r\n}\r\n\r\nexport const CurrentUserContext = React.createContext<CurrentUserContextData>({\r\n  setCurrentUser: () => {},\r\n  unsetCurrentUser: () => {}\r\n});\r\n\r\nexport const CurrentUserProvider = CurrentUserContext.Provider;\r\nexport const CurrentUserConsumer = CurrentUserContext.Consumer;\r\n","import { Container, Grid, InputAdornment, IconButton, Paper, TextField, Theme } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport React, { FC, useState, useCallback, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LoadingButton from 'components/LoadingButton';\r\nimport logo from 'images/simplify_logo2C.png';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { LOGIN_URL } from 'constants/url';\r\nimport { CurrentUserContext } from 'contexts/CurrentUserContext';\r\nimport { AuthenticationResponse } from 'typings/AuthenticationResponse';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(8),\r\n    padding: theme.spacing(3, 5)\r\n  },\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  logoContainer: {\r\n    textAlign: 'center'\r\n  },\r\n  logo: {\r\n    width: '50%'\r\n  },\r\n  linkButton: {\r\n    textAlign: 'center',\r\n    padding: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst LoginPage: FC = () => {\r\n  const currentUserContext = useContext(CurrentUserContext);\r\n\r\n  const theme = useTheme<Theme>();\r\n  const classes = useStyles();\r\n\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n  const [isAuthenticationError, setAuthenticationError] = useState<boolean>(false);\r\n\r\n  const [email, setEmail] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [isEmptyFieldError, setEmptyFieldError] = useState<boolean>(false);\r\n  const [isShowPassword, setShowPassword] = useState<boolean>(false);\r\n\r\n\r\n  const login = useCallback(async () => {\r\n      const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n      setLoading(true);\r\n      setAuthenticationError(false);\r\n\r\n      try {\r\n        const response = await axios.post(LOGIN_URL, { email, password }, { cancelToken: cancelTokenSource.token });\r\n        const { currentUser, token }: AuthenticationResponse = response.data;\r\n        currentUserContext.setCurrentUser(currentUser, token);\r\n      } catch (err) {\r\n        setLoading(false);\r\n        setAuthenticationError(true);\r\n      }\r\n    },\r\n    [email, password, currentUserContext],\r\n  );\r\n\r\n  const validateLoginForm = (): boolean => {\r\n    if (!email || !password) {\r\n      setEmptyFieldError(true);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const onSubmitHandler: React.FormEventHandler = async event => {\r\n    event.preventDefault();\r\n    setEmptyFieldError(false);\r\n\r\n    if (validateLoginForm()) {\r\n      login()\r\n    }\r\n  };\r\n\r\n  const getPasswordFieldHelperText = (): string => {\r\n    if (isEmptyFieldError) {\r\n      return 'Please enter your credentials';\r\n    }\r\n\r\n    if (isAuthenticationError) {\r\n      return 'Your credentials is incorrect.';\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <Paper className={classes.root}>\r\n        <div className={classes.paper}>\r\n          <div className={classes.logoContainer}>\r\n            <img src={logo} alt='' className={classes.logo} />\r\n          </div>\r\n          <form className={classes.form} noValidate onSubmit={onSubmitHandler}>\r\n            <TextField\r\n              variant='outlined'\r\n              margin='normal'\r\n              required\r\n              fullWidth\r\n              id='email'\r\n              label='Email Address'\r\n              name='email'\r\n              autoComplete='email'\r\n              autoFocus\r\n              error={isEmptyFieldError || isAuthenticationError}\r\n              onChange={event => setEmail(event.target.value)}\r\n              value={email}\r\n            />\r\n            <TextField\r\n              variant='outlined'\r\n              margin='normal'\r\n              required\r\n              fullWidth\r\n              name='password'\r\n              label='Password'\r\n              type={isShowPassword ? 'text' : 'password'}\r\n              id='password'\r\n              autoComplete='current-password'\r\n              error={isEmptyFieldError || isAuthenticationError}\r\n              helperText={getPasswordFieldHelperText()}\r\n              onChange={event => setPassword(event.target.value)}\r\n              value={password}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position='end'>\r\n                    <IconButton edge='end' aria-label='toggle password visibility' onClick={event => setShowPassword(!isShowPassword)}>\r\n                      {isShowPassword ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n            <LoadingButton\r\n              delay={0}\r\n              isLoading={isLoading}\r\n              type='submit'\r\n              fullWidth\r\n              variant='contained'\r\n              color='primary'\r\n              style={{ margin: theme.spacing(2, 0, 2) }}\r\n            >\r\n              Sign In\r\n            </LoadingButton>\r\n            <Grid container>\r\n              <Grid item xs className={classes.linkButton}>\r\n                <Link to='/forgotpassword' style={{ textDecoration: 'none' }}>\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import * as React from 'react';\r\n\r\nconst HomePage: React.FC = () => {\r\n  return (\r\n    <div>\r\n      Home Page\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\nconst NotFoundPage: React.FC = () => {\r\n  return <div>NOT FOUND</div>;\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React, { FC, Fragment } from 'react';\r\nimport {\r\n  Avatar,\r\n  Badge,\r\n  Button,\r\n  ButtonBase,\r\n  Container,\r\n  createStyles,\r\n  Divider,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Theme,\r\n  Tooltip,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport UploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CancelImageIcon from '@material-ui/icons/Close';\r\n\r\ninterface Props {\r\n  name: string;\r\n  setName: React.Dispatch<React.SetStateAction<string>>;\r\n  address: string;\r\n  setAddress: React.Dispatch<React.SetStateAction<string>>;\r\n  email: string;\r\n  setEmail: React.Dispatch<React.SetStateAction<string>>;\r\n  contactNumber: string;\r\n  setContactNumber: React.Dispatch<React.SetStateAction<string>>;\r\n  npwp: string;\r\n  setNPWP: React.Dispatch<React.SetStateAction<string>>;\r\n  contactPerson: string;\r\n  setContactPerson: React.Dispatch<React.SetStateAction<string>>;\r\n  handphone: string;\r\n  setHandphone: React.Dispatch<React.SetStateAction<string>>;\r\n  website: string;\r\n  setWebsite: React.Dispatch<React.SetStateAction<string>>;\r\n  district: string;\r\n  setDistrict: React.Dispatch<React.SetStateAction<string>>;\r\n  postalCode: string;\r\n  setPostalCode: React.Dispatch<React.SetStateAction<string>>;\r\n  province: string;\r\n  setProvince: React.Dispatch<React.SetStateAction<string>>;\r\n  subDistrict: string;\r\n  setSubDistrict: React.Dispatch<React.SetStateAction<string>>;\r\n  image: string;\r\n  imageView: string;\r\n  setImage: React.Dispatch<React.SetStateAction<string>>;\r\n  setImageView: React.Dispatch<React.SetStateAction<string>>;\r\n\r\n  nameError: string;\r\n  addressError: string;\r\n  postalCodeError: string;\r\n  contactNumberError: string;\r\n  npwpError: string;\r\n  handphoneError: string;\r\n  websiteError: string;\r\n  districtError: string;\r\n  provinceError: string;\r\n  subDistrictError: string;\r\n  emailError: string;\r\n  contactPersonError: string;\r\n  onSubmit: React.FormEventHandler;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    rightPaper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'justify',\r\n      marginBottom: theme.spacing(3)\r\n    },\r\n    container: {\r\n      '& > :nth-child(n+2)': {\r\n        marginTop: theme.spacing(2)\r\n      }\r\n    },\r\n    root: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4)\r\n    },\r\n    dividerStyle: {\r\n      marginTop: theme.spacing(1.5)\r\n    },\r\n    text: {\r\n      fontWeight: 'bold',\r\n      fontSize: '30px',\r\n      paddingTop: theme.spacing(3)\r\n    },\r\n    textSpace: {\r\n      fontWeight: 'bold',\r\n      paddingTop: theme.spacing(3)\r\n    },\r\n    textTypo: {\r\n      marginTop: theme.spacing(5)\r\n    },\r\n\r\n    textField: {\r\n      marginTop: theme.spacing(15.5)\r\n    },\r\n    textFieldFont: {\r\n      fontSize: '13px',\r\n      height: 18\r\n    },\r\n    bigAvatar: {\r\n      minWidth: '200px',\r\n      minHeight: '90px',\r\n      color: `#C4C4C4`,\r\n      backgroundColor: '#FFFFFF',\r\n      border: `1px solid #C4C4C4`,\r\n      borderRadius: '10px'\r\n    },\r\n    spacingNewLine: {\r\n      marginBottom: theme.spacing(1.5)\r\n    },\r\n    buttonBaseStyle: {\r\n      position: 'relative',\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '100% !important'\r\n      }\r\n    },\r\n    inputImageStyle: {\r\n      display: 'none'\r\n    },\r\n    buttonImage: {\r\n      marginRight: theme.spacing(63),\r\n      paddingRight: theme.spacing(63)\r\n    },\r\n    cancelImage: {\r\n      fontSize: '12px',\r\n      cursor: 'pointer'\r\n    },\r\n    spaceImage: {\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    addGrid: {\r\n      textAlign: 'end',\r\n      marginTop:theme.spacing(7)\r\n    },\r\n    textLast: {\r\n     paddingLeft:theme.spacing(2)\r\n    },\r\n    imageRemarks: {\r\n      color: 'grey',\r\n      fontStyle: 'oblique',\r\n      fontSize: '11px',\r\n      marginTop: theme.spacing(1),\r\n      marginButtom: theme.spacing(1)\r\n    }\r\n  })\r\n);\r\n\r\nconst CompanyForm: FC<Props> = props => {\r\n  const classes = useStyles();\r\n\r\n  const { name, setName, nameError } = props;\r\n  const { address, setAddress, addressError } = props;\r\n  const { email, setEmail, emailError } = props;\r\n  const { npwp, setNPWP, npwpError } = props;\r\n  const { district, setDistrict, districtError } = props;\r\n  const { subDistrict, setSubDistrict, subDistrictError } = props;\r\n  const { postalCode, setPostalCode, postalCodeError } = props;\r\n  const { contactNumber, setContactNumber, contactNumberError } = props;\r\n  const { contactPerson, setContactPerson, contactPersonError } = props;\r\n  const { handphone, setHandphone, handphoneError } = props;\r\n  const { website, setWebsite, websiteError, onSubmit } = props;\r\n  const { province, setProvince, provinceError, setImage, setImageView, image, imageView } = props;\r\n\r\n  const handleChooseImage = (event: any) => {\r\n    let selectedImage;\r\n    let selectedImageView;\r\n    if (event.target.files[0] === undefined) {\r\n      selectedImage = '';\r\n      selectedImageView = '';\r\n    } else {\r\n      selectedImage = event.target.files[0];\r\n      selectedImageView = URL.createObjectURL(event.target.files[0]);\r\n    }\r\n\r\n    setImage(selectedImage);\r\n    setImageView(selectedImageView);\r\n  };\r\n\r\n  const cancelImage = () => {\r\n    setImage('');\r\n    setImageView('');\r\n  };\r\n\r\n  const renderImageComponent = () => {\r\n    if (imageView === '') {\r\n      return (\r\n        <Fragment>\r\n          <input\r\n            accept='image/*'\r\n            className={classes.inputImageStyle}\r\n            id='outlined-button-file'\r\n            type='file'\r\n            onChange={event => handleChooseImage(event)}\r\n          />\r\n          <label htmlFor='outlined-button-file'>\r\n            <ButtonBase focusRipple key={'Upload'} component='span' disableRipple>\r\n              <Tooltip title='Choose an image' placement='top'>\r\n                <Avatar className={classes.bigAvatar}>\r\n                  <UploadIcon fontSize='large' />\r\n                </Avatar>\r\n              </Tooltip>\r\n            </ButtonBase>\r\n          </label>\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <Badge badgeContent={<CancelImageIcon className={classes.cancelImage} onClick={event => cancelImage()} />} color='primary'>\r\n          <input\r\n            accept='image/*'\r\n            className={classes.inputImageStyle}\r\n            id='outlined-button-file'\r\n            type='file'\r\n            onChange={event => handleChooseImage(event)}\r\n          />\r\n          <label htmlFor='outlined-button-file'>\r\n            <ButtonBase focusRipple key={'Upload'} className={classes.buttonBaseStyle} component='span' disableRipple>\r\n              <Tooltip title='Choose an image' placement='top'>\r\n                <Avatar alt='Image' src={imageView} className={classes.bigAvatar} />\r\n              </Tooltip>\r\n            </ButtonBase>\r\n          </label>\r\n        </Badge>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth='lg' className={clsx(classes.root, classes.container)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item sm={6}>\r\n          <Typography className={classes.text} variant='h3'>\r\n            Pengaturan\r\n          </Typography>\r\n          <Typography className={classes.textSpace} variant='h4'>\r\n            Awal {'>'} Perusahaan\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item sm={6} className={classes.addGrid}>\r\n          <Button color='secondary' size='medium' variant='contained' onClick={onSubmit}>\r\n            EDIT\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Paper className={classes.rightPaper}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Typography variant='h4' display='block' gutterBottom>\r\n              Info Perusahaan\r\n            </Typography>\r\n            <Divider className={classes.dividerStyle} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='companyName'\r\n              label='Company Name'\r\n              error={nameError !== ''}\r\n              helperText={nameError}\r\n              value={name}\r\n              onChange={event => setName(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='email'\r\n              label='Email'\r\n              error={emailError !== ''}\r\n              helperText={emailError}\r\n              value={email}\r\n              onChange={event => setEmail(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='contactNumber'\r\n              label='No.Telp'\r\n              error={contactNumberError !== ''}\r\n              helperText={contactNumberError}\r\n              value={contactNumber}\r\n              onChange={event => setContactNumber(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              multiline\r\n              rowsMax='4'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='npwp'\r\n              label='No.NPWP'\r\n              error={npwpError !== ''}\r\n              helperText={npwpError}\r\n              value={npwp}\r\n              onChange={event => setNPWP(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              multiline\r\n              rowsMax='4'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n\r\n            <Typography className={classes.textTypo} variant='h4' display='block' gutterBottom>\r\n              Alamat Perusahaan\r\n            </Typography>\r\n\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='companyAddress'\r\n              label='Company Address'\r\n              error={addressError !== ''}\r\n              helperText={addressError}\r\n              value={address}\r\n              onChange={event => setAddress(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              multiline\r\n              rowsMax='4'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='district'\r\n              label='Kabupaten'\r\n              error={districtError !== ''}\r\n              helperText={districtError}\r\n              value={district}\r\n              onChange={event => setDistrict(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              multiline\r\n              rowsMax='4'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='postalCode'\r\n              label='Postal Code'\r\n              error={postalCodeError !== ''}\r\n              helperText={postalCodeError}\r\n              value={postalCode}\r\n              onChange={event => setPostalCode(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='contactPerson'\r\n              label='Contact Person'\r\n              error={contactPersonError !== ''}\r\n              helperText={contactPersonError}\r\n              value={contactPerson}\r\n              onChange={event => setContactPerson(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='handphone'\r\n              label='No.Handphone'\r\n              error={handphoneError !== ''}\r\n              helperText={handphoneError}\r\n              value={handphone}\r\n              onChange={event => setHandphone(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='website'\r\n              label='Webiste Perusahaan'\r\n              error={websiteError !== ''}\r\n              helperText={websiteError}\r\n              value={website}\r\n              onChange={event => setWebsite(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              className={classes.textField}\r\n              id='province'\r\n              label='Provinsi'\r\n              error={provinceError !== ''}\r\n              helperText={provinceError}\r\n              value={province}\r\n              onChange={event => setProvince(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              multiline\r\n              rowsMax='4'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='subDistrict'\r\n              label='Kecamatan'\r\n              error={subDistrictError !== ''}\r\n              helperText={subDistrictError}\r\n              value={subDistrict}\r\n              onChange={event => setSubDistrict(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              multiline\r\n              rowsMax='4'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n            <Grid></Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Typography  variant='h4' display='block' gutterBottom className={classes.textLast}>\r\n                Logo Perusahaan\r\n              </Typography>\r\n            \r\n            </Grid>\r\n            <Grid container justify='center' alignItems='center' className={classes.buttonImage}>\r\n              {renderImageComponent()}\r\n              <Typography className={classes.imageRemarks}>Make sure image is in .JPG (400x400 px)</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CompanyForm;\r\n","import React, { FC, useState } from 'react';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { Grid } from '@material-ui/core';\r\nimport CompanyForm from './components/CompanyForm';\r\n\r\nimport { COMPANY_BASE_URL } from 'constants/url';\r\n\r\nconst CompanyPage: FC = () => {\r\n  let cancelTokenSource: CancelTokenSource;\r\n\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n  const [snackbarVarient, setSnackbarVarient] = useState<'success' | 'error'>('success');\r\n  const [messageSuccess, setMessageSuccess] = useState<string>('');\r\n  const [messageError, setMessageError] = useState<string>('');\r\n\r\n  const [company, setCompany] = useState<CompanyModel[]>([]);\r\n  const [name, setName] = useState<string>('');\r\n  const [address, setAddress] = useState<string>('');\r\n  const [postalCode, setPostalCode] = useState<string>('');\r\n  const [contactNumber, setContactNumber] = useState<string>('');\r\n\r\n  const [nameError, setNameError] = useState<string>('');\r\n  const [addressError, setAddressError] = useState<string>('');\r\n  const [postalCodeError, setPostalCodeError] = useState<string>('');\r\n  const [contactNumberError, setContactNumberError] = useState<string>('');\r\n  const [email, setEmail] = useState<string>('');\r\n  const [district, setDistrict] = useState<string>('');\r\n  const [handphone, setHandphone] = useState<string>('');\r\n  const [website, setWebsite] = useState<string>('');\r\n  const [contactPerson, setContactPerson] = useState<string>('');\r\n  const [npwp, setNPWP] = useState<string>('');\r\n  const [subDistrict, setSubDistrict] = useState<string>('');\r\n\r\n  const [emailError, setEmailError] = useState<string>('');\r\n  const [districtError, setDistrictError] = useState<string>('');\r\n  const [handphoneError, setHandphoneError] = useState<string>('');\r\n  const [websiteError, setWebsiteError] = useState<string>('');\r\n  const [contactPersonError, setContactPersonError] = useState<string>('');\r\n  const [npwpError, setNPWPError] = useState<string>('');\r\n  const [subDistrictError, setSubDistrictError] = useState<string>('');\r\n  const [province, setProvince] = useState<string>('');\r\n\r\n  const [provinceError, setProvinceError] = useState<string>('');\r\n  const [image, setImage] = useState<string>('');\r\n  const [imageView, setImageView] = useState<string>('');\r\n\r\n  const clearFormErrors = () => {\r\n    setNameError('');\r\n    setAddressError('');\r\n    setPostalCodeError('');\r\n    setContactNumberError('');\r\n    setWebsiteError('');\r\n    setHandphoneError('');\r\n    setContactPersonError('');\r\n    setHandphoneError('');\r\n    setEmailError('');\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let ret = true;\r\n    clearFormErrors();\r\n\r\n    if (!name || !name.trim()) {\r\n      setNameError('Please enter company name');\r\n      ret = false;\r\n    }\r\n\r\n    if (!address || !address.trim()) {\r\n      setAddressError('Please enter company address');\r\n      ret = false;\r\n    }\r\n\r\n    if (!postalCode || !postalCode.trim()) {\r\n      setPostalCodeError('Please enter postal code');\r\n      ret = false;\r\n    }\r\n\r\n    if (!contactPerson || !contactPerson.trim()) {\r\n      setContactPersonError('Please enter contactPerson');\r\n      ret = false;\r\n    }\r\n\r\n    if (!handphone || !handphone.trim()) {\r\n      setHandphoneError('Please enter handphone');\r\n      ret = false;\r\n    }\r\n    if (!province || !province.trim()) {\r\n      setProvinceError('Please enter province');\r\n      ret = false;\r\n    }\r\n\r\n    if (!subDistrict || !subDistrict.trim()) {\r\n      setSubDistrictError('Please enter subDistrict');\r\n      ret = false;\r\n    }\r\n\r\n    if (!district || !district.trim()) {\r\n      setDistrictError('Please enter district');\r\n      ret = false;\r\n    }\r\n\r\n    if (!npwp || !npwp.trim()) {\r\n      setNPWPError('Please enter No.NPWP');\r\n      ret = false;\r\n    }\r\n\r\n    return ret;\r\n  };\r\n\r\n  const handleSetMessageSuccess = (message: string) => {\r\n    setMessageSuccess(message);\r\n  };\r\n\r\n  const handleSetMessageError = (message: string) => {\r\n    setMessageError(message);\r\n  };\r\n\r\n  const handleOnSubmit: React.FormEventHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      cancelTokenSource = axios.CancelToken.source();\r\n      const formData = new FormData();\r\n\r\n      formData.append('name', name);\r\n      formData.append('address', address);\r\n      formData.append('postalCode', postalCode);\r\n      formData.append('website', website);\r\n      formData.append('contactPerson', contactPerson);\r\n      formData.append('handphone', handphone);\r\n      formData.append('npwp', npwp);\r\n      formData.append('contactNumber', contactNumber);\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        cancelToken: cancelTokenSource.token\r\n      };\r\n\r\n      const response = await axios.post(`${COMPANY_BASE_URL}`, formData, config);\r\n      setCompany(response.data);\r\n      handleSetMessageSuccess('Successfully added new entity');\r\n    } catch (err) {\r\n      handleSetMessageError('Failed to add a new enity');\r\n      setSnackbarVarient('error');\r\n      setOpenSnackbar(true);\r\n      console.log(`err:${err}`);\r\n      const { errorCode } = err.data;\r\n\r\n      console.log(`errorCode:${errorCode}`);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <form noValidate onSubmit={handleOnSubmit}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <CompanyForm\r\n            name={name}\r\n            setName={setName}\r\n            address={address}\r\n            setAddress={setAddress}\r\n            postalCode={postalCode}\r\n            setPostalCode={setPostalCode}\r\n            contactNumber={contactNumber}\r\n            setContactNumber={setContactNumber}\r\n            nameError={nameError}\r\n            addressError={addressError}\r\n            postalCodeError={postalCodeError}\r\n            contactNumberError={contactNumberError}\r\n            email={email}\r\n            setEmail={setEmail}\r\n            district={district}\r\n            setDistrict={setDistrict}\r\n            website={website}\r\n            setWebsite={setWebsite}\r\n            handphone={handphone}\r\n            setHandphone={setHandphone}\r\n            subDistrict={subDistrict}\r\n            setSubDistrict={setSubDistrict}\r\n            npwp={npwp}\r\n            setNPWP={setNPWP}\r\n            contactPerson={contactPerson}\r\n            setContactPerson={setContactPerson}\r\n            handphoneError={handphoneError}\r\n            websiteError={websiteError}\r\n            npwpError={npwpError}\r\n            districtError={districtError}\r\n            subDistrictError={subDistrictError}\r\n            contactPersonError={contactPersonError}\r\n            emailError={emailError}\r\n            province={province}\r\n            setProvince={setProvince}\r\n            provinceError={provinceError}\r\n            image={image}\r\n            imageView={imageView}\r\n            setImage={setImage}\r\n            setImageView={setImageView}\r\n            onSubmit={handleOnSubmit}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CompanyPage;\r\n","import React, { FC } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { TableCellMiddle, TableCellEnd, TableCellStart, TableRowCustom } from 'components/Table';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport useRouter from 'hooks/useRouter';\r\nimport { RED } from 'constants/colors';\r\n\r\ninterface Props {\r\n  partner: PartnerModel;\r\n  isLoading: boolean;\r\n  onDelete: React.MouseEventHandler;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  deleteButton: {\r\n    color: RED\r\n  }\r\n});\r\n\r\nconst BodyRow: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { partner, isLoading, onDelete } = props;\r\n  const { history } = useRouter();\r\n\r\n  const handleLink = (event: React.MouseEvent<HTMLTableRowElement, MouseEvent>) => {\r\n    event.preventDefault();\r\n    history.push('/mitra/detail', { id: partner.id });\r\n  };\r\n\r\n  return (\r\n    <TableRowCustom onClick={handleLink}>\r\n      <TableCellStart>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : partner.partnerId}</TableCellStart>\r\n      <TableCellMiddle>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : partner.name}</TableCellMiddle>\r\n      <TableCellMiddle>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : partner.address}</TableCellMiddle>\r\n      <TableCellMiddle align='center'>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : partner.partnerType}</TableCellMiddle>\r\n      <TableCellMiddle>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : partner.email}</TableCellMiddle>\r\n      <TableCellMiddle>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : partner.cellPhoneNumber}</TableCellMiddle>\r\n      <TableCellEnd align='center'>\r\n        <Button variant='text' onClick={onDelete} className={classes.deleteButton}>\r\n          Hapus\r\n        </Button>\r\n      </TableCellEnd>\r\n    </TableRowCustom>\r\n  );\r\n};\r\n\r\nexport default BodyRow;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport { TableBody, TableHead, TableRow, TableCell, TextField, Select, MenuItem, FormControl, TableContainer } from '@material-ui/core';\r\nimport BodyRow from './components/BodyRow';\r\nimport TablePagination from 'components/TablePagination';\r\nimport { HeaderRow, TableCellHead, TableCustom } from 'components/Table';\r\n\r\ninterface Props {\r\n  isLoadingData: boolean;\r\n  count: number;\r\n  currentPage: number;\r\n  rowsPerPage: number;\r\n  partners?: PartnerModel[];\r\n  queryString?: string;\r\n  order: 'asc' | 'desc';\r\n  orderBy: string;\r\n  name: string;\r\n  setName: React.Dispatch<React.SetStateAction<string>>;\r\n  address: string;\r\n  setAddress: React.Dispatch<React.SetStateAction<string>>;\r\n  type: string;\r\n  setType: React.Dispatch<React.SetStateAction<string>>;\r\n  email: string;\r\n  setEmail: React.Dispatch<React.SetStateAction<string>>;\r\n  partnerId: string;\r\n  setPartnerId: React.Dispatch<React.SetStateAction<string>>;\r\n  cellPhoneNumber: string;\r\n  setCellPhoneNumber: React.Dispatch<React.SetStateAction<string>>;\r\n  setOrder: React.Dispatch<React.SetStateAction<'asc' | 'desc'>>;\r\n  setOrderBy: React.Dispatch<React.SetStateAction<string>>;\r\n  handleChangeRowsPerPage: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\r\n  handleChangePage: (event: React.MouseEvent<HTMLButtonElement> | null, page: number) => void;\r\n  handleConfirmationDelete: (id: number) => React.MouseEventHandler;\r\n}\r\n\r\nconst dummyPartner: PartnerModel = {\r\n  id: 0,\r\n  partnerId: '',\r\n  name: '',\r\n  address: '',\r\n  areaCode: '',\r\n  businessEntity: '',\r\n  cellPhoneNumber: '',\r\n  email: '',\r\n  notes: '',\r\n  phoneNumber: '',\r\n  postalCode: 0,\r\n  regionName: '',\r\n  virtualAccount: '',\r\n  website: '',\r\n  partnerType: 'SUPPLIER'\r\n};\r\n\r\nconst PartnerTable: FC<Props> = props => {\r\n  const {\r\n    isLoadingData,\r\n    count,\r\n    currentPage,\r\n    rowsPerPage,\r\n    partners,\r\n    order,\r\n    orderBy,\r\n    name,\r\n    setName,\r\n    address,\r\n    setAddress,\r\n    type,\r\n    setType,\r\n    email,\r\n    setEmail,\r\n    partnerId,\r\n    setPartnerId,\r\n    cellPhoneNumber,\r\n    setCellPhoneNumber,\r\n    handleChangePage,\r\n    handleChangeRowsPerPage,\r\n    setOrder,\r\n    setOrderBy,\r\n    queryString,\r\n    handleConfirmationDelete\r\n  } = props;\r\n\r\n  const [showSkeleton, setShowSkeleton] = useState<boolean>(false);\r\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: string) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoadingData) {\r\n      setShowSkeleton(true);\r\n    }\r\n    return () => {\r\n      setShowSkeleton(false);\r\n    };\r\n  }, [isLoadingData]);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <TableCustom>\r\n        <TableHead>\r\n          <HeaderRow\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            headers={[\r\n              { id: 'partnerId', label: 'ID', sort: true },\r\n              { id: 'name', label: 'NAMA MITRA', sort: true },\r\n              { id: 'address', label: 'ALAMAT', sort: true },\r\n              { id: 'partnerType', label: 'TYPE', align: 'center', sort: true },\r\n              { id: 'email', label: 'EMAIL', sort: true },\r\n              { id: 'cellPhoneNumber', label: 'NO. HANDPHONE', sort: true },\r\n              { label: '' }\r\n            ]}\r\n          />\r\n          <TableRow>\r\n            <TableCellHead variant='head'>\r\n              <TextField id='partnerId' value={partnerId} onChange={event => setPartnerId(event.target.value)} />\r\n            </TableCellHead>\r\n            <TableCellHead variant='head'>\r\n              <TextField id='name' value={name} onChange={event => setName(event.target.value)} />\r\n            </TableCellHead>\r\n            <TableCellHead variant='head'>\r\n              <TextField id='address' value={address} onChange={event => setAddress(event.target.value)} />\r\n            </TableCellHead>\r\n            <TableCellHead variant='head'>\r\n              <FormControl fullWidth variant='outlined' size='small'>\r\n                <Select id='type' value={type as string} placeholder='Type' onChange={event => setType(event.target.value as string)}>\r\n                  <MenuItem key={1} value='SUPPLIER'>\r\n                    Supplier\r\n                  </MenuItem>\r\n                  <MenuItem key={2} value='CUSTOMER'>\r\n                    Customer\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </TableCellHead>\r\n            <TableCellHead variant='head'>\r\n              <TextField id='email' variant='outlined' value={email} onChange={event => setEmail(event.target.value)} size='small' />\r\n            </TableCellHead>\r\n            <TableCellHead variant='head'>\r\n              <TextField\r\n                id='cellPhoneNumber'\r\n                variant='outlined'\r\n                value={cellPhoneNumber}\r\n                onChange={event => setCellPhoneNumber(event.target.value)}\r\n                size='small'\r\n              />\r\n            </TableCellHead>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {showSkeleton ? (\r\n            [0, 1, 2, 3].map(index => (\r\n              <BodyRow key={index + 1} isLoading={showSkeleton} partner={dummyPartner} onDelete={handleConfirmationDelete(0)} />\r\n            ))\r\n          ) : partners && partners.length > 0 ? (\r\n            partners.map((value, index) => (\r\n              <BodyRow key={index + 1} isLoading={showSkeleton} partner={value} onDelete={handleConfirmationDelete(value.id)} />\r\n            ))\r\n          ) : (\r\n            <TableRow>\r\n              <TableCell colSpan={7} align='center'>\r\n                {queryString ? 'No matching result' : 'Data Not Available'}\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </TableCustom>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default PartnerTable;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport {\r\n  makeStyles,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Tabs,\r\n  Tab,\r\n  Button,\r\n  FormControl,\r\n  Typography,\r\n  Grid,\r\n  IconButton,\r\n  FormHelperText,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport {\r\n  PARTNER_BASE_URL,\r\n  PARTNER_LAST_ID_BASE_URL,\r\n  WILAYAH_PROVINSI_BASE_URL,\r\n  WILAYAH_KABUPATEN_BASE_URL,\r\n  WILAYAH_KECAMATAN_BASE_URL,\r\n  ZONE_BASE_URL\r\n} from 'constants/url';\r\nimport { isValidEmail } from 'utils';\r\nimport { GREY } from 'constants/colors';\r\n\r\ninterface Props {\r\n  partners: PartnerModel[];\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setPartners: React.Dispatch<React.SetStateAction<PartnerModel[]>>;\r\n  handleSnackBar: (open: boolean, variant: 'success' | 'error', message: string) => void;\r\n}\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  dir?: string;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  notesGrid: {\r\n    marginTop: 10\r\n  },\r\n  buttonGrid: {\r\n    marginTop: 10\r\n  },\r\n  tabGrid: {\r\n    marginBottom: 10\r\n  },\r\n  gridWrapper: {\r\n    padding: '12px'\r\n  },\r\n  paper: {\r\n    border: '1px solid #E0E0E0',\r\n    boxSizing: 'border-box',\r\n    boxShadow: '0px 5px 12px rgba(0, 0, 0, 0.08)',\r\n    borderRadius: '5px',\r\n    width: '100%'\r\n  },\r\n  select:{  }\r\n});\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div role='tabpanel' hidden={value !== index} id={`full-width-tabpanel-${index}`} aria-labelledby={`full-width-tab-${index}`} {...other}>\r\n      {value === index && <div>{children}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst a11yProps = (index: any) => {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`\r\n  };\r\n};\r\n\r\nconst dummyRegion: RegionModel = {\r\n  code: '',\r\n  name: ''\r\n};\r\n\r\nconst dummyZone: ZoneModel = {\r\n  id: 0,\r\n  name: ''\r\n};\r\n\r\nconst PartnerWizard: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { partners, setPartners, setOpen, handleSnackBar } = props;\r\n  const [partnerId, setPartnerId] = useState<string>('');\r\n  const [name, setName] = useState<string>('');\r\n  const [address, setAddress] = useState<string>('');\r\n  const [type, setType] = useState<string>('');\r\n  const [email, setEmail] = useState<string>('');\r\n  const [cellPhoneNumber, setCellPhoneNumber] = useState<string>('');\r\n  const [phoneNumber, setPhoneNumber] = useState<string>('');\r\n  const [website, setWebsite] = useState<string>('');\r\n  const [virtualAccount, setVirtualAccount] = useState<string>('');\r\n  const [notes, setNotes] = useState<string>('');\r\n  const [value, setValue] = useState(0);\r\n  const [postalCode, setPostalCode] = useState<number>();\r\n  const [partnerType, setPartnerType] = useState<'SUPPLIER' | 'CUSTOMER'>('SUPPLIER');\r\n  const [provinsi, setProvinsi] = useState<RegionModel>(dummyRegion);\r\n  const [kabupaten, setKabupaten] = useState<RegionModel>(dummyRegion);\r\n  const [kecamatan, setKecamatan] = useState<RegionModel>(dummyRegion);\r\n  const [zone, setZone] = useState<ZoneModel>(dummyZone);\r\n  const [route, setRoute] = useState<ZoneModel[]>([dummyZone]);\r\n  const [region, setRegion] = useState<RegionModel[]>([dummyRegion]);\r\n  const [isSubmit, setSubmit] = useState<boolean>(false);\r\n  const [nameMessage, setNameMessage] = useState<string>('');\r\n  const [emailMessage, setEmailMessage] = useState<string>('');\r\n  const [addressMessage, setAddressMessage] = useState<string>('');\r\n  const [businessEntityMessage, setBusinessEntityMessage] = useState<string>('');\r\n  const [provinsiMessage, setProvinsiMessage] = useState<string>('');\r\n  const [kabupatenMessage, setKabupatenMessage] = useState<string>('');\r\n  const [kecamatanMessage, setKecamatanMessage] = useState<string>('');\r\n  const [postalCodeMessage, setPostalCodeMessage] = useState<string>('');\r\n  const [zoneMessage, setZoneMessage] = useState<string>('');\r\n  const [phoneNumberMessage, setPhoneNumberMessage] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n      try {\r\n        const { data } = await axios.get(`${PARTNER_LAST_ID_BASE_URL}`, { cancelToken: cancelTokenSource.token });\r\n        setPartnerId(data.data.partnerId);\r\n      } catch (error) {\r\n        console.log('error :', error);\r\n      }\r\n    };\r\n    fetch();\r\n  }, []);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleSearchProvinsi = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${WILAYAH_PROVINSI_BASE_URL}?${params.toString()}`, { cancelToken: cancelTokenSource.token });\r\n      setRegion(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n\r\n  const handleSearchKabupaten = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${WILAYAH_KABUPATEN_BASE_URL(provinsi.code)}?${params.toString()}`, { cancelToken: cancelTokenSource.token });\r\n      setRegion(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n\r\n  const handleSearchZone = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${ZONE_BASE_URL}?${params.toString()}`, { cancelToken: cancelTokenSource.token });\r\n      setRoute(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n\r\n  const handleSearchKecamatan = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${WILAYAH_KECAMATAN_BASE_URL(kabupaten.code)}?${params.toString()}`, {\r\n        cancelToken: cancelTokenSource.token\r\n      });\r\n      setRegion(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    resetValidation();\r\n\r\n    if (!validation()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSubmit(true);\r\n      const region = provinsi.name + ', ' + kabupaten.name + ', ' + kecamatan.name;\r\n      const { data } = await axios.post(\r\n        `${PARTNER_BASE_URL}`,\r\n        {\r\n          id: 0,\r\n          partnerId,\r\n          name,\r\n          partnerType,\r\n          phoneNumber,\r\n          cellPhoneNumber,\r\n          email,\r\n          address,\r\n          notes,\r\n          website,\r\n          postalCode,\r\n          areaCode: kecamatan.code,\r\n          regionName: region,\r\n          ZoneId: zone.id,\r\n          businessEntity: type,\r\n          virtualAccount\r\n        },\r\n        {\r\n          cancelToken: cancelTokenSource.token\r\n        }\r\n      );\r\n\r\n      setPartners([data.data, ...partners]);\r\n      setOpen(false);\r\n      handleSnackBar(true, 'success', 'Partner berhasil ditambahkan');\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n      handleSnackBar(true, 'error', 'Partner gagal ditambahkan');\r\n    }\r\n    setSubmit(false);\r\n  };\r\n\r\n  const validation = (): boolean => {\r\n    let valid = true;\r\n\r\n    if (name === '' || !name) {\r\n      setNameMessage('Nama tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (!isValidEmail(email)) {\r\n      setEmailMessage('Email tidak valid.');\r\n      valid = false;\r\n    } else if (email === '' || !email) {\r\n      setEmailMessage('Email tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (phoneNumber === '' && !phoneNumber) {\r\n      setPhoneNumberMessage('No telepon tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (address === '' && !addressMessage) {\r\n      setAddressMessage('Alamat tidak boleh kosong,');\r\n      valid = false;\r\n    }\r\n\r\n    if (provinsi.name === '' || provinsi.code === '') {\r\n      setProvinsiMessage('Asal provinsi tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    if (kabupaten.name === '' || kabupaten.code === '') {\r\n      setKabupatenMessage('Asal provinsi tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    if (kecamatan.name === '' || kecamatan.code === '') {\r\n      setKecamatanMessage('Asal provinsi tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    if (!postalCode) {\r\n      setPostalCodeMessage('Kode Pos tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (type === '' || !type) {\r\n      setBusinessEntityMessage('Badan Usaha tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    if (zone.id === 0 || zone.name === '') {\r\n      setZoneMessage('Badan Usaha tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    return valid;\r\n  };\r\n\r\n  const resetValidation = () => {\r\n    setNameMessage('');\r\n    setEmailMessage('');\r\n    setPhoneNumberMessage('');\r\n    setAddressMessage('');\r\n    setProvinsiMessage('');\r\n    setKabupatenMessage('');\r\n    setKecamatanMessage('');\r\n    setPostalCodeMessage('');\r\n    setBusinessEntityMessage('');\r\n  };\r\n\r\n  return (\r\n    <Grid container direction='row' className={classes.gridWrapper}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container direction='row' item lg={12} md={12} sm={12} justify='space-between'>\r\n          <Grid container item lg={6} sm={6} md={6} xs={6} justify='center'>\r\n            <IconButton onClick={() => setPartnerType('SUPPLIER')}>Supllier</IconButton>\r\n          </Grid>\r\n\r\n          <Grid container item lg={6} sm={6} md={6} xs={6} justify='center'>\r\n            <IconButton onClick={() => setPartnerType('CUSTOMER')}>Reseller</IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n      <Grid container direction='row' justify='center' className={classes.tabGrid}>\r\n        <Tabs value={value} indicatorColor='primary' onChange={handleChange} aria-label='disabled tabs example'>\r\n          <Tab label='Informasi' {...a11yProps(0)} />\r\n          <Tab label='Alamat' {...a11yProps(1)} />\r\n        </Tabs>\r\n      </Grid>\r\n\r\n      <TabPanel value={value} index={0}>\r\n        <Grid container direction='row' justify='space-between'>\r\n          <Grid container item lg={6} sm={6} md={6} xs={6} spacing={1}>\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='partnerId'\r\n                required\r\n                fullWidth\r\n                placeholder='ID Mitra'\r\n                value={partnerId}\r\n                onChange={event => setPartnerId(event.target.value)}\r\n                disabled\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='name'\r\n                name='name'\r\n                required\r\n                fullWidth\r\n                placeholder='Nama *'\r\n                value={name}\r\n                onChange={event => setName(event.target.value)}\r\n                error={nameMessage !== ''}\r\n                helperText={nameMessage}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='phoneNumber'\r\n                required\r\n                fullWidth\r\n                placeholder='No Telepon *'\r\n                value={phoneNumber}\r\n                onChange={event => setPhoneNumber(event.target.value)}\r\n                error={phoneNumberMessage !== ''}\r\n                helperText={phoneNumberMessage}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='website'\r\n                required\r\n                fullWidth\r\n                placeholder='Laman Website'\r\n                value={website}\r\n                onChange={event => setWebsite(event.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container item lg={6} sm={6} md={6} xs={6} spacing={1}>\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <FormControl fullWidth variant='outlined' size='small' className={classes.select}>\r\n                <Select\r\n                  id='type'\r\n                  value={type as string}\r\n                  placeholder='Badan Usaha *'\r\n                  onChange={event => setType(event.target.value as string)}\r\n                  error={businessEntityMessage !== ''}\r\n                >\r\n                  <MenuItem key={1} value='PT' disabled>\r\n                    Badan Usaha\r\n                  </MenuItem>\r\n                  <MenuItem key={2} value='PT'>\r\n                    PT\r\n                  </MenuItem>\r\n                  <MenuItem key={3} value='CV'>\r\n                    CV\r\n                  </MenuItem>\r\n                  <MenuItem key={4} value='Firma'>\r\n                    Firma\r\n                  </MenuItem>\r\n                  <MenuItem key={5} value='Koperasi'>\r\n                    Koperasi\r\n                  </MenuItem>\r\n                  <MenuItem key={5} value='Perorangan'>\r\n                    Perorangan\r\n                  </MenuItem>\r\n                </Select>\r\n                {businessEntityMessage !== '' && <FormHelperText>{businessEntityMessage}</FormHelperText>}\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='email'\r\n                name='email'\r\n                required\r\n                fullWidth\r\n                placeholder='Email '\r\n                value={email}\r\n                onChange={event => setEmail(event.target.value)}\r\n                error={emailMessage !== ''}\r\n                helperText={emailMessage}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='cellPhoneNumber'\r\n                required\r\n                fullWidth\r\n                placeholder='No Handphone '\r\n                value={cellPhoneNumber}\r\n                onChange={event => setCellPhoneNumber(event.target.value)}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='virtualAccount'\r\n                required\r\n                fullWidth\r\n                placeholder='No Virtual Account'\r\n                value={virtualAccount}\r\n                onChange={event => setVirtualAccount(event.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={1}>\r\n        <Grid container direction='row' justify='space-between'>\r\n          <Grid container direction='row' item lg={6} sm={6} md={6} xs={6} spacing={1}>\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='address'\r\n                required\r\n                fullWidth\r\n                placeholder='Alamat'\r\n                value={address}\r\n                onChange={event => setAddress(event.target.value)}\r\n                error={addressMessage !== ''}\r\n                helperText={addressMessage}\r\n              />``\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <Autocomplete\r\n                id='kabupaten'\r\n                fullWidth\r\n                value={kabupaten}\r\n                options={region}\r\n                getOptionLabel={option => option.name}\r\n                onChange={(event: any, value: any) => {\r\n                  setKabupaten(value);\r\n                  setRegion([dummyRegion]);\r\n                }}\r\n                renderInput={params => (\r\n                  <TextField\r\n                    {...params}\r\n                    fullWidth\r\n                    placeholder='Kabupaten *'\r\n                    size='small'\r\n                    onChange={handleSearchKabupaten}\r\n                    variant='outlined'\r\n                    error={kabupatenMessage !== ''}\r\n                    helperText={kabupatenMessage}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <Autocomplete\r\n                id='zone'\r\n                fullWidth\r\n                value={zone}\r\n                options={route}\r\n                getOptionLabel={option => option.name}\r\n                onChange={(event: any, value: any) => setZone(value)}\r\n                renderInput={params => (\r\n                  <TextField\r\n                    {...params}\r\n                    placeholder='Route *'\r\n                    size='small'\r\n                    onChange={handleSearchZone}\r\n                    variant='outlined'\r\n                    error={zoneMessage !== ''}\r\n                    helperText={zoneMessage}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container direction='row' item lg={6} sm={6} md={6} xs={6} spacing={1}>\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <Autocomplete\r\n                id='provinsi'\r\n                fullWidth\r\n                value={provinsi}\r\n                options={region}\r\n                getOptionLabel={option => option.name}\r\n                onChange={(event: any, value: any) => {\r\n                  setProvinsi(value);\r\n                  setRegion([dummyRegion]);\r\n                }}\r\n                renderInput={params => (\r\n                  <TextField\r\n                    {...params}\r\n                    placeholder='Provinsi *'\r\n                    size='small'\r\n                    onChange={handleSearchProvinsi}\r\n                    variant='outlined'\r\n                    error={provinsiMessage !== ''}\r\n                    helperText={provinsiMessage}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <Autocomplete\r\n                id='kecamatan'\r\n                fullWidth\r\n                value={kecamatan}\r\n                options={region}\r\n                getOptionLabel={option => option.name}\r\n                onChange={(event: any, value: any) => {\r\n                  setKecamatan(value);\r\n                  setRegion([dummyRegion]);\r\n                }}\r\n                renderInput={params => (\r\n                  <TextField\r\n                    {...params}\r\n                    placeholder='Kecamatan *'\r\n                    size='small'\r\n                    onChange={handleSearchKecamatan}\r\n                    variant='outlined'\r\n                    error={kecamatanMessage !== ''}\r\n                    helperText={kecamatanMessage}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='postalCode'\r\n                required\r\n                fullWidth\r\n                placeholder='Kode Pos '\r\n                type='number'\r\n                value={postalCode}\r\n                onChange={event => setPostalCode(+event.target.value)}\r\n                error={postalCodeMessage !== ''}\r\n                helperText={postalCodeMessage}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </TabPanel>\r\n\r\n      <Grid container direction='row' className={classes.notesGrid}>\r\n        <Grid item lg={12} sm={12} md={12} xs={12}>\r\n          <TextField\r\n            id='notes'\r\n            rows={4}\r\n            multiline\r\n            required\r\n            fullWidth\r\n            placeholder='Keterangan '\r\n            value={notes}\r\n            onChange={event => setNotes(event.target.value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container item lg={12} md={12} sm={12} xs={12} spacing={1} justify='flex-end' className={classes.buttonGrid}>\r\n        <Grid item>\r\n          <Button disabled={isSubmit} color='secondary' onClick={() => setOpen(false)}>\r\n            Batal\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button type='submit' disabled={isSubmit} onClick={handleOnSubmit}>\r\n            Simpan\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PartnerWizard;\r\n","import React, { FC, Fragment } from 'react';\r\nimport { createStyles, makeStyles, Modal, Theme, Typography, IconButton, Paper, WithStyles, withStyles } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport PartnerWizard from './components/PartnerWizard';\r\n\r\ninterface Props {\r\n  partners: PartnerModel[];\r\n  open: boolean;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setPartners: React.Dispatch<React.SetStateAction<PartnerModel[]>>;\r\n  handleSnackBar: (open: boolean, variant: 'success' | 'error', message: string) => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2)\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1)\r\n    }\r\n  });\r\n\r\ninterface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      position: 'absolute',\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2),\r\n      outline: 'none',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      borderRadius: 4\r\n    }\r\n  })\r\n);\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant='h6'>{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label='close' className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}))(MuiDialogContent);\r\n\r\nconst PartnerModal: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { partners, open, setOpen, setPartners, handleSnackBar } = props;\r\n\r\n  const handleClose = (event: {}, reason: 'backdropClick' | 'escapeKeyDown') => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog\r\n        maxWidth={'md'}\r\n        fullWidth={true}\r\n        disableBackdropClick={true}\r\n        onClose={handleClose}\r\n        aria-labelledby='customized-dialog-title'\r\n        open={open}\r\n      >\r\n        <DialogTitle id='customized-dialog-title' onClose={() => setOpen(false)}>\r\n          <Typography id='modal-title' variant='h1' component='h1'>\r\n            Tambah Mitra Baru\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <PartnerWizard partners={partners} setPartners={setPartners} setOpen={setOpen} handleSnackBar={handleSnackBar} />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PartnerModal;\r\n","import React, { FC, useEffect, useCallback, useState } from 'react';\r\nimport { Grid, Container, Typography, makeStyles, Button, Paper } from '@material-ui/core';\r\nimport { AddBox } from '@material-ui/icons';\r\nimport { Page, StandardConfirmationDialog, PaperCustom, Breadcrumb } from 'components';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { PARTNER_BASE_URL } from 'constants/url';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport PartnerTable from './components/PartnerTable';\r\nimport PartnerModal from './components/PartnerModal';\r\n\r\nconst useStyles = makeStyles({\r\n  titleWrapper: {\r\n    marginTop: 24\r\n  }\r\n});\r\n\r\nconst dummyPartner: PartnerModel = {\r\n  id: 0,\r\n  partnerId: '',\r\n  name: '',\r\n  address: '',\r\n  areaCode: '',\r\n  businessEntity: '',\r\n  cellPhoneNumber: '',\r\n  email: '',\r\n  notes: '',\r\n  phoneNumber: '',\r\n  postalCode: 0,\r\n  regionName: '',\r\n  virtualAccount: '',\r\n  website: '',\r\n  partnerType: 'SUPPLIER'\r\n};\r\n\r\nconst PartnerPage: FC = () => {\r\n  const styles = useStyles();\r\n\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [count, setCount] = useState<number>(0);\r\n  const [query, setQuery] = useState<string>('');\r\n  const [queryString, setQueryString] = useState<string>();\r\n  const [isLoadingData, setIsLoadingData] = useState<boolean>(false);\r\n  const [currentPage, setCurrentPage] = useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(10);\r\n  const [partners, setPartners] = useState<PartnerModel[]>([dummyPartner]);\r\n  const [order, setOrder] = useState<'asc' | 'desc'>('asc');\r\n  const [orderBy, setOrderBy] = useState<string>('id');\r\n  const [partnerId, setPartnerId] = useState<string>('');\r\n  const [name, setName] = useState<string>('');\r\n  const [address, setAddress] = useState<string>('');\r\n  const [type, setType] = useState<string>('');\r\n  const [email, setEmail] = useState<string>('');\r\n  const [cellPhoneNumber, setCellPhoneNumber] = useState<string>('');\r\n  const [selectedId, setSelectedId] = useState<number>();\r\n  const [confirmationDelete, setConfirmationDelete] = useState<boolean>(false);\r\n  const [snackbarVariant, setSnackbarVariant] = useState<'success' | 'error'>('success');\r\n  const [message, setMessage] = useState<string>('');\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    setIsLoadingData(true);\r\n\r\n    const getQueryParams = () => {\r\n      const params = new URLSearchParams();\r\n      if (queryString) {\r\n        params.append('keyword', queryString);\r\n      }\r\n\r\n      if (name) {\r\n        params.append('keyword', name);\r\n      }\r\n\r\n      if (address) {\r\n        params.append('keyword', address);\r\n      }\r\n\r\n      if (email) {\r\n        params.append('keyword', email);\r\n      }\r\n\r\n      if (cellPhoneNumber) {\r\n        params.append('keyword', cellPhoneNumber);\r\n      }\r\n\r\n      if (partnerId) {\r\n        params.append('keyword', partnerId);\r\n      }\r\n\r\n      if (type) {\r\n        params.append('keyword', type);\r\n      }\r\n\r\n      if (orderBy || order) {\r\n        params.append('orderBy', orderBy);\r\n        params.append('ordered', order);\r\n      }\r\n\r\n      params.append('perPage', rowsPerPage.toString());\r\n      params.append('page', currentPage.toString());\r\n\r\n      return params.toString();\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`${PARTNER_BASE_URL}?${getQueryParams()}`, { cancelToken: cancelTokenSource.token });\r\n      setPartners(data.data);\r\n      setCount(data.meta.total);\r\n    } catch (error) {}\r\n    setIsLoadingData(false);\r\n    return () => {\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, [queryString, orderBy, order, name, address, email, partnerId, cellPhoneNumber, type, currentPage, rowsPerPage]);\r\n\r\n  const performActionAndRevertPage = (action: React.Dispatch<React.SetStateAction<any>>, actionParam: any) => {\r\n    setCurrentPage(0);\r\n    action(actionParam);\r\n  };\r\n\r\n  const handleSearch = useCallback((searchQuery: string) => {\r\n    performActionAndRevertPage(setQueryString, searchQuery);\r\n  }, []);\r\n\r\n  const debouncedSearchTerm = useDebounce(query, 500);\r\n\r\n  useEffect(() => {\r\n    if (debouncedSearchTerm.length >= 3) {\r\n      handleSearch(debouncedSearchTerm);\r\n    } else if (debouncedSearchTerm.length === 0) {\r\n      handleSearch(debouncedSearchTerm);\r\n    }\r\n  }, [debouncedSearchTerm, handleSearch]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const handleConfirmationDelete = (id: number): React.MouseEventHandler => () => {\r\n    setSelectedId(id);\r\n    setConfirmationDelete(true);\r\n  };\r\n\r\n  const handleCloseConfirmationDelete = () => {\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const deletePartner = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    try {\r\n      await axios.delete(`${PARTNER_BASE_URL}/${selectedId}`, { cancelToken: cancelTokenSource.token });\r\n      setPartners(partners.filter(value => value.id !== selectedId));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const handleSnackBar = (open: boolean, variant: 'success' | 'error', message: string) => {\r\n    setSnackbarVariant(variant);\r\n    setOpenSnackbar(open);\r\n    setMessage(message);\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n    <Page title='Mitra'>\r\n      <Container>\r\n        <Grid container direction='row'>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Typography variant='h1' component='h1'>\r\n              Semua Mitra\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Breadcrumb />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <PaperCustom>\r\n          <Grid container direction='row'>\r\n            <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n              <Grid container direction='row' justify='space-between'>\r\n                <Grid container item lg={6} sm={6} md={6} justify='flex-start' alignItems='center'>\r\n                  <Grid item></Grid>\r\n                </Grid>\r\n\r\n                <Grid container item lg={6} sm={6} md={6} justify='flex-end' alignItems='center'>\r\n                  <Grid item>\r\n                    <Button onClick={() => setOpen(true)}>\r\n                      <AddBox fontSize='small' /> &nbsp; Tambah Mitra\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <PartnerTable\r\n                isLoadingData={isLoadingData}\r\n                count={count}\r\n                currentPage={currentPage}\r\n                rowsPerPage={rowsPerPage}\r\n                partners={partners}\r\n                queryString={queryString}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                name={name}\r\n                setName={setName}\r\n                address={address}\r\n                setAddress={setAddress}\r\n                type={type}\r\n                setType={setType}\r\n                email={email}\r\n                setEmail={setEmail}\r\n                partnerId={partnerId}\r\n                setPartnerId={setPartnerId}\r\n                cellPhoneNumber={cellPhoneNumber}\r\n                setCellPhoneNumber={setCellPhoneNumber}\r\n                setOrder={setOrder}\r\n                setOrderBy={setOrderBy}\r\n                handleChangeRowsPerPage={event => performActionAndRevertPage(setRowsPerPage, +event.target.value)}\r\n                handleChangePage={(event, page) => setCurrentPage(page)}\r\n                handleConfirmationDelete={handleConfirmationDelete}\r\n              />\r\n\r\n              <PartnerModal partners={partners} open={open} setOpen={setOpen} setPartners={setPartners} handleSnackBar={handleSnackBar} />\r\n\r\n              <StandardConfirmationDialog\r\n                variant={snackbarVariant}\r\n                titleMessage={snackbarVariant === 'success' ? 'Success!' : 'Error!'}\r\n                message={message}\r\n                open={openSnackbar}\r\n                handleClose={handleCloseSnackbar}\r\n                onConfirm={handleCloseSnackbar}\r\n                noCancelButton={true}\r\n              />\r\n\r\n              <StandardConfirmationDialog\r\n                variant={'danger'}\r\n                titleMessage={'Delete'}\r\n                message={'Are you sure want to delete this data?'}\r\n                open={confirmationDelete}\r\n                handleClose={handleCloseConfirmationDelete}\r\n                onConfirm={deletePartner}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </PaperCustom>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default PartnerPage;\r\n","import React, { FC } from 'react';\r\nimport { Tooltip, IconButton } from '@material-ui/core';\r\nimport { EditOutlined, DeleteOutline } from '@material-ui/icons';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { TableCellMiddle, TableCellEnd, TableCellStart } from 'components/Table/TableCellCustom';\r\nimport TableRowCustom from 'components/Table/TableRowCustom';\r\n\r\ninterface Props {\r\n  category: CategoryModel;\r\n  isLoading: boolean;\r\n  onDelete: React.MouseEventHandler;\r\n  onUpdate: React.MouseEventHandler;\r\n}\r\n\r\nconst BodyRow: FC<Props> = props => {\r\n  const { category, isLoading, onDelete, onUpdate } = props;\r\n\r\n  return (\r\n    <TableRowCustom>\r\n      <TableCellStart>{isLoading ? <Skeleton variant='text' width={'100%'} height={25} /> : category.name}</TableCellStart>\r\n      <TableCellMiddle>{isLoading ? <Skeleton variant='text' width={'100%'} height={25} /> : ''}</TableCellMiddle>\r\n      <TableCellEnd align='right'>\r\n        {isLoading ? (\r\n          <Skeleton variant='text' width={'100%'} height={25} />\r\n        ) : (\r\n          <>\r\n            <Tooltip title='Hapus Kategori'>\r\n              <IconButton size='small' onClick={onDelete}>\r\n                <DeleteOutline fontSize='small' />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title='Perbaharui Kategori'>\r\n              <IconButton size='small' onClick={onUpdate}>\r\n                <EditOutlined fontSize='small' />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        )}\r\n      </TableCellEnd>\r\n    </TableRowCustom>\r\n  );\r\n};\r\n\r\nexport default BodyRow;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport { TableContainer, TableBody, TableHead, TableRow, TableCell, TextField, makeStyles } from '@material-ui/core';\r\nimport { HeaderRow, TableCellHead, TableCustom } from 'components/Table';\r\nimport BodyRow from './components/BodyRow';\r\n\r\ninterface Props {\r\n  isLoadingData: boolean;\r\n  categories?: CategoryModel[];\r\n  queryString?: string;\r\n  order: 'asc' | 'desc';\r\n  orderBy: string;\r\n  name: string;\r\n  setName: React.Dispatch<React.SetStateAction<string>>;\r\n  description: string;\r\n  setDescription: React.Dispatch<React.SetStateAction<string>>;\r\n  setOrder: React.Dispatch<React.SetStateAction<'asc' | 'desc'>>;\r\n  setOrderBy: React.Dispatch<React.SetStateAction<string>>;\r\n  handleConfirmationDelete: (id: number) => React.MouseEventHandler;\r\n  handleOnUpdate: (id: number) => React.MouseEventHandler;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  cellStart: {\r\n    width: '20%'\r\n  }\r\n});\r\n\r\nconst dummyCategory: CategoryModel = {\r\n  id: 0,\r\n  name: ''\r\n};\r\n\r\nconst CategoryTable: FC<Props> = props => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    isLoadingData,\r\n    categories,\r\n    order,\r\n    orderBy,\r\n    name,\r\n    setName,\r\n    description,\r\n    setDescription,\r\n    setOrder,\r\n    setOrderBy,\r\n    queryString,\r\n    handleConfirmationDelete,\r\n    handleOnUpdate\r\n  } = props;\r\n\r\n  const [showSkeleton, setShowSkeleton] = useState<boolean>(false);\r\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: string) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoadingData) {\r\n      setShowSkeleton(true);\r\n    }\r\n    return () => {\r\n      setShowSkeleton(false);\r\n    };\r\n  }, [isLoadingData]);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <TableCustom>\r\n        <TableHead>\r\n          <HeaderRow\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            headers={[{ id: 'name', label: 'Kategori Induk', sort: true }, { id: 'description', label: 'Deskripsi', sort: true }, { label: '' }]}\r\n          />\r\n          <TableRow>\r\n            <TableCellHead variant='head' className={classes.cellStart}>\r\n              <TextField id='name' variant='outlined' value={name} onChange={event => setName(event.target.value)} size='small' margin='dense' />\r\n            </TableCellHead>\r\n            <TableCellHead variant='head' colSpan={2}>\r\n              <TextField\r\n                id='description'\r\n                variant='outlined'\r\n                value={description}\r\n                onChange={event => setDescription(event.target.value)}\r\n                size='small'\r\n                margin='dense'\r\n              />\r\n            </TableCellHead>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {showSkeleton ? (\r\n            [0, 1, 2, 3].map(index => (\r\n              <BodyRow\r\n                key={index + 1}\r\n                isLoading={showSkeleton}\r\n                category={dummyCategory}\r\n                onDelete={handleConfirmationDelete(0)}\r\n                onUpdate={handleOnUpdate(0)}\r\n              />\r\n            ))\r\n          ) : categories && categories.length > 0 ? (\r\n            categories.map((value, index) => (\r\n              <BodyRow\r\n                key={index + 1}\r\n                isLoading={showSkeleton}\r\n                category={value}\r\n                onDelete={handleConfirmationDelete(value.id)}\r\n                onUpdate={handleOnUpdate(index)}\r\n              />\r\n            ))\r\n          ) : (\r\n            <TableRow>\r\n              <TableCell colSpan={7} align='center'>\r\n                {queryString ? 'No matching result' : 'Data Not Available'}\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </TableCustom>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default CategoryTable;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport { makeStyles, TextField, Button, Grid } from '@material-ui/core';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { CATEGORY_BASE_URL } from 'constants/url';\r\n\r\ninterface Props {\r\n  categories: CategoryModel[];\r\n  category: CategoryModel | null;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setCategories: React.Dispatch<React.SetStateAction<CategoryModel[]>>;\r\n  setCategory: React.Dispatch<React.SetStateAction<CategoryModel | null>>;\r\n  handleSnackBar: (open: boolean, variant: 'success' | 'error', message: string) => void;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  notesGrid: {\r\n    marginTop: 10\r\n  },\r\n  buttonGrid: {\r\n    marginTop: 10\r\n  },\r\n  tabGrid: {\r\n    marginBottom: 10\r\n  }\r\n});\r\n\r\nconst CategoryWizard: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { categories, category, setCategories, setCategory, setOpen, handleSnackBar } = props;\r\n  const [id, setId] = useState<number>(0);\r\n  const [name, setName] = useState<string>('');\r\n  const [description, setDescription] = useState<string>('');\r\n\r\n  const [isSubmit, setSubmit] = useState<boolean>(false);\r\n  const [nameMessage, setNameMessage] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    if (!category) {\r\n      return;\r\n    }\r\n\r\n    setId(category.id);\r\n    setName(category.name);\r\n  }, [category]);\r\n\r\n  const handleOnCancel = (): void => {\r\n    setOpen(false);\r\n    resetForm();\r\n  };\r\n\r\n  const handleOnSubmit = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    resetValidation();\r\n\r\n    if (!validation()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSubmit(true);\r\n      const { data } = await axios.post(\r\n        `${CATEGORY_BASE_URL}`,\r\n        {\r\n          id,\r\n          name,\r\n          description\r\n        },\r\n        {\r\n          cancelToken: cancelTokenSource.token\r\n        }\r\n      );\r\n\r\n      if (category) {\r\n        setCategories(\r\n          categories.map(value => {\r\n            if (value.id === data.data.id) {\r\n              return data.data;\r\n            }\r\n            return value;\r\n          })\r\n        );\r\n        resetForm();\r\n      } else {\r\n        setCategories([data.data, ...categories]);\r\n        resetForm();\r\n      }\r\n\r\n      setOpen(false);\r\n      handleSnackBar(true, 'success', 'Kategori berhasil ditambahkan');\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n      handleSnackBar(true, 'error', 'Kategori gagal ditambahkan');\r\n    }\r\n    setSubmit(false);\r\n  };\r\n\r\n  const validation = (): boolean => {\r\n    let valid = true;\r\n\r\n    if (name === '' || !name) {\r\n      setNameMessage('Nama tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  const resetValidation = () => {\r\n    setNameMessage('');\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setDescription('');\r\n    setId(0);\r\n    setCategory(null);\r\n  };\r\n\r\n  return (\r\n    <Grid container direction='row' spacing={2}>\r\n      <Grid item lg={12} sm={12} md={12} xs={12}>\r\n        <TextField\r\n          id='name'\r\n          name='name'\r\n          required\r\n          fullWidth\r\n          size='small'\r\n          variant='outlined'\r\n          placeholder='Nama *'\r\n          value={name}\r\n          onChange={event => setName(event.target.value)}\r\n          error={nameMessage !== ''}\r\n          helperText={nameMessage}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item lg={12} sm={12} md={12} xs={12}>\r\n        <TextField\r\n          id='Deskripsi'\r\n          rows={4}\r\n          multiline\r\n          required\r\n          fullWidth\r\n          size='small'\r\n          variant='outlined'\r\n          placeholder='Deskripsi '\r\n          value={description}\r\n          onChange={event => setDescription(event.target.value)}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid container item lg={12} md={12} sm={12} xs={12} spacing={2} justify='center' className={classes.buttonGrid}>\r\n        <Grid item>\r\n          <Button disabled={isSubmit} color='secondary' onClick={handleOnCancel}>\r\n            Batal\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button type='submit' disabled={isSubmit} onClick={handleOnSubmit}>\r\n            Simpan\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CategoryWizard;\r\n","import React, { FC, Fragment } from 'react';\r\nimport { createStyles, makeStyles, Modal, Theme, Typography, IconButton, WithStyles, withStyles } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CategoryWizard from './components/CategoryWizard';\r\n\r\ninterface Props {\r\n  categories: CategoryModel[];\r\n  category: CategoryModel | null;\r\n  open: boolean;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setCategories: React.Dispatch<React.SetStateAction<CategoryModel[]>>;\r\n  setCategory: React.Dispatch<React.SetStateAction<CategoryModel | null>>;\r\n  handleSnackBar: (open: boolean, variant: 'success' | 'error', message: string) => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2)\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1)\r\n    }\r\n  });\r\n\r\ninterface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose?: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n   \r\n  })\r\n);\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant='h6'>{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label='close' className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}))(MuiDialogContent);\r\n\r\nconst CategoryModal: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { categories, open, setOpen, category, setCategories, setCategory, handleSnackBar } = props;\r\n\r\n  const handleClose = (event: {}, reason: 'backdropClick' | 'escapeKeyDown') => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog\r\n        maxWidth={'sm'}\r\n        disableBackdropClick={true}\r\n        onClose={handleClose}\r\n        aria-labelledby='customized-dialog-title'\r\n        open={open}\r\n      >\r\n        <DialogTitle id='customized-dialog-title'>\r\n          <Typography id='modal-title' variant='h1' component='h1'>\r\n            {category ? 'Perbaharui Kategori' : 'Tambah Kategori Baru'}\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <CategoryWizard\r\n            category={category}\r\n            categories={categories}\r\n            setCategories={setCategories}\r\n            setCategory={setCategory}\r\n            setOpen={setOpen}\r\n            handleSnackBar={handleSnackBar}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CategoryModal;\r\n","import React, { FC, useEffect, useCallback, useState } from 'react';\r\nimport { Grid, Container, Typography, Button } from '@material-ui/core';\r\nimport { Page, StandardConfirmationDialog, PaperCustom, Breadcrumb } from 'components';\r\nimport { AddBox } from '@material-ui/icons';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { CATEGORY_BASE_URL } from 'constants/url';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport CategoryTable from './components/CategoryTable';\r\nimport CategoryModal from './components/CategoryModal';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst dummyCategory: CategoryModel = {\r\n  id: 0,\r\n  name: ''\r\n};\r\n\r\nconst CategoryPage: FC = () => {\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [count, setCount] = useState<number>(0);\r\n  const [query, setQuery] = useState<string>('');\r\n  const [queryString, setQueryString] = useState<string>();\r\n  const [isLoadingData, setIsLoadingData] = useState<boolean>(false);\r\n  const [currentPage, setCurrentPage] = useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(10);\r\n  const [categories, setCategories] = useState<CategoryModel[]>([dummyCategory]);\r\n  const [category, setCategory] = useState<CategoryModel | null>(null);\r\n  const [order, setOrder] = useState<'asc' | 'desc'>('asc');\r\n  const [orderBy, setOrderBy] = useState<string>('id');\r\n  const [name, setName] = useState<string>('');\r\n  const [description, setDescription] = useState<string>('');\r\n  const [selectedId, setSelectedId] = useState<number>();\r\n  const [confirmationDelete, setConfirmationDelete] = useState<boolean>(false);\r\n  const [snackbarVariant, setSnackbarVariant] = useState<'success' | 'error'>('success');\r\n  const [message, setMessage] = useState<string>('');\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    setIsLoadingData(true);\r\n\r\n    const getQueryParams = () => {\r\n      const params = new URLSearchParams();\r\n      if (queryString) {\r\n        params.append('keyword', queryString);\r\n      }\r\n\r\n      if (name) {\r\n        params.append('keyword', name);\r\n      }\r\n\r\n      if (orderBy || order) {\r\n        params.append('orderBy', orderBy);\r\n        params.append('ordered', order);\r\n      }\r\n\r\n      params.append('page', currentPage.toString());\r\n\r\n      return params.toString();\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`${CATEGORY_BASE_URL}?${getQueryParams()}`, { cancelToken: cancelTokenSource.token });\r\n      setCategories(data.data);\r\n      setCount(data.meta.total);\r\n    } catch (error) {}\r\n    setIsLoadingData(false);\r\n    return () => {\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, [queryString, orderBy, order, name, currentPage, rowsPerPage]);\r\n\r\n  const performActionAndRevertPage = (action: React.Dispatch<React.SetStateAction<any>>, actionParam: any) => {\r\n    setCurrentPage(0);\r\n    action(actionParam);\r\n  };\r\n\r\n  const handleSearch = useCallback((searchQuery: string) => {\r\n    performActionAndRevertPage(setQueryString, searchQuery);\r\n  }, []);\r\n\r\n  const debouncedSearchTerm = useDebounce(query, 500);\r\n\r\n  useEffect(() => {\r\n    if (debouncedSearchTerm.length >= 3) {\r\n      handleSearch(debouncedSearchTerm);\r\n    } else if (debouncedSearchTerm.length === 0) {\r\n      handleSearch(debouncedSearchTerm);\r\n    }\r\n  }, [debouncedSearchTerm, handleSearch]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const handleConfirmationDelete = (id: number): React.MouseEventHandler => () => {\r\n    setSelectedId(id);\r\n    setConfirmationDelete(true);\r\n  };\r\n\r\n  const handleOnUpdate = (id: number): React.MouseEventHandler => () => {\r\n    setOpen(true);\r\n    setCategory(categories[id]);\r\n  };\r\n\r\n  const handleCloseConfirmationDelete = () => {\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const deleteCategory = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    try {\r\n      await axios.delete(`${CATEGORY_BASE_URL}/${selectedId}`, { cancelToken: cancelTokenSource.token });\r\n      setCategories(categories.filter(value => value.id !== selectedId));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const handleSnackBar = (open: boolean, variant: 'success' | 'error', message: string) => {\r\n    setSnackbarVariant(variant);\r\n    setOpenSnackbar(open);\r\n    setMessage(message);\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  const handleOpenForm = (): void => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Page title='Kategori'>\r\n      <Container>\r\n        <Grid container direction='row'>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Typography variant='h1'> Semua Kategori </Typography>\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Breadcrumb />\r\n          </Grid>\r\n        </Grid>\r\n        <PaperCustom>\r\n          <Grid container direction='row' spacing={2}>\r\n            <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n              <Grid container direction='row' justify='space-between'>\r\n                <Grid container item lg={8} sm={8} md={8} justify='flex-start' alignItems='center'>\r\n                  <Grid item></Grid>\r\n                </Grid>\r\n\r\n                <Grid container item lg={4} sm={4} md={4} justify='flex-end' alignItems='center'>\r\n                  <Grid item>\r\n                    <Button disabled={isLoadingData} onClick={handleOpenForm}>\r\n                      <AddBox fontSize='small' /> &nbsp; Tambah Kategori\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container justify='center' item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n              <CategoryTable\r\n                isLoadingData={isLoadingData}\r\n                categories={categories}\r\n                queryString={queryString}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                name={name}\r\n                setName={setName}\r\n                description={description}\r\n                setDescription={setDescription}\r\n                setOrder={setOrder}\r\n                setOrderBy={setOrderBy}\r\n                handleConfirmationDelete={handleConfirmationDelete}\r\n                handleOnUpdate={handleOnUpdate}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid container justify='center' item xl={12} md={12} sm={12}>\r\n              {categories.length > 0 && (\r\n                <Pagination count={count} onChange={(event, page) => setCurrentPage(page)} page={currentPage} boundaryCount={2} variant='outlined' />\r\n              )}\r\n            </Grid>\r\n\r\n            <CategoryModal\r\n              category={category}\r\n              categories={categories}\r\n              open={open}\r\n              setOpen={setOpen}\r\n              setCategories={setCategories}\r\n              setCategory={setCategory}\r\n              handleSnackBar={handleSnackBar}\r\n            />\r\n\r\n            <StandardConfirmationDialog\r\n              variant={snackbarVariant}\r\n              titleMessage={snackbarVariant === 'success' ? 'Success!' : 'Error!'}\r\n              message={message}\r\n              open={openSnackbar}\r\n              handleClose={handleCloseSnackbar}\r\n              onConfirm={handleCloseSnackbar}\r\n              noCancelButton={true}\r\n            />\r\n\r\n            <StandardConfirmationDialog\r\n              variant={'danger'}\r\n              titleMessage={'Menghapus Data'}\r\n              message={'Apakah kamu yakin akan menghapus data ini?'}\r\n              open={confirmationDelete}\r\n              handleClose={handleCloseConfirmationDelete}\r\n              onConfirm={deleteCategory}\r\n            />\r\n          </Grid>\r\n        </PaperCustom>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CategoryPage;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { makeStyles, createStyles, Theme, Card, CardMedia, CardContent, Typography } from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport useRouter from 'hooks/useRouter';\r\nimport NumberFormat from 'react-number-format';\r\nimport { GRAY_3, ORANGE, BLACK } from 'constants/colors';\r\n\r\ninterface Props {\r\n  product: ProductModel;\r\n  isLoading: boolean;\r\n  onDelete: React.MouseEventHandler;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      boxShadow: '0px 5px 12px rgba(0, 0, 0, 0.08)'\r\n    },\r\n    media: {\r\n      height: 156\r\n    },\r\n    productImage: {\r\n      position: 'inherit',\r\n      width: '100%',\r\n      heigth: '156'\r\n    },\r\n    title: {\r\n      fontSize: '16px',\r\n      fontStyle: 'normal',\r\n      fontWeight: 500,\r\n      letterSpacing: '0.0075em',\r\n      textAlign: 'left',\r\n      marginBottom: 5,\r\n      color: BLACK\r\n    },\r\n    code: {\r\n      fontSize: '12px',\r\n      lineHeight: '16px',\r\n      fontStyle: 'normal',\r\n      fontWeight: 400,\r\n      letterSpacing: '0.4000000059604645px',\r\n      textAlign: 'left',\r\n      color: GRAY_3,\r\n      marginBottom: '11px'\r\n    },\r\n    price: {\r\n      fontSize: '16px',\r\n      fontStyle: 'normal',\r\n      fontWeight: 700,\r\n      letterSpacing: '0.0075em',\r\n      textAlign: 'left',\r\n      marginBottom: '10px',\r\n      color: ORANGE\r\n    },\r\n    category: {\r\n      fontSize: '12px',\r\n      fontStyle: 'normal',\r\n      fontWeight: 500,\r\n      letterSpacing: '0.1px',\r\n      textAlign: 'left',\r\n      color: GRAY_3\r\n    }\r\n  })\r\n);\r\n\r\nconst dummyProductImage: ProductImageModel = {\r\n  id: 0,\r\n  path: '',\r\n  url: ''\r\n};\r\n\r\nconst dummyCategory: CategoryModel = {\r\n  id: 0,\r\n  name: ''\r\n};\r\n\r\nconst BodyRow: FC<Props> = props => {\r\n  const { product, isLoading, onDelete } = props;\r\n  const { history } = useRouter();\r\n\r\n  const classes = useStyles();\r\n  const [productImage, setProductImage] = useState<ProductImageModel>(dummyProductImage);\r\n  const [category, setCategory] = useState<CategoryModel>(dummyCategory);\r\n\r\n  useEffect(() => {\r\n    if (product.ProductImage) {\r\n      setProductImage(product.ProductImage);\r\n    }\r\n\r\n    if (product.Category) {\r\n      setCategory(product.Category);\r\n    }\r\n  }, [product.ProductImage, product.Category]);\r\n\r\n  const handleLink = () => {\r\n    history.push('/produk/detail', { id: product.id });\r\n  };\r\n\r\n  return (\r\n    <Card onClick={handleLink} elevation={0} className={classes.root}>\r\n      <CardMedia className={classes.media}>\r\n        {isLoading ? <Skeleton variant='rect' width={'100%'} height={156} /> : <img src={productImage.url} className={classes.productImage} />}\r\n      </CardMedia>\r\n      <CardContent>\r\n        <Typography component='p' className={classes.title}>\r\n          {isLoading ? <Skeleton variant='text' width={'100%'} /> : product.productName}\r\n        </Typography>\r\n        <Typography component='p' className={classes.code}>\r\n          {isLoading ? <Skeleton variant='text' width={'100%'} height={20} /> : product.productCode}\r\n        </Typography>\r\n        <Typography component='p' className={classes.price}>\r\n          {isLoading ? (\r\n            <Skeleton variant='text' width={'100%'} height={20} />\r\n          ) : (\r\n            <NumberFormat value={product.sellingPrice} displayType={'text'} thousandSeparator={true} prefix={'Rp'} />\r\n          )}\r\n        </Typography>\r\n        <Typography component='p' className={classes.category}>\r\n          {isLoading ? <Skeleton variant='text' width={'100%'} /> : category.name}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BodyRow;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport { makeStyles, Grid, Typography } from '@material-ui/core';\r\nimport BodyRow from './components/BodyRow';\r\n\r\ninterface Props {\r\n  isLoadingData: boolean;\r\n  count: number;\r\n  currentPage: number;\r\n  rowsPerPage: number;\r\n  products: ProductModel[];\r\n  queryString?: string;\r\n  order: 'asc' | 'desc';\r\n  orderBy: string;\r\n  setOrder: React.Dispatch<React.SetStateAction<'asc' | 'desc'>>;\r\n  setOrderBy: React.Dispatch<React.SetStateAction<string>>;\r\n  handleChangeRowsPerPage: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\r\n  handleChangePage: (event: React.MouseEvent<HTMLButtonElement> | null, page: number) => void;\r\n  handleConfirmationDelete: (id: number) => React.MouseEventHandler;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  thirdGrid: {\r\n    marginTop: 20\r\n  }\r\n});\r\n\r\nconst dummyProduct: ProductModel = {\r\n  id: 0,\r\n  productName: '',\r\n  productCode: '',\r\n  sellingPrice: 0,\r\n  purchasePrice: 0,\r\n  typeUnit: '',\r\n  totalStock: 0,\r\n  description: '',\r\n  isReminder: false,\r\n  minimumStock: 0\r\n};\r\n\r\nconst ProductTable: FC<Props> = props => {\r\n  const classes = useStyles();\r\n\r\n  const { isLoadingData, products, handleConfirmationDelete } = props;\r\n  const [showSkeleton, setShowSkeleton] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (isLoadingData) {\r\n      setShowSkeleton(true);\r\n    }\r\n    return () => {\r\n      setShowSkeleton(false);\r\n    };\r\n  }, [isLoadingData]);\r\n\r\n  return (\r\n    <Grid container direction='row' spacing={2} className={classes.thirdGrid}>\r\n      {showSkeleton ? (\r\n        [0, 1, 2, 3, 4, 5].map(index => (\r\n          <Grid key={index + 1} item lg={2}>\r\n            <BodyRow product={dummyProduct} isLoading={showSkeleton} onDelete={handleConfirmationDelete(0)} />\r\n          </Grid>\r\n        ))\r\n      ) : products && products.length > 0 ? (\r\n        products.map((value, index) => (\r\n          <Grid key={index + 1} item lg={2}>\r\n            <BodyRow product={value} isLoading={showSkeleton} onDelete={handleConfirmationDelete(value.id)} />\r\n          </Grid>\r\n        ))\r\n      ) : (\r\n        <Typography variant='h3'>Produk Belum tersedia</Typography>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductTable;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport {\r\n  makeStyles,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Tabs,\r\n  Tab,\r\n  Button,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Typography,\r\n  Grid,\r\n  FormHelperText,\r\n  LinearProgress\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { PRODUCT_BASE_URL, CATEGORY_BASE_URL } from 'constants/url';\r\nimport { IOSSwitch } from 'components';\r\nimport { useDropzone, FileWithPath } from 'react-dropzone';\r\n\r\ninterface Props {\r\n  products: ProductModel[];\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setProducts: React.Dispatch<React.SetStateAction<ProductModel[]>>;\r\n  handleSnackBar: (open: boolean, variant: 'success' | 'error', message: string) => void;\r\n}\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  dir?: string;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  notesGrid: {\r\n    marginTop: 10\r\n  },\r\n  buttonGrid: {\r\n    marginTop: 10\r\n  },\r\n  tabGrid: {\r\n    marginBottom: 10\r\n  },\r\n  dropZone: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: '#eeeeee',\r\n    borderStyle: 'dashed',\r\n    backgroundColor: '#fafafa',\r\n    color: '#bdbdbd',\r\n    outline: 'none',\r\n    transition: 'border .24s ease-in-out',\r\n    width: '100%'\r\n  },\r\n  thumbsContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    marginTop: 16\r\n  },\r\n  thumb: {\r\n    display: 'inline-flex',\r\n    borderRadius: 2,\r\n    border: '1px solid #eaeaea',\r\n    marginBottom: 8,\r\n    marginRight: 8,\r\n    width: 100,\r\n    height: 100,\r\n    padding: 4,\r\n    boxSizing: 'border-box'\r\n  },\r\n  thumbInner: {\r\n    display: 'flex',\r\n    minWidth: 0,\r\n    overflow: 'hidden'\r\n  },\r\n  img: {\r\n    display: 'block',\r\n    width: 'auto',\r\n    height: '100%'\r\n  },\r\n  inputFile: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div role='tabpanel' hidden={value !== index} id={`full-width-tabpanel-${index}`} aria-labelledby={`full-width-tab-${index}`} {...other}>\r\n      {value === index && <div>{children}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst a11yProps = (index: any) => {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`\r\n  };\r\n};\r\n\r\nconst dummyCategory: CategoryModel = {\r\n  id: 0,\r\n  name: ''\r\n};\r\n\r\nconst ProductWizard: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { products, setProducts, setOpen, handleSnackBar } = props;\r\n  const [productName, setProductName] = useState<string>('');\r\n  const [productCode, setProductCode] = useState<string>('');\r\n  const [sellingPrice, setSellingPrice] = useState<number>();\r\n  const [purchasePrice, setPurchasePrice] = useState<number>();\r\n  const [typeUnit, setTypeUnit] = useState<string>('');\r\n  const [description, setDescription] = useState<string>('');\r\n  const [isReminder, setReminder] = useState<boolean>(false);\r\n  const [minimumStock, setMinimumStock] = useState<number>();\r\n  const [category, setCategory] = useState<CategoryModel>();\r\n  const [categories, setCategories] = useState<CategoryModel[]>([dummyCategory]);\r\n  const [value, setValue] = useState(0);\r\n  const [isSubmit, setSubmit] = useState<boolean>(false);\r\n  const [productNameMessage, setProductNameMessage] = useState<string>('');\r\n  const [productCodeMessage, setProductCodeMessage] = useState<string>('');\r\n  const [typeUnitMessage, setTypeUnitMessage] = useState<string>('');\r\n  const [minimumStockMessage, setMinimumStockMessage] = useState<string>('');\r\n  const [sellingPriceMessage, setSellingPriceMessage] = useState<string>('');\r\n  const [purchasePriceMessage, setPurchasePriceMessage] = useState<string>('');\r\n  const [categoryMessage, setCategoryMessage] = useState<string>('');\r\n  const [files, setFiles] = useState<FileWithPath[]>([]);\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [image, setImage] = useState<[{ path: string; url: string }] | null>(null);\r\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\r\n    accept: ['image/jpeg', 'image/png'],\r\n    maxFiles: 5,\r\n    onDrop: acceptedFiles => {\r\n      setImage(null);\r\n      uploadImage(acceptedFiles);\r\n    }\r\n  });\r\n\r\n  const uploadImage = async (files: FileWithPath[]) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const formData = new FormData();\r\n    files.map((file: any) => formData.append(`image[]`, file));\r\n\r\n    setFiles(\r\n      files.map(file =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file)\r\n        })\r\n      )\r\n    );\r\n\r\n    try {\r\n      const { data } = await axios.post(`${PRODUCT_BASE_URL}/upload`, formData, {\r\n        cancelToken: cancelTokenSource.token,\r\n        onUploadProgress: (progressEvent: any) => {\r\n          const totalLength = progressEvent.lengthComputable\r\n            ? progressEvent.total\r\n            : progressEvent.target.getResponseHeader('content-length') || progressEvent.target.getResponseHeader('x-decompressed-content-length');\r\n          console.log('onUploadProgress', totalLength);\r\n          if (totalLength !== null) {\r\n            setProgress(Math.round((progressEvent.loaded * 100) / totalLength));\r\n          }\r\n        }\r\n      });\r\n      setImage(data.data);\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n    }\r\n    setProgress(0);\r\n  };\r\n\r\n  const thumbs = files.map((file: any) => (\r\n    <div className={classes.thumb} key={file.name}>\r\n      <div className={classes.thumbInner}>\r\n        <img src={file.preview} className={classes.img} />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  useEffect(\r\n    () => () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleSearchCategory = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${CATEGORY_BASE_URL}?${params.toString()}`, { cancelToken: cancelTokenSource.token });\r\n      setCategories(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n  const handleOnSubmit = async () => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    resetValidation();\r\n\r\n    if (!validation()) {\r\n      setValue(0);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSubmit(true);\r\n      const { data } = await axios.post(\r\n        `${PRODUCT_BASE_URL}`,\r\n        {\r\n          productName,\r\n          productCode,\r\n          sellingPrice,\r\n          purchasePrice,\r\n          minimumStock,\r\n          isReminder,\r\n          description,\r\n          typeUnit,\r\n          CategoryId: category!.id,\r\n          image: image || []\r\n        },\r\n        {\r\n          cancelToken: cancelTokenSource.token\r\n        }\r\n      );\r\n\r\n      setProducts([data.data, ...products]);\r\n      setOpen(false);\r\n      handleSnackBar(true, 'success', 'Product berhasil ditambahkan');\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n      handleSnackBar(true, 'error', 'Product gagal ditambahkan');\r\n    }\r\n    setSubmit(false);\r\n  };\r\n\r\n  const validation = (): boolean => {\r\n    let valid = true;\r\n\r\n    if (productName === '' || !productName) {\r\n      setProductNameMessage('Nama Produk tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (productCode === '' || !productCode) {\r\n      setProductCodeMessage('Kode Produk tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (typeUnit === '' && !typeUnit) {\r\n      setTypeUnitMessage('Satuan Produk tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (isReminder) {\r\n      if (minimumStock === 0 || !minimumStock) {\r\n        setMinimumStockMessage('Minimum Stock tidak boleh kosong,');\r\n        valid = false;\r\n      }\r\n    }\r\n\r\n    if (sellingPrice === 0 || !sellingPrice) {\r\n      setSellingPriceMessage('Harga jual tidak boleh kosong,');\r\n      valid = false;\r\n    }\r\n\r\n    if (purchasePrice === 0 || !purchasePrice) {\r\n      setPurchasePriceMessage('Harga beli tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    if (!category) {\r\n      setCategoryMessage('Kategori tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  const resetValidation = () => {\r\n    setProductNameMessage('');\r\n    setProductCodeMessage('');\r\n    setTypeUnitMessage('');\r\n    setMinimumStockMessage('');\r\n    setSellingPriceMessage('');\r\n    setPurchasePriceMessage('');\r\n    setCategoryMessage('');\r\n  };\r\n\r\n  return (\r\n    <Grid container direction='row'>\r\n      <Grid container direction='row' justify='center' className={classes.tabGrid}>\r\n        <Tabs value={value} indicatorColor='primary' textColor='inherit' onChange={handleChange}>\r\n          <Tab label='Informasi' {...a11yProps(0)} />\r\n          <Tab label='Upload Gambar' {...a11yProps(1)} />\r\n        </Tabs>\r\n      </Grid>\r\n\r\n      <Grid container direction='row' justify='space-between'>\r\n        <TabPanel value={value} index={0}>\r\n          <Grid container direction='row' spacing={1}>\r\n            <Grid container item lg={6} sm={6} md={6} xs={6} spacing={1}>\r\n              <Grid item lg={12} sm={12} md={12} xs={12}>\r\n                <Autocomplete\r\n                  id='category'\r\n                  fullWidth\r\n                  value={category}\r\n                  options={categories}\r\n                  getOptionLabel={option => option.name}\r\n                  getOptionSelected={(option, value) => option.id === value.id}\r\n                  onChange={(event: any, value: any) => setCategory(value)}\r\n                  renderInput={params => (\r\n                    <TextField\r\n                      {...params}\r\n                      placeholder='Pilih Kategori Produk *'\r\n                      size='small'\r\n                      onChange={handleSearchCategory}\r\n                      variant='outlined'\r\n                      error={categoryMessage !== ''}\r\n                      helperText={categoryMessage}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={12} sm={12} md={12} xs={12}>\r\n                <TextField\r\n                  id='productName'\r\n                  required\r\n                  fullWidth\r\n                  placeholder='Nama Product *'\r\n                  value={productName}\r\n                  onChange={event => setProductName(event.target.value)}\r\n                  error={productNameMessage !== ''}\r\n                  helperText={productNameMessage}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={12} sm={12} md={12} xs={12}>\r\n                <TextField\r\n                  id='productCode'\r\n                  required\r\n                  fullWidth\r\n                  placeholder='Kode Produk *'\r\n                  value={productCode}\r\n                  onChange={event => setProductCode(event.target.value)}\r\n                  error={productCodeMessage !== ''}\r\n                  helperText={productCodeMessage}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={12} sm={12} md={12} xs={12}>\r\n                <FormControl fullWidth variant='outlined' size='small'>\r\n                  <Select\r\n                    id='type'\r\n                    value={typeUnit as string}\r\n                    placeholder='Pilih Satuan Barang *'\r\n                    onChange={event => setTypeUnit(event.target.value as string)}\r\n                    error={typeUnitMessage !== ''}\r\n                  >\r\n                    <MenuItem key={1} value='PCS'>\r\n                      Pcs\r\n                    </MenuItem>\r\n                  </Select>\r\n                  <FormHelperText error={typeUnitMessage !== ''}>{typeUnitMessage}</FormHelperText>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container item lg={6} sm={6} md={6} xs={6} spacing={1} justify='flex-end'>\r\n              <Grid item lg={6} sm={6} md={6} xs={6}>\r\n                <TextField\r\n                  id='purchasePrice'\r\n                  type='number'\r\n                  required\r\n                  fullWidth\r\n                  placeholder='Masukkan Harga Beli '\r\n                  value={purchasePrice}\r\n                  onChange={event => setPurchasePrice(+event.target.value)}\r\n                  error={purchasePriceMessage !== ''}\r\n                  helperText={purchasePriceMessage}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={6} sm={6} md={6} xs={6}>\r\n                <TextField\r\n                  id='sellingPrice'\r\n                  required\r\n                  fullWidth\r\n                  type='number'\r\n                  placeholder='Masukkan Harga Jual '\r\n                  value={sellingPrice}\r\n                  onChange={event => setSellingPrice(+event.target.value)}\r\n                  error={sellingPriceMessage !== ''}\r\n                  helperText={sellingPriceMessage}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={6} sm={6} md={6} xs={6}>\r\n                <TextField\r\n                  id='minimumStock'\r\n                  required\r\n                  fullWidth\r\n                  placeholder='Minimum Stock'\r\n                  value={minimumStock}\r\n                  onChange={event => setMinimumStock(+event.target.value)}\r\n                  error={minimumStockMessage !== ''}\r\n                  helperText={minimumStockMessage}\r\n                  disabled={!isReminder}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={6} sm={6} md={6} xs={6}>\r\n                <FormControlLabel\r\n                  control={<IOSSwitch color='primary' value={isReminder} checked={isReminder} onChange={() => setReminder(!isReminder)} />}\r\n                  label='Pengingat Stock'\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='description'\r\n                rows={4}\r\n                multiline\r\n                required\r\n                fullWidth\r\n                size='small'\r\n                variant='outlined'\r\n                placeholder='Deskripsi Produck '\r\n                value={description}\r\n                onChange={event => setDescription(event.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={1}>\r\n          <div {...getRootProps()} className={classes.dropZone}>\r\n            <input {...getInputProps()} className={classes.inputFile} />\r\n            <p>Drag 'n' drop some files here, or click to select files</p>\r\n          </div>\r\n          <aside className={classes.thumbsContainer}>{thumbs}</aside>\r\n          {progress > 0 && <LinearProgress color='secondary' variant='determinate' value={progress} />}\r\n        </TabPanel>\r\n      </Grid>\r\n\r\n      <Grid container item lg={12} md={12} sm={12} xs={12} justify='flex-end' className={classes.buttonGrid}>\r\n        <Button color='secondary' disabled={isSubmit} onClick={() => setOpen(false)}>\r\n          Batal\r\n        </Button>\r\n        &nbsp; &nbsp;\r\n        <Button onClick={handleOnSubmit}>{value === 0 ? 'Selanjutnya' : 'Simpan'}</Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductWizard;\r\n","import React, { FC, Fragment } from 'react';\r\nimport { createStyles, makeStyles, Theme, Typography, IconButton, Paper, WithStyles, withStyles } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ProductWizard from './components/ProductWizard';\r\n\r\ninterface Props {\r\n  products: ProductModel[];\r\n  open: boolean;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setProducts: React.Dispatch<React.SetStateAction<ProductModel[]>>;\r\n  handleSnackBar: (open: boolean, variant: 'success' | 'error', message: string) => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1)\r\n    }\r\n  });\r\n\r\ninterface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose?: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n  root:{\r\n    padding: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant='h1' component='h1'>{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label='close' className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n  root: {\r\n   paddingLeft:theme.spacing(3),\r\n   paddingRight: theme.spacing(3),\r\n   paddingBottom:theme.spacing(3)\r\n  }\r\n}))(MuiDialogContent);\r\n\r\nconst ProductModal: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { products, open, setOpen, setProducts, handleSnackBar } = props;\r\n\r\n  const handleClose = (event: {}, reason: 'backdropClick' | 'escapeKeyDown') => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog\r\n        maxWidth={'md'}\r\n        disableBackdropClick={true}\r\n        onClose={handleClose}\r\n        aria-labelledby='customized-dialog-title'\r\n        open={open}\r\n      >\r\n        <DialogTitle id='customized-dialog-title'>\r\n          <Typography id='modal-title' variant='h1' component='h1'>\r\n            Tambah Produk Baru\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <ProductWizard products={products} setProducts={setProducts} setOpen={setOpen} handleSnackBar={handleSnackBar} />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductModal;\r\n","import React, { FC, useEffect, useCallback, useState } from 'react';\r\nimport { Grid, Container, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport { AddBox } from '@material-ui/icons';\r\nimport { Page, StandardConfirmationDialog, PaperCustom, Breadcrumb } from 'components';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { PRODUCT_BASE_URL } from 'constants/url';\r\nimport SearchInput from 'components/SearchInput';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport ProductTable from './components/ProductTable';\r\nimport ProductModal from './components/ProductModal';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport useRouter from 'hooks/useRouter';\r\n\r\nconst useStyles = makeStyles({\r\n  secondGrid: {},\r\n  fourthGrid: {\r\n    marginTop: 20\r\n  },\r\n});\r\n\r\nconst dummyProduct: ProductModel = {\r\n  id: 0,\r\n  productName: '',\r\n  productCode: '',\r\n  sellingPrice: 0,\r\n  purchasePrice: 0,\r\n  typeUnit: '',\r\n  totalStock: 0,\r\n  description: '',\r\n  isReminder: false,\r\n  minimumStock: 0\r\n};\r\n\r\nconst ProductPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { location } = useRouter();\r\n\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [count, setCount] = useState<number>(0);\r\n  const [query, setQuery] = useState<string>('');\r\n  const [queryString, setQueryString] = useState<string>();\r\n  const [isLoadingData, setIsLoadingData] = useState<boolean>(true);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(10);\r\n  const [products, setProducts] = useState<ProductModel[]>([dummyProduct]);\r\n  const [order, setOrder] = useState<'asc' | 'desc'>('asc');\r\n  const [orderBy, setOrderBy] = useState<string>('id');\r\n  const [selectedId, setSelectedId] = useState<number>();\r\n  const [confirmationDelete, setConfirmationDelete] = useState<boolean>(false);\r\n  const [snackbarVariant, setSnackbarVariant] = useState<'success' | 'error'>('success');\r\n  const [message, setMessage] = useState<string>('');\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n  \r\n  const fetchData = useCallback(async () => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    setIsLoadingData(true);\r\n\r\n    const getQueryParams = () => {\r\n      const params = new URLSearchParams();\r\n      if (queryString) {\r\n        params.append('keyword', queryString);\r\n      }\r\n\r\n      if (orderBy || order) {\r\n        params.append('orderBy', orderBy);\r\n        params.append('ordered', order);\r\n      }\r\n\r\n      params.append('page', currentPage.toString());\r\n\r\n      return params.toString();\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`${PRODUCT_BASE_URL}?${getQueryParams()}`, { cancelToken: cancelTokenSource.token });\r\n      setProducts(data.data);\r\n      setCount(data.meta.last_page);\r\n      setCurrentPage(data.meta.current_page);\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n    }\r\n    setIsLoadingData(false);\r\n    return () => {\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, [queryString, orderBy, order, currentPage, rowsPerPage]);\r\n\r\n  const performActionAndRevertPage = (action: React.Dispatch<React.SetStateAction<any>>, actionParam: any) => {\r\n    setCurrentPage(1);\r\n    action(actionParam);\r\n  };\r\n\r\n  const handleSearch = useCallback((searchQuery: string) => {\r\n    performActionAndRevertPage(setQueryString, searchQuery);\r\n  }, []);\r\n\r\n  const debouncedSearchTerm = useDebounce(query, 500);\r\n\r\n  useEffect(() => {\r\n    if (debouncedSearchTerm.length >= 3) {\r\n      handleSearch(debouncedSearchTerm);\r\n    } else if (debouncedSearchTerm.length === 0) {\r\n      handleSearch(debouncedSearchTerm);\r\n    }\r\n  }, [debouncedSearchTerm, handleSearch]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const handleConfirmationDelete = (id: number): React.MouseEventHandler => () => {\r\n    setSelectedId(id);\r\n    setConfirmationDelete(true);\r\n  };\r\n\r\n  const handleCloseConfirmationDelete = () => {\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const deleteProduct = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    try {\r\n      await axios.delete(`${PRODUCT_BASE_URL}/${selectedId}`, { cancelToken: cancelTokenSource.token });\r\n      setProducts(products.filter(value => value.id !== selectedId));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const handleSnackBar = (open: boolean, variant: 'success' | 'error', message: string) => {\r\n    setSnackbarVariant(variant);\r\n    setOpenSnackbar(open);\r\n    setMessage(message);\r\n  };\r\n\r\n  const handleCloseSnackbar = (): void => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  const handleOpenForm = (): void => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Page title='Produk'>\r\n      <Container>\r\n        <Grid container direction='row'>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Typography variant='h1' component='h1'> Semua Produk </Typography>\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Breadcrumb/>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <PaperCustom>\r\n          <Grid container direction='row' className={classes.secondGrid}>\r\n            <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n              <Grid container direction='row' justify='space-between'>\r\n                <Grid container item lg={6} sm={6} md={6} justify='flex-start' alignItems='center'>\r\n                  <Grid item>\r\n                    <SearchInput\r\n                      withBorder\r\n                      withTransition={false}\r\n                      width={150}\r\n                      placeHolder='Cari produk disini'\r\n                      iconColor='#989898'\r\n                      tableSearchValue={query}\r\n                      setTableSearchValue={setQuery}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid container item lg={6} sm={6} md={6} justify='flex-end' alignItems='center'>\r\n                  <Grid item>\r\n                    <Button disabled={isLoadingData} onClick={handleOpenForm}>\r\n                      <AddBox fontSize='small' /> &nbsp; Tambah Produk\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {products.length === 0 ? (\r\n                <Grid container item lg={12} md={12} sm={12} justify='center'>\r\n                  <Typography component='p'>Produk saat ini belum tersedia</Typography>\r\n                </Grid>\r\n              ) : (\r\n                <ProductTable\r\n                  isLoadingData={isLoadingData}\r\n                  count={count}\r\n                  currentPage={currentPage}\r\n                  rowsPerPage={rowsPerPage}\r\n                  products={products}\r\n                  queryString={queryString}\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  setOrder={setOrder}\r\n                  setOrderBy={setOrderBy}\r\n                  handleChangeRowsPerPage={event => performActionAndRevertPage(setRowsPerPage, +event.target.value)}\r\n                  handleChangePage={(event, page) => setCurrentPage(page)}\r\n                  handleConfirmationDelete={handleConfirmationDelete}\r\n                />\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid container justify='center' item xl={12} md={12} sm={12} className={classes.fourthGrid}>\r\n              <Grid item>\r\n                {products.length > 0 && (\r\n                  <Pagination\r\n                    count={count}\r\n                    onChange={(event, page) => setCurrentPage(page)}\r\n                    page={currentPage}\r\n                    boundaryCount={2}\r\n                    variant='outlined'\r\n                  />\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </PaperCustom>\r\n\r\n        <ProductModal products={products} open={open} setOpen={setOpen} setProducts={setProducts} handleSnackBar={handleSnackBar} />\r\n\r\n        <StandardConfirmationDialog\r\n          variant={snackbarVariant}\r\n          titleMessage={snackbarVariant === 'success' ? 'Success!' : 'Error!'}\r\n          message={message}\r\n          open={openSnackbar}\r\n          handleClose={handleCloseSnackbar}\r\n          onConfirm={handleCloseSnackbar}\r\n          noCancelButton={true}\r\n        />\r\n\r\n        <StandardConfirmationDialog\r\n          variant={'danger'}\r\n          titleMessage={'Delete'}\r\n          message={'Are you sure want to delete this data?'}\r\n          open={confirmationDelete}\r\n          handleClose={handleCloseConfirmationDelete}\r\n          onConfirm={deleteProduct}\r\n        />\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n","import React, { FC } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\ninterface Props {\r\n  productImages: ProductImageModel[];\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  thumb: {\r\n    width: '86,25px',\r\n    height: '86,25px',\r\n    borderRadius: 4\r\n  }\r\n});\r\n\r\nconst ImageSlider: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { productImages } = props;\r\n  return (\r\n    <Carousel showArrows={true}>\r\n      {productImages.map((value, index) => (\r\n        <div>\r\n          <img src={value.url} className={classes.thumb} />\r\n        </div>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default ImageSlider;\r\n","import React, { FC, Fragment } from 'react';\r\nimport { makeStyles, Table, TableBody, TableRow, withStyles, Typography, Divider } from '@material-ui/core';\r\nimport MuiTableCell from '@material-ui/core/TableCell';\r\nimport NumberFormat from 'react-number-format';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\ninterface Props {\r\n  product: ProductModel;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  cell: {\r\n    width: '40%'\r\n  },\r\n  label: {\r\n    color: '#828282',\r\n    fontWeight: 400,\r\n    fontSize: 15,\r\n    marginBottom: 4\r\n  },\r\n  text: {\r\n    fontWeight: 700,\r\n    color: '#000000',\r\n    fontSize: 15\r\n  },\r\n  price: {\r\n    fontWeight: 700,\r\n    color: '#F2994A',\r\n    fontSize: 15\r\n  },\r\n  tableDetail: {\r\n    marginTop: 15\r\n  }\r\n});\r\n\r\nconst TableCell = withStyles({\r\n  root: {\r\n    borderBottom: 'none'\r\n  }\r\n})(MuiTableCell);\r\n\r\nconst ProductDetail: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { product, isLoading } = props;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Table size='small'>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell size='small' className={classes.cell}>\r\n              <Typography component='p' className={classes.label}>\r\n                Nama Produk\r\n              </Typography>\r\n              <Typography component='p' className={classes.text}>\r\n                {isLoading ? <Skeleton variant='text' width='100%' /> : product.productName}\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell size='small'>\r\n              <Typography component='p' className={classes.label}>\r\n                Satuan\r\n              </Typography>\r\n              <Typography component='p' className={classes.text}>\r\n                {isLoading ? <Skeleton variant='text' width='100%' /> : product.typeUnit}\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n\r\n          <TableRow>\r\n            <TableCell size='small' className={classes.cell}>\r\n              <Typography component='p' className={classes.label}>\r\n                Kode Produk\r\n              </Typography>\r\n              <Typography component='p' className={classes.text}>\r\n                {isLoading ? <Skeleton variant='text' width='100%' /> : product.productCode}\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell size='small'>\r\n              <Typography component='p' className={classes.label}>\r\n                Harga Beli\r\n              </Typography>\r\n              <Typography component='p' className={classes.price}>\r\n                {isLoading ? (\r\n                  <Skeleton variant='text' width='100%' />\r\n                ) : (\r\n                  <NumberFormat value={product.purchasePrice} prefix={'Rp'} thousandSeparator={true} displayType='text' />\r\n                )}\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n\r\n          <TableRow>\r\n            <TableCell size='small' className={classes.cell}>\r\n              <Typography component='p' className={classes.label}>\r\n                Kategori Produk\r\n              </Typography>\r\n              <Typography component='p' className={classes.text}>\r\n                {product.Category ? product.Category.name : '-'}\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell size='small'>\r\n              <Typography component='p' className={classes.label}>\r\n                Harga Jual\r\n              </Typography>\r\n              <Typography component='p' className={classes.price}>\r\n                {isLoading ? (\r\n                  <Skeleton variant='text' width='100%' />\r\n                ) : (\r\n                  <NumberFormat value={product.sellingPrice} prefix={'Rp'} thousandSeparator={true} displayType='text' />\r\n                )}\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n\r\n          <TableRow>\r\n            <TableCell size='small' className={classes.cell}>\r\n              <Typography component='p' className={classes.label}>\r\n                Rute\r\n              </Typography>\r\n              <Typography component='p' className={classes.text}>\r\n                -\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell size='small'>\r\n              <Typography component='p' className={classes.label}>\r\n                Deskripsi\r\n              </Typography>\r\n              <Typography component='p' className={classes.text}>\r\n                {isLoading ? <Skeleton variant='text' width='100%' /> : product.description}\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n      <Divider />\r\n      <Table size='small' className={classes.tableDetail}>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell size='small' colSpan={2}>\r\n              <Typography component='p' variant='h4'>\r\n                Details Lokasi Stok\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductDetail;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport {\r\n  makeStyles,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Tabs,\r\n  Tab,\r\n  Button,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Typography,\r\n  Grid,\r\n  FormHelperText,\r\n  LinearProgress\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { PRODUCT_BASE_URL, CATEGORY_BASE_URL } from 'constants/url';\r\nimport { IOSSwitch } from 'components';\r\nimport { useDropzone, FileWithPath } from 'react-dropzone';\r\n\r\ninterface Props {\r\n  product: ProductModel;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setProduct: React.Dispatch<React.SetStateAction<ProductModel>>;\r\n  handleSnackBar: (open: boolean, variant: 'success' | 'error', message: string) => void;\r\n}\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  dir?: string;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  dropZone: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: '#eeeeee',\r\n    borderStyle: 'dashed',\r\n    backgroundColor: '#fafafa',\r\n    color: '#bdbdbd',\r\n    outline: 'none',\r\n    transition: 'border .24s ease-in-out',\r\n    width: '100%'\r\n  },\r\n  thumbsContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    marginTop: 16\r\n  },\r\n  thumb: {\r\n    display: 'inline-flex',\r\n    borderRadius: 2,\r\n    border: '1px solid #eaeaea',\r\n    marginBottom: 8,\r\n    marginRight: 8,\r\n    width: 100,\r\n    height: 100,\r\n    padding: 4,\r\n    boxSizing: 'border-box'\r\n  },\r\n  thumbInner: {\r\n    display: 'flex',\r\n    minWidth: 0,\r\n    overflow: 'hidden'\r\n  },\r\n  img: {\r\n    display: 'block',\r\n    width: 'auto',\r\n    height: '100%'\r\n  },\r\n  inputFile: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div role='tabpanel' hidden={value !== index} id={`full-width-tabpanel-${index}`} aria-labelledby={`full-width-tab-${index}`} {...other}>\r\n      {value === index && <div>{children}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst a11yProps = (index: any) => {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`\r\n  };\r\n};\r\n\r\nconst dummyCategory: CategoryModel = {\r\n  id: 0,\r\n  name: ''\r\n};\r\n\r\nconst ProductWizard: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { product, setProduct, setOpen, handleSnackBar } = props;\r\n  const [productName, setProductName] = useState<string>('');\r\n  const [productCode, setProductCode] = useState<string>('');\r\n  const [sellingPrice, setSellingPrice] = useState<number>();\r\n  const [purchasePrice, setPurchasePrice] = useState<number>();\r\n  const [typeUnit, setTypeUnit] = useState<string>('');\r\n  const [description, setDescription] = useState<string>('');\r\n  const [isReminder, setReminder] = useState<boolean>(false);\r\n  const [minimumStock, setMinimumStock] = useState<number>();\r\n  const [category, setCategory] = useState<CategoryModel>(dummyCategory);\r\n  const [categories, setCategories] = useState<CategoryModel[]>([dummyCategory]);\r\n  const [value, setValue] = useState(0);\r\n  const [isSubmit, setSubmit] = useState<boolean>(false);\r\n  const [productNameMessage, setProductNameMessage] = useState<string>('');\r\n  const [productCodeMessage, setProductCodeMessage] = useState<string>('');\r\n  const [typeUnitMessage, setTypeUnitMessage] = useState<string>('');\r\n  const [minimumStockMessage, setMinimumStockMessage] = useState<string>('');\r\n  const [sellingPriceMessage, setSellingPriceMessage] = useState<string>('');\r\n  const [purchasePriceMessage, setPurchasePriceMessage] = useState<string>('');\r\n  const [categoryMessage, setCategoryMessage] = useState<string>('');\r\n  const [files, setFiles] = useState<FileWithPath[]>([]);\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [image, setImage] = useState<[{ path: string; url: string }] | null>(null);\r\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\r\n    accept: ['image/jpeg', 'image/png'],\r\n    maxFiles: 5,\r\n    onDrop: acceptedFiles => {\r\n      setImage(null);\r\n      uploadImage(acceptedFiles);\r\n    }\r\n  });\r\n\r\n  const uploadImage = async (files: FileWithPath[]) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const formData = new FormData();\r\n    files.map((file: any) => formData.append(`image[]`, file));\r\n\r\n    setFiles(\r\n      files.map(file =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file)\r\n        })\r\n      )\r\n    );\r\n\r\n    try {\r\n      const { data } = await axios.post(`${PRODUCT_BASE_URL}/upload`, formData, {\r\n        cancelToken: cancelTokenSource.token,\r\n        onUploadProgress: (progressEvent: any) => {\r\n          const totalLength = progressEvent.lengthComputable\r\n            ? progressEvent.total\r\n            : progressEvent.target.getResponseHeader('content-length') || progressEvent.target.getResponseHeader('x-decompressed-content-length');\r\n          console.log('onUploadProgress', totalLength);\r\n          if (totalLength !== null) {\r\n            setProgress(Math.round((progressEvent.loaded * 100) / totalLength));\r\n          }\r\n        }\r\n      });\r\n      setImage(data.data);\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n    }\r\n    setProgress(0);\r\n  };\r\n\r\n  const thumbs = files.map((file: any) => (\r\n    <div className={classes.thumb} key={file.name}>\r\n      <div className={classes.thumbInner}>\r\n        <img src={file.preview} className={classes.img} />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  useEffect(\r\n    () => () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setProductName(product.productName);\r\n    setProductCode(product.productCode);\r\n    setSellingPrice(product.sellingPrice);\r\n    setPurchasePrice(product.purchasePrice);\r\n    setTypeUnit(product.typeUnit);\r\n    setDescription(product.description);\r\n    setMinimumStock(product.minimumStock);\r\n    setCategory(product.Category ? product.Category : dummyCategory);\r\n    setReminder(product.isReminder);\r\n  }, [product, product.Category]);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleSearchCategory = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${CATEGORY_BASE_URL}?${params.toString()}`, { cancelToken: cancelTokenSource.token });\r\n      setCategories(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n  const handleOnSubmit = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    resetValidation();\r\n\r\n    if (!validation()) {\r\n      setValue(0);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSubmit(true);\r\n      const { data } = await axios.post(\r\n        `${PRODUCT_BASE_URL}`,\r\n        {\r\n          id: product.id,\r\n          productName,\r\n          productCode,\r\n          sellingPrice,\r\n          purchasePrice,\r\n          minimumStock,\r\n          isReminder,\r\n          description,\r\n          typeUnit,\r\n          CategoryId: category!.id,\r\n          image: image || []\r\n        },\r\n        {\r\n          cancelToken: cancelTokenSource.token\r\n        }\r\n      );\r\n\r\n      setProduct(data.data);\r\n      setOpen(false);\r\n      handleSnackBar(true, 'success', 'Product berhasil diperbaharui');\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n      handleSnackBar(true, 'error', 'Product gagal diperbaharui');\r\n    }\r\n    setSubmit(false);\r\n  };\r\n\r\n  const validation = (): boolean => {\r\n    let valid = true;\r\n\r\n    if (productName === '' || !productName) {\r\n      setProductNameMessage('Nama Produk tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (productCode === '' || !productCode) {\r\n      setProductCodeMessage('Kode Produk tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (typeUnit === '' && !typeUnit) {\r\n      setTypeUnitMessage('Satuan Produk tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (isReminder) {\r\n      if (minimumStock === 0 || !minimumStock) {\r\n        setMinimumStockMessage('Minimum Stock tidak boleh kosong,');\r\n        valid = false;\r\n      }\r\n    }\r\n\r\n    if (sellingPrice === 0 || !sellingPrice) {\r\n      setSellingPriceMessage('Harga jual tidak boleh kosong,');\r\n      valid = false;\r\n    }\r\n\r\n    if (purchasePrice === 0 || !purchasePrice) {\r\n      setPurchasePriceMessage('Harga beli tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    if (!category) {\r\n      setCategoryMessage('Kategori tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  const resetValidation = () => {\r\n    setProductNameMessage('');\r\n    setProductCodeMessage('');\r\n    setTypeUnitMessage('');\r\n    setMinimumStockMessage('');\r\n    setSellingPriceMessage('');\r\n    setPurchasePriceMessage('');\r\n    setCategoryMessage('');\r\n  };\r\n\r\n  return (\r\n    <Grid container direction='row' spacing={1}>\r\n      <Grid container direction='row' justify='center'>\r\n        <Tabs value={value} indicatorColor='primary' onChange={handleChange}>\r\n          <Tab label='Informasi' {...a11yProps(0)} />\r\n          <Tab label='Upload Gambar' {...a11yProps(1)} />\r\n        </Tabs>\r\n      </Grid>\r\n\r\n      <Grid container direction='row' justify='space-between'>\r\n        <TabPanel value={value} index={0}>\r\n          <Grid container direction='row' spacing={2}>\r\n            <Grid container item lg={6} sm={6} md={6} xs={6} spacing={2}>\r\n              <Grid item lg={12} sm={12} md={12} xs={12}>\r\n                <Autocomplete\r\n                  id='category'\r\n                  fullWidth\r\n                  value={category}\r\n                  options={categories}\r\n                  getOptionLabel={option => option.name}\r\n                  onChange={(event: any, value: any) => setCategory(value)}\r\n                  renderInput={params => (\r\n                    <TextField\r\n                      {...params}\r\n                      placeholder='Pilih Kategori Produk *'\r\n                      size='small'\r\n                      onChange={handleSearchCategory}\r\n                      variant='outlined'\r\n                      error={categoryMessage !== ''}\r\n                      helperText={categoryMessage}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={12} sm={12} md={12} xs={12}>\r\n                <TextField\r\n                  id='productName'\r\n                  required\r\n                  fullWidth\r\n                  size='small'\r\n                  variant='outlined'\r\n                  placeholder='Nama Product *'\r\n                  value={productName}\r\n                  onChange={event => setProductName(event.target.value)}\r\n                  error={productNameMessage !== ''}\r\n                  helperText={productNameMessage}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={12} sm={12} md={12} xs={12}>\r\n                <TextField\r\n                  id='productCode'\r\n                  required\r\n                  fullWidth\r\n                  size='small'\r\n                  variant='outlined'\r\n                  placeholder='Kode Produk *'\r\n                  value={productCode}\r\n                  onChange={event => setProductCode(event.target.value)}\r\n                  error={productCodeMessage !== ''}\r\n                  helperText={productCodeMessage}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={12} sm={12} md={12} xs={12}>\r\n                <FormControl fullWidth variant='outlined' size='small'>\r\n                  <Select\r\n                    id='type'\r\n                    value={typeUnit as string}\r\n                    placeholder='Pilih Satuan Barang *'\r\n                    onChange={event => setTypeUnit(event.target.value as string)}\r\n                    error={typeUnitMessage !== ''}\r\n                  >\r\n                    <MenuItem key={1} value='PCS'>\r\n                      Pcs\r\n                    </MenuItem>\r\n                  </Select>\r\n                  <FormHelperText error={typeUnitMessage !== ''}>{typeUnitMessage}</FormHelperText>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container item lg={6} sm={6} md={6} xs={6} spacing={2} justify='flex-end'>\r\n              <Grid item lg={6} sm={6} md={6} xs={6}>\r\n                <TextField\r\n                  id='purchasePrice'\r\n                  type='number'\r\n                  required\r\n                  fullWidth\r\n                  size='small'\r\n                  variant='outlined'\r\n                  placeholder='Masukkan Harga Beli '\r\n                  value={purchasePrice}\r\n                  onChange={event => setPurchasePrice(+event.target.value)}\r\n                  error={purchasePriceMessage !== ''}\r\n                  helperText={purchasePriceMessage}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={6} sm={6} md={6} xs={6}>\r\n                <TextField\r\n                  id='sellingPrice'\r\n                  required\r\n                  fullWidth\r\n                  size='small'\r\n                  variant='outlined'\r\n                  placeholder='Masukkan Harga Jual '\r\n                  value={sellingPrice}\r\n                  onChange={event => setSellingPrice(+event.target.value)}\r\n                  error={sellingPriceMessage !== ''}\r\n                  helperText={sellingPriceMessage}\r\n                  type='number'\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={6} sm={6} md={6} xs={6}>\r\n                <TextField\r\n                  id='minimumStock'\r\n                  required\r\n                  fullWidth\r\n                  size='small'\r\n                  variant='outlined'\r\n                  placeholder='Minimum Stock'\r\n                  value={minimumStock}\r\n                  onChange={event => setMinimumStock(+event.target.value)}\r\n                  error={minimumStockMessage !== ''}\r\n                  helperText={minimumStockMessage}\r\n                  disabled={!isReminder}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={6} sm={6} md={6} xs={6}>\r\n                <FormControlLabel\r\n                  control={<IOSSwitch color='secondary' value={isReminder} checked={isReminder} onChange={() => setReminder(!isReminder)} />}\r\n                  label='Pengingat Stock'\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='description'\r\n                rows={4}\r\n                multiline\r\n                required\r\n                fullWidth\r\n                size='small'\r\n                variant='outlined'\r\n                placeholder='Deskripsi Produck '\r\n                value={description}\r\n                onChange={event => setDescription(event.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={1}>\r\n          <div {...getRootProps()} className={classes.dropZone}>\r\n            <input {...getInputProps()} className={classes.inputFile} />\r\n            <p>Drag 'n' drop some files here, or click to select files</p>\r\n          </div>\r\n          <aside className={classes.thumbsContainer}>{thumbs}</aside>\r\n          {progress > 0 && <LinearProgress color='secondary' variant='determinate' value={progress} />}\r\n        </TabPanel>\r\n      </Grid>\r\n\r\n      <Grid container item lg={12} md={12} sm={12} xs={12} justify='flex-end' spacing={2}>\r\n        <Grid item>\r\n          <Button color='secondary' disabled={isSubmit} onClick={() => setOpen(false)}>\r\n            Batal\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button disabled={isSubmit || value === 0} onClick={handleOnSubmit}>\r\n            Simpan\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductWizard;\r\n","import React, { FC, Fragment } from 'react';\r\nimport { createStyles, makeStyles, Theme, Typography, IconButton, Paper, WithStyles, withStyles } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ProductWizard from './ProductWizard';\r\n\r\ninterface Props {\r\n  product: ProductModel;\r\n  open: boolean;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setProduct: React.Dispatch<React.SetStateAction<ProductModel>>;\r\n  handleSnackBar: (open: boolean, variant: 'success' | 'error', message: string) => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2)\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1)\r\n    }\r\n  });\r\n\r\ninterface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose?: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant='h6'>{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label='close' className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}))(MuiDialogContent);\r\n\r\nconst ProductModal: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { product, open, setOpen, setProduct, handleSnackBar } = props;\r\n\r\n  const handleClose = (event: {}, reason: 'backdropClick' | 'escapeKeyDown') => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog\r\n        maxWidth={'md'}\r\n        fullWidth={true}\r\n        disableBackdropClick={true}\r\n        onClose={handleClose}\r\n        aria-labelledby='customized-dialog-title'\r\n        open={open}\r\n      >\r\n        <DialogTitle id='customized-dialog-title'>\r\n          <Typography id='modal-title' variant='h1' component='h1'>\r\n            Edit Produk\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <ProductWizard product={product} setProduct={setProduct} setOpen={setOpen} handleSnackBar={handleSnackBar} />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductModal;\r\n","import React, { FC, useEffect, useState, Fragment } from 'react';\r\nimport { Grid, Container, Typography, makeStyles, Button, Paper } from '@material-ui/core';\r\nimport { DeleteRounded, EditRounded } from '@material-ui/icons';\r\nimport { Page, StandardConfirmationDialog, Breadcrumb } from 'components';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { PRODUCT_BASE_URL } from 'constants/url';\r\nimport ImageSlider from './components/ImageSlider';\r\nimport ProductDetail from './components/ProductDetail';\r\nimport ProductModal from './components/ProductModal';\r\nimport useRouter from 'hooks/useRouter';\r\n\r\nconst useStyles = makeStyles({\r\n  secondGrid: {},\r\n  paper: {\r\n    padding: 15,\r\n    marginTop: 15,\r\n    marginBottom: 20\r\n  },\r\n  upload: {\r\n    borderStyle: 'dashed',\r\n    border: '2px solid #028bc1',\r\n    backgroundColor: 'transparent',\r\n    '&:hover': {\r\n      background: 'none'\r\n    }\r\n  }\r\n});\r\n\r\nconst dummyProduct: ProductModel = {\r\n  id: 0,\r\n  productName: '',\r\n  productCode: '',\r\n  sellingPrice: 0,\r\n  purchasePrice: 0,\r\n  typeUnit: '',\r\n  totalStock: 0,\r\n  description: '',\r\n  isReminder: false,\r\n  minimumStock: 0\r\n};\r\n\r\nconst dummyProductImage: ProductImageModel = {\r\n  id: 0,\r\n  path: '',\r\n  url: ''\r\n};\r\nconst ProductDetailPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { location } = useRouter();\r\n  // eslint-disable-next-line\r\n  const params: any = location.state;\r\n\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [isLoadingData, setIsLoadingData] = useState<boolean>(true);\r\n  const [id, setId] = useState<number>();\r\n  const [product, setProduct] = useState<ProductModel>(dummyProduct);\r\n  const [productImages, setProductImages] = useState<ProductImageModel[]>([dummyProductImage]);\r\n  const [confirmationDelete, setConfirmationDelete] = useState<boolean>(false);\r\n  const [snackbarVariant, setSnackbarVariant] = useState<'success' | 'error'>('success');\r\n  const [message, setMessage] = useState<string>('');\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n \r\n\r\n    const fetchData = async () => {\r\n      const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n      setIsLoadingData(true);\r\n      try {\r\n        const { data } = await axios.get(`${PRODUCT_BASE_URL}/${params.id}`, { cancelToken: cancelTokenSource.token });\r\n        setProduct(data.data);\r\n        setProductImages(data.data.ProductImages);\r\n        setId(data.data.id);\r\n      } catch (error) {\r\n        console.log('error', error);\r\n      }\r\n      setIsLoadingData(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleConfirmationDelete = (): void => {\r\n    setConfirmationDelete(true);\r\n  };\r\n\r\n  const handleCloseConfirmationDelete = (): void => {\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const deleteProduct = async () => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    try {\r\n      await axios.delete(`${PRODUCT_BASE_URL}/${id}`, { cancelToken: cancelTokenSource.token });\r\n      handleSnackBar(true, 'success', 'Produk berhasil dihapus.');\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleSnackBar(true, 'error', 'Produk gagal dihapus.');\r\n    }\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const handleSnackBar = (open: boolean, variant: 'success' | 'error', message: string): void => {\r\n    setSnackbarVariant(variant);\r\n    setOpenSnackbar(open);\r\n    setMessage(message);\r\n  };\r\n\r\n  const handleCloseSnackbar = (): void => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  const handleOpenForm = (): void => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Page title='Produk'>\r\n      <Container>\r\n        <Grid container direction='row'>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Typography variant='h1' component='h1'> Semua Produk </Typography>\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Breadcrumb/>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container direction='row' justify='space-between' spacing={3}>\r\n          <Grid container item lg={8} sm={8} md={8} justify='flex-start'></Grid>\r\n\r\n          <Grid container item lg={4} sm={4} md={4} spacing={2} justify='flex-end'>\r\n            <Grid item>\r\n              <Button disabled={isLoadingData} color='secondary' onClick={handleConfirmationDelete}>\r\n                <DeleteRounded fontSize='small' /> &nbsp; Hapus\r\n              </Button>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Button disabled={isLoadingData} onClick={handleOpenForm}>\r\n                <EditRounded fontSize='small' /> &nbsp; Edit Produk\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Paper elevation={2} className={classes.paper}>\r\n          <Grid container direction='row' spacing={2} justify='space-between' className={classes.secondGrid}>\r\n            <Grid container justify='center' item xl={6} lg={6} md={6} sm={12} xs={12}>\r\n              {isLoadingData ? (\r\n                <Typography>Menunggu data...</Typography>\r\n              ) : product.ProductImages && product.ProductImages.length > 0 ? (\r\n                <ImageSlider productImages={productImages} />\r\n              ) : (\r\n                <Button\r\n                  fullWidth\r\n                  disableFocusRipple\r\n                  disableTouchRipple\r\n                  size='small'\r\n                  variant='text'\r\n                  onClick={handleOpenForm}\r\n                  color='secondary'\r\n                  className={classes.upload}\r\n                >\r\n                  Upload Gambar\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n            <Grid item xl={6} lg={6} md={6} sm={12} xs={12}>\r\n              <ProductDetail product={product} isLoading={isLoadingData} />\r\n            </Grid>\r\n\r\n            <ProductModal open={open} setOpen={setOpen} product={product} setProduct={setProduct} handleSnackBar={handleSnackBar} />\r\n\r\n            <StandardConfirmationDialog\r\n              variant={snackbarVariant}\r\n              titleMessage={snackbarVariant === 'success' ? 'Success!' : 'Error!'}\r\n              message={message}\r\n              open={openSnackbar}\r\n              handleClose={handleCloseSnackbar}\r\n              onConfirm={handleCloseSnackbar}\r\n              noCancelButton={true}\r\n            />\r\n\r\n            <StandardConfirmationDialog\r\n              variant={'danger'}\r\n              titleMessage={'Delete'}\r\n              message={'Are you sure want to delete this data?'}\r\n              open={confirmationDelete}\r\n              handleClose={handleCloseConfirmationDelete}\r\n              onConfirm={deleteProduct}\r\n            />\r\n          </Grid>\r\n        </Paper>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ProductDetailPage;\r\n","import React, { FC } from 'react';\r\nimport { makeStyles, Typography, Grid, Table, TableRow, TableCell, TableBody } from '@material-ui/core';\r\nimport { PaperCustom } from 'components';\r\n\r\ninterface Props {\r\n  partner: PartnerModel;\r\n}\r\n\r\nconst useStyles = makeStyles({});\r\nconst PartnerDetail: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { partner } = props;\r\n\r\n  return (\r\n    <Grid container direction='row' justify='space-between'>\r\n      <Grid item container direction='row' justify='space-between' spacing={2}>\r\n        <Grid item lg={6} sm={6} md={6} xs={6}>\r\n          <PaperCustom>\r\n            <Typography variant='h5'>Informasi</Typography>\r\n\r\n            <Table>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell>Nama</TableCell>\r\n                  <TableCell align='right'>{partner.name}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>ID Mitra</TableCell>\r\n                  <TableCell align='right'>{partner.partnerId}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Email</TableCell>\r\n                  <TableCell align='right'>{partner.email}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>No. Telepon</TableCell>\r\n                  <TableCell align='right'>{partner.phoneNumber}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>No. Handphone</TableCell>\r\n                  <TableCell align='right'>{partner.cellPhoneNumber}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Laman Website</TableCell>\r\n                  <TableCell align='right'>{partner.website}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>No. Akun Virtual</TableCell>\r\n                  <TableCell align='right'>{partner.virtualAccount}</TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </PaperCustom>\r\n        </Grid>\r\n\r\n        <Grid item lg={6} sm={6} md={6} xs={6}>\r\n          <PaperCustom>\r\n            <Typography variant='h5'>Detail Alamat</Typography>\r\n\r\n            <Table>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell>Alamat</TableCell>\r\n                  <TableCell align='right'>{partner.address}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Provinsi</TableCell>\r\n                  <TableCell align='right'>{partner.Provinsi ? partner.Provinsi.name : ''}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Kabupaten</TableCell>\r\n                  <TableCell align='right'>{partner.Kabupaten ? partner.Kabupaten.name : ''}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Kecamatan</TableCell>\r\n                  <TableCell align='right'>{partner.Kecamatan ? partner.Kecamatan.name : ''}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Route</TableCell>\r\n                  <TableCell align='right'>{partner.Zone ? partner.Zone.name : ''}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Kode Pos</TableCell>\r\n                  <TableCell align='right'>{partner.postalCode}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Catatan</TableCell>\r\n                  <TableCell align='right'>{partner.notes}</TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </PaperCustom>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PartnerDetail;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport { makeStyles, TextField, Typography, Grid } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { PARTNER_BASE_URL, WILAYAH_PROVINSI_BASE_URL, WILAYAH_KABUPATEN_BASE_URL, WILAYAH_KECAMATAN_BASE_URL, ZONE_BASE_URL } from 'constants/url';\r\nimport { isValidEmail } from 'utils';\r\nimport { PaperCustom } from 'components';\r\n\r\ninterface Props {\r\n  partner: PartnerModel;\r\n  setPartner: React.Dispatch<React.SetStateAction<PartnerModel>>;\r\n  isSubmit: boolean;\r\n  setSubmit: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setUpdate: React.Dispatch<React.SetStateAction<boolean>>;\r\n  handleSnackBar: (open: boolean, variant: 'success' | 'error', message: string) => void;\r\n}\r\n\r\nconst useStyles = makeStyles({});\r\n\r\nconst dummyRegion: RegionModel = {\r\n  code: '',\r\n  name: ''\r\n};\r\n\r\nconst dummyZone: ZoneModel = {\r\n  id: 0,\r\n  name: ''\r\n};\r\n\r\nconst PartnerWizard: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { partner, setPartner, isSubmit, setSubmit, setUpdate, handleSnackBar } = props;\r\n  const [partnerId, setPartnerId] = useState<string>('');\r\n  const [name, setName] = useState<string>('');\r\n  const [address, setAddress] = useState<string>('');\r\n  const [email, setEmail] = useState<string>('');\r\n  const [cellPhoneNumber, setCellPhoneNumber] = useState<string>('');\r\n  const [phoneNumber, setPhoneNumber] = useState<string>('');\r\n  const [website, setWebsite] = useState<string>('');\r\n  const [virtualAccount, setVirtualAccount] = useState<string>('');\r\n  const [notes, setNotes] = useState<string>('');\r\n  const [postalCode, setPostalCode] = useState<number>();\r\n  const [partnerType, setPartnerType] = useState<'SUPPLIER' | 'CUSTOMER'>('SUPPLIER');\r\n  const [businessEntity, setBusinessEntity] = useState<string>('');\r\n  const [provinsi, setProvinsi] = useState<RegionModel>(dummyRegion);\r\n  const [kabupaten, setKabupaten] = useState<RegionModel>(dummyRegion);\r\n  const [kecamatan, setKecamatan] = useState<RegionModel>(dummyRegion);\r\n  const [zone, setZone] = useState<ZoneModel>(dummyZone);\r\n  const [route, setRoute] = useState<ZoneModel[]>([dummyZone]);\r\n  const [region, setRegion] = useState<RegionModel[]>([dummyRegion]);\r\n  const [nameMessage, setNameMessage] = useState<string>('');\r\n  const [phoneNumberMessage, setPhoneNumberMessage] = useState<string>('');\r\n  const [emailMessage, setEmailMessage] = useState<string>('');\r\n  const [addressMessage, setAddressMessage] = useState<string>('');\r\n  const [provinsiMessage, setProvinsiMessage] = useState<string>('');\r\n  const [kabupatenMessage, setKabupatenMessage] = useState<string>('');\r\n  const [kecamatanMessage, setKecamatanMessage] = useState<string>('');\r\n  const [postalCodeMessage, setPostalCodeMessage] = useState<string>('');\r\n  const [zoneMessage, setZoneMessage] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    if (!partner) {\r\n      return;\r\n    }\r\n\r\n    setName(partner.name);\r\n    setPartnerId(partner.partnerId);\r\n    setPhoneNumber(partner.phoneNumber);\r\n    setCellPhoneNumber(partner.cellPhoneNumber);\r\n    setPartnerType(partner.partnerType);\r\n    setZone(partner.Zone!);\r\n    setAddress(partner.address);\r\n    setEmail(partner.email);\r\n    setWebsite(partner.website);\r\n    setBusinessEntity(partner.businessEntity);\r\n    setVirtualAccount(partner.virtualAccount);\r\n    setNotes(partner.notes);\r\n    setPostalCode(partner.postalCode);\r\n    setProvinsi(partner.Provinsi!);\r\n    setKabupaten(partner.Kabupaten!);\r\n    setKecamatan(partner.Kecamatan!);\r\n  }, [partner]);\r\n\r\n  useEffect(() => {\r\n    if (isSubmit) {\r\n      resetValidation();\r\n      if (!validation()) {\r\n        setSubmit(false);\r\n        return;\r\n      }\r\n      onSubmit();\r\n    }\r\n  }, [isSubmit, setSubmit]);\r\n\r\n  const handleSearchProvinsi = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${WILAYAH_PROVINSI_BASE_URL}?${params.toString()}`, { cancelToken: cancelTokenSource.token });\r\n      setRegion(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n\r\n  const handleSearchKabupaten = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${WILAYAH_KABUPATEN_BASE_URL(provinsi.code)}?${params.toString()}`, { cancelToken: cancelTokenSource.token });\r\n      setRegion(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n\r\n  const handleSearchZone = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${ZONE_BASE_URL}?${params.toString()}`, { cancelToken: cancelTokenSource.token });\r\n      setRoute(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n\r\n  const handleSearchKecamatan = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${WILAYAH_KECAMATAN_BASE_URL(kabupaten.code)}?${params.toString()}`, {\r\n        cancelToken: cancelTokenSource.token\r\n      });\r\n      setRegion(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n\r\n    try {\r\n      setSubmit(true);\r\n      const region = provinsi.name + ', ' + kabupaten.name + ', ' + kecamatan.name;\r\n      const { data } = await axios.post(\r\n        `${PARTNER_BASE_URL}`,\r\n        {\r\n          id: partner.id,\r\n          partnerId,\r\n          name,\r\n          partnerType,\r\n          phoneNumber,\r\n          cellPhoneNumber,\r\n          email,\r\n          address,\r\n          notes,\r\n          website,\r\n          postalCode,\r\n          areaCode: kecamatan.code,\r\n          regionName: region,\r\n          ZoneId: zone.id,\r\n          businessEntity,\r\n          virtualAccount\r\n        },\r\n        {\r\n          cancelToken: cancelTokenSource.token\r\n        }\r\n      );\r\n      setPartner(data.data);\r\n      setUpdate(false);\r\n      handleSnackBar(true, 'success', 'Partner berhasil ditambahkan');\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n      handleSnackBar(true, 'error', 'Partner gagal ditambahkan');\r\n    }\r\n    setSubmit(false);\r\n  };\r\n\r\n  const validation = (): boolean => {\r\n    let valid = true;\r\n\r\n    if (name === '' || !name) {\r\n      setNameMessage('Nama tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (!isValidEmail(email)) {\r\n      setEmailMessage('Email tidak valid.');\r\n      valid = false;\r\n    } else if (email === '' || !email) {\r\n      setEmailMessage('Email tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (phoneNumber === '' && !phoneNumber) {\r\n      setPhoneNumberMessage('No telepon tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (address === '' && !addressMessage) {\r\n      setAddressMessage('Alamat tidak boleh kosong,');\r\n      valid = false;\r\n    }\r\n\r\n    if (provinsi.name === '' || provinsi.code === '') {\r\n      setProvinsiMessage('Asal provinsi tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    if (kabupaten.name === '' || kabupaten.code === '') {\r\n      setKabupatenMessage('Asal provinsi tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    if (kecamatan.name === '' || kecamatan.code === '') {\r\n      setKecamatanMessage('Asal provinsi tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    if (!postalCode) {\r\n      setPostalCodeMessage('Kode Pos tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (zone.id === 0 || zone.name === '') {\r\n      setZoneMessage('Badan Usaha tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    return valid;\r\n  };\r\n\r\n  const resetValidation = () => {\r\n    setNameMessage('');\r\n    setEmailMessage('');\r\n    setPhoneNumberMessage('');\r\n    setAddressMessage('');\r\n    setProvinsiMessage('');\r\n    setKabupatenMessage('');\r\n    setKecamatanMessage('');\r\n    setPostalCodeMessage('');\r\n  };\r\n\r\n  return (\r\n    <Grid container direction='row' justify='space-between'>\r\n      <Grid container item lg={6} sm={6} md={6} xs={6} spacing={2}>\r\n        <PaperCustom>\r\n          <Typography variant='h5'>Informasi</Typography>\r\n\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='name'\r\n              name='name'\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='Nama *'\r\n              value={name}\r\n              onChange={event => setName(event.target.value)}\r\n              error={nameMessage !== ''}\r\n              helperText={nameMessage}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='partnerId'\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='ID Mitra'\r\n              value={partnerId}\r\n              onChange={event => setPartnerId(event.target.value)}\r\n              disabled\r\n            />\r\n          </Grid>\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='email'\r\n              name='email'\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='Email '\r\n              value={email}\r\n              onChange={event => setEmail(event.target.value)}\r\n              error={emailMessage !== ''}\r\n              helperText={emailMessage}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='phoneNumber'\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='No Telepon *'\r\n              value={phoneNumber}\r\n              onChange={event => setPhoneNumber(event.target.value)}\r\n              inputProps={{\r\n                maxLength: 13\r\n              }}\r\n              error={phoneNumberMessage !== ''}\r\n              helperText={phoneNumberMessage}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='cellPhoneNumber'\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='No Handphone '\r\n              value={cellPhoneNumber}\r\n              onChange={event => setCellPhoneNumber(event.target.value)}\r\n              inputProps={{\r\n                maxLength: 13\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='website'\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='Laman Website'\r\n              value={website}\r\n              onChange={event => setWebsite(event.target.value)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='virtualAccount'\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='No Virtual Account'\r\n              value={virtualAccount}\r\n              onChange={event => setVirtualAccount(event.target.value)}\r\n            />\r\n          </Grid>\r\n        </PaperCustom>\r\n      </Grid>\r\n\r\n      <Grid container item lg={6} sm={6} md={6} xs={6} spacing={2}>\r\n        <PaperCustom>\r\n          <Typography variant='h5'>Detail Alamat</Typography>\r\n\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='address'\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='Alamat'\r\n              value={address}\r\n              onChange={event => setAddress(event.target.value)}\r\n              error={addressMessage !== ''}\r\n              helperText={addressMessage}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <Autocomplete\r\n              id='provinsi'\r\n              fullWidth\r\n              value={provinsi}\r\n              options={region}\r\n              getOptionLabel={option => option.name}\r\n              onChange={(event: any, value: any) => {\r\n                setProvinsi(value);\r\n                setRegion([dummyRegion]);\r\n              }}\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  placeholder='Provinsi *'\r\n                  size='small'\r\n                  onChange={handleSearchProvinsi}\r\n                  variant='outlined'\r\n                  error={provinsiMessage !== ''}\r\n                  helperText={provinsiMessage}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <Autocomplete\r\n              id='kabupaten'\r\n              fullWidth\r\n              value={kabupaten}\r\n              options={region}\r\n              getOptionLabel={option => option.name}\r\n              onChange={(event: any, value: any) => {\r\n                setKabupaten(value);\r\n                setRegion([dummyRegion]);\r\n              }}\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  fullWidth\r\n                  placeholder='Kabupaten *'\r\n                  size='small'\r\n                  onChange={handleSearchKabupaten}\r\n                  variant='outlined'\r\n                  error={kabupatenMessage !== ''}\r\n                  helperText={kabupatenMessage}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <Autocomplete\r\n              id='kecamatan'\r\n              fullWidth\r\n              value={kecamatan}\r\n              options={region}\r\n              getOptionLabel={option => option.name}\r\n              onChange={(event: any, value: any) => {\r\n                setKecamatan(value);\r\n                setRegion([dummyRegion]);\r\n              }}\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  placeholder='Kecamatan *'\r\n                  size='small'\r\n                  onChange={handleSearchKecamatan}\r\n                  variant='outlined'\r\n                  error={kecamatanMessage !== ''}\r\n                  helperText={kecamatanMessage}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <Autocomplete\r\n              id='zone'\r\n              fullWidth\r\n              value={zone}\r\n              options={route}\r\n              getOptionLabel={option => option.name}\r\n              onChange={(event: any, value: any) => setZone(value)}\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  placeholder='Route *'\r\n                  size='small'\r\n                  onChange={handleSearchZone}\r\n                  variant='outlined'\r\n                  error={zoneMessage !== ''}\r\n                  helperText={zoneMessage}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='postalCode'\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='Kode Pos '\r\n              type='number'\r\n              value={postalCode}\r\n              onChange={event => setPostalCode(+event.target.value)}\r\n              error={postalCodeMessage !== ''}\r\n              helperText={postalCodeMessage}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='notes'\r\n              rows={4}\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='Keterangan '\r\n              value={notes}\r\n              onChange={event => setNotes(event.target.value)}\r\n            />\r\n          </Grid>\r\n        </PaperCustom>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PartnerWizard;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { Container, makeStyles, Typography, Grid, Button } from '@material-ui/core';\r\nimport { Page, StandardConfirmationDialog, Breadcrumb } from 'components';\r\nimport { PARTNER_BASE_URL } from 'constants/url';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport useRouter from 'hooks/useRouter';\r\nimport PartnerDetail from './components/PartnerDetail';\r\nimport PartnerWizard from './components/PartnerWizard';\r\n\r\nconst useStyles = makeStyles({\r\n  secondGrid: {\r\n    marginTop: 10\r\n  }\r\n});\r\n\r\nconst dummyPartner: PartnerModel = {\r\n  id: 0,\r\n  partnerId: '',\r\n  name: '',\r\n  address: '',\r\n  areaCode: '',\r\n  businessEntity: '',\r\n  cellPhoneNumber: '',\r\n  email: '',\r\n  notes: '',\r\n  phoneNumber: '',\r\n  postalCode: 0,\r\n  regionName: '',\r\n  virtualAccount: '',\r\n  website: '',\r\n  partnerType: 'SUPPLIER'\r\n};\r\n\r\nconst PartnerDetailPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { location } = useRouter();\r\n  // eslint-disable-next-line\r\n  const params: any = location.state;\r\n\r\n  const [isLoadingData, setIsLoadingData] = useState<boolean>(false);\r\n  const [partner, setPartner] = useState<PartnerModel>(dummyPartner);\r\n  const [id, setId] = useState<number>();\r\n  const [confirmationDelete, setConfirmationDelete] = useState<boolean>(false);\r\n  const [snackbarVariant, setSnackbarVariant] = useState<'success' | 'error'>('success');\r\n  const [message, setMessage] = useState<string>('');\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n  const [isSubmit, setSubmit] = useState<boolean>(false);\r\n  const [isUpdate, setUpdate] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoadingData(true);\r\n\r\n    const fetchData = async () => {\r\n      const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n      try {\r\n        const { data } = await axios.get(`${PARTNER_BASE_URL}/${params.id}`, { cancelToken: cancelTokenSource.token });\r\n        setPartner(data.data);\r\n        setId(data.data.id);\r\n      } catch (error) {\r\n        console.log('error:', error);\r\n      }\r\n      setIsLoadingData(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleConfirmationDelete = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    setConfirmationDelete(true);\r\n  };\r\n\r\n  const handleCloseConfirmationDelete = () => {\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const deletePartner = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    try {\r\n      await axios.delete(`${PARTNER_BASE_URL}/${id}`, { cancelToken: cancelTokenSource.token });\r\n      handleSnackBar(true, 'success', 'Partner berhasil dihapus.');\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleSnackBar(true, 'error', 'Partner gagal dihapus.');\r\n    }\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const handleSnackBar = (open: boolean, variant: 'success' | 'error', message: string) => {\r\n    setSnackbarVariant(variant);\r\n    setOpenSnackbar(open);\r\n    setMessage(message);\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  const handleOnSubmit = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    setSubmit(true);\r\n  };\r\n\r\n  const handleSetUpdate = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    setUpdate(true);\r\n  };\r\n\r\n  const handleCancelUpdate = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    setUpdate(false);\r\n  };\r\n\r\n  return (\r\n    <Page title='Mitra'>\r\n      <Container>\r\n        <Grid container direction='row'>\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <Typography variant='h1'> Semua Mitra </Typography>\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Breadcrumb />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction='row' justify='space-between'>\r\n          <Grid item lg={6} sm={6} md={6} xs={6}></Grid>\r\n          <Grid container item lg={6} sm={6} md={6} xs={6} justify='flex-end' spacing={2}>\r\n            <Grid item>\r\n              <Button color='secondary' onClick={isUpdate ? handleCancelUpdate : handleConfirmationDelete}>\r\n                <Typography>{isUpdate ? 'Batal' : 'Hapus'}</Typography>\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button onClick={isUpdate ? handleOnSubmit : handleSetUpdate}>\r\n                <Typography>{isUpdate ? 'Simpan' : 'Edit Data'}</Typography>\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {isUpdate ? (\r\n          <PartnerWizard\r\n            partner={partner}\r\n            setPartner={setPartner}\r\n            isSubmit={isSubmit}\r\n            setUpdate={setUpdate}\r\n            setSubmit={setSubmit}\r\n            handleSnackBar={handleSnackBar}\r\n          />\r\n        ) : (\r\n          <PartnerDetail partner={partner} />\r\n        )}\r\n\r\n        <Grid item container direction='row' justify='center' spacing={2} className={classes.secondGrid}>\r\n          <Grid item lg={4} sm={4} md={4} xs={4}>\r\n            Rating\r\n          </Grid>\r\n          <Grid item lg={4} sm={4} md={4} xs={4}>\r\n            {partner.partnerType}\r\n          </Grid>\r\n          <Grid item lg={4} sm={4} md={4} xs={4}>\r\n            Terhutang\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <StandardConfirmationDialog\r\n          variant={snackbarVariant}\r\n          titleMessage={snackbarVariant === 'success' ? 'Success!' : 'Error!'}\r\n          message={message}\r\n          open={openSnackbar}\r\n          handleClose={handleCloseSnackbar}\r\n          onConfirm={handleCloseSnackbar}\r\n          noCancelButton={true}\r\n        />\r\n\r\n        <StandardConfirmationDialog\r\n          variant={'danger'}\r\n          titleMessage={'Delete'}\r\n          message={'Are you sure want to delete this data?'}\r\n          open={confirmationDelete}\r\n          handleClose={handleCloseConfirmationDelete}\r\n          onConfirm={deletePartner}\r\n        />\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default PartnerDetailPage;\r\n","import React, { FC } from 'react';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport useRouter from 'hooks/useRouter';\r\nimport { TableCellMiddle, TableCellEnd, TableCellStart, TableRowCustom } from 'components/Table';\r\n\r\ninterface Props {\r\n  salesCommission: SalesModel;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst BodyRow: FC<Props> = props => {\r\n  const { salesCommission, isLoading } = props;\r\n  const { history } = useRouter();\r\n\r\n  const handleLink = () => {\r\n    history.push('/komisi/detail', { id: salesCommission.id });\r\n  };\r\n\r\n  return (\r\n    <TableRowCustom onClick={handleLink}>\r\n      <TableCellStart>{isLoading ? <Skeleton variant='text' width={'100%'} height={25} /> : salesCommission.salesId}</TableCellStart>\r\n      <TableCellMiddle>{isLoading ? <Skeleton variant='text' width={'100%'} height={25} /> : salesCommission.name}</TableCellMiddle>\r\n      <TableCellMiddle>{isLoading ? <Skeleton variant='text' width={'100%'} height={25} /> : salesCommission.email}</TableCellMiddle>\r\n      <TableCellMiddle>{isLoading ? <Skeleton variant='text' width={'100%'} height={25} /> : salesCommission.phoneNumber}</TableCellMiddle>\r\n      <TableCellEnd>{isLoading ? <Skeleton variant='text' width={'100%'} height={25} /> : salesCommission.address}</TableCellEnd>\r\n    </TableRowCustom>\r\n  );\r\n};\r\n\r\nexport default BodyRow;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport { TableBody, TableHead, TableRow, TableCell, TextField, Select, MenuItem, FormControl, TableContainer } from '@material-ui/core';\r\nimport BodyRow from './components/BodyRow';\r\nimport { HeaderRow, TableCellHead, TableCustom } from 'components/Table';\r\n\r\ninterface Props {\r\n  isLoadingData: boolean;\r\n  salesCommissions?: SalesModel[];\r\n  queryString?: string;\r\n  order: 'asc' | 'desc';\r\n  orderBy: string;\r\n  name: string;\r\n  setName: React.Dispatch<React.SetStateAction<string>>;\r\n  address: string;\r\n  setAddress: React.Dispatch<React.SetStateAction<string>>;\r\n  email: string;\r\n  setEmail: React.Dispatch<React.SetStateAction<string>>;\r\n  salesId: string;\r\n  setSalesId: React.Dispatch<React.SetStateAction<string>>;\r\n  phoneNumber: string;\r\n  setPhoneNumber: React.Dispatch<React.SetStateAction<string>>;\r\n  setOrder: React.Dispatch<React.SetStateAction<'asc' | 'desc'>>;\r\n  setOrderBy: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst dummySales: SalesModel = {\r\n  id: 0,\r\n  salesId: '',\r\n  name: '',\r\n  address: '',\r\n  phoneNumber: '',\r\n  email: ''\r\n};\r\n\r\nconst CommissionPageTable: FC<Props> = props => {\r\n  const {\r\n    isLoadingData,\r\n    salesCommissions,\r\n    order,\r\n    orderBy,\r\n    name,\r\n    setName,\r\n    address,\r\n    setAddress,\r\n    email,\r\n    setEmail,\r\n    salesId,\r\n    setSalesId,\r\n    phoneNumber,\r\n    setPhoneNumber,\r\n    setOrder,\r\n    setOrderBy,\r\n    queryString\r\n  } = props;\r\n\r\n  const [showSkeleton, setShowSkeleton] = useState<boolean>(false);\r\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: string) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoadingData) {\r\n      setShowSkeleton(true);\r\n    }\r\n    return () => {\r\n      setShowSkeleton(false);\r\n    };\r\n  }, [isLoadingData]);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <TableCustom>\r\n        <TableHead>\r\n          <HeaderRow\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            headers={[\r\n              { id: 'salesId', label: 'ID', sort: true },\r\n              { id: 'name', label: 'NAMA SALSE', sort: true },\r\n              { id: 'email', label: 'EMAIL', sort: true },\r\n              { id: 'phoneNumber', label: 'NO.HANDPHONE', sort: true },\r\n              { id: 'address', label: 'ADDRESS', sort: true }\r\n            ]}\r\n          />\r\n          <TableRow>\r\n            <TableCellHead variant='head'>\r\n              <TextField id='salesId' variant='outlined' value={salesId} onChange={event => setSalesId(event.target.value)} size='small' />\r\n            </TableCellHead>\r\n            <TableCellHead variant='head'>\r\n              <TextField id='name' variant='outlined' value={name} onChange={event => setName(event.target.value)} size='small' />\r\n            </TableCellHead>\r\n            <TableCellHead variant='head'>\r\n              <TextField id='email' variant='outlined' value={email} onChange={event => setAddress(event.target.value)} size='small' />\r\n            </TableCellHead>\r\n\r\n            <TableCellHead variant='head'>\r\n              <TextField\r\n                id='cellPhoneNumber'\r\n                variant='outlined'\r\n                value={phoneNumber}\r\n                onChange={event => setPhoneNumber(event.target.value)}\r\n                size='small'\r\n              />\r\n            </TableCellHead>\r\n            <TableCellHead variant='head'>\r\n              <TextField id='address' variant='outlined' value={address} onChange={event => setAddress(event.target.value)} size='small' />\r\n            </TableCellHead>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {showSkeleton ? (\r\n            [0, 1, 2, 3].map(index => <BodyRow key={index + 1} isLoading={showSkeleton} salesCommission={dummySales} />)\r\n          ) : salesCommissions && salesCommissions.length > 0 ? (\r\n            salesCommissions.map((value, index) => <BodyRow key={index + 1} isLoading={showSkeleton} salesCommission={value} />)\r\n          ) : (\r\n            <TableRow>\r\n              <TableCell colSpan={5} align='center'>\r\n                {queryString ? 'No matching result' : 'Data Not Available'}\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </TableCustom>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default CommissionPageTable;\r\n","import React, { FC, useEffect, useCallback, useState } from 'react';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { Grid, Container, Typography } from '@material-ui/core';\r\nimport { Page, StandardConfirmationDialog, Breadcrumb, PaperCustom } from 'components';\r\nimport { SALES_BASE_URL } from 'constants/url';\r\nimport CommissionPageTable from './components/CommissionPageTable';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst dummySales: SalesModel = {\r\n  id: 0,\r\n  salesId: '',\r\n  name: '',\r\n  address: '',\r\n  phoneNumber: '',\r\n  email: ''\r\n};\r\n\r\nconst CommissionPage: FC = () => {\r\n\r\n  const [count, setCount] = useState<number>(0);\r\n  const [queryString, setQueryString] = useState<string>();\r\n  const [isLoadingData, setIsLoadingData] = useState<boolean>(false);\r\n  const [currentPage, setCurrentPage] = useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(10);\r\n  const [salesCommissions, setSalesCommissions] = useState<SalesModel[]>();\r\n  const [order, setOrder] = useState<'asc' | 'desc'>('asc');\r\n  const [orderBy, setOrderBy] = useState<string>('id');\r\n  const [salesId, setSalesId] = useState<string>('');\r\n  const [name, setName] = useState<string>('');\r\n  const [address, setAddress] = useState<string>('');\r\n  const [email, setEmail] = useState<string>('');\r\n  const [phoneNumber, setPhoneNumber] = useState<string>('');\r\n  const [snackbarVariant, setSnackbarVariant] = useState<'success' | 'error'>('success');\r\n  const [message, setMessage] = useState<string>('');\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    setIsLoadingData(true);\r\n\r\n    const getQueryParams = () => {\r\n      const params = new URLSearchParams();\r\n      if (queryString) {\r\n        params.append('keyword', queryString);\r\n      }\r\n\r\n      if (name) {\r\n        params.append('keyword', name);\r\n      }\r\n\r\n      if (email) {\r\n        params.append('keyword', email);\r\n      }\r\n\r\n      if (phoneNumber) {\r\n        params.append('keyword', phoneNumber);\r\n      }\r\n      if (address) {\r\n        params.append('keyword', address);\r\n      }\r\n\r\n      if (salesId) {\r\n        params.append('keyword', salesId);\r\n      }\r\n\r\n      if (orderBy || order) {\r\n        params.append('orderBy', orderBy);\r\n        params.append('ordered', order);\r\n      }\r\n\r\n      params.append('perPage', rowsPerPage.toString());\r\n      params.append('page', currentPage.toString());\r\n\r\n      return params.toString();\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`${SALES_BASE_URL}?${getQueryParams()}`, { cancelToken: cancelTokenSource.token });\r\n      setSalesCommissions(data.data);\r\n      setCount(data.meta.total);\r\n    } catch (error) {}\r\n    setIsLoadingData(false);\r\n    return () => {\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, [queryString, orderBy, order, name, address, email, salesId, phoneNumber, currentPage, rowsPerPage]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n    <Page title='Komisi'>\r\n      <Container>\r\n        <Grid container direction='row'>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Typography variant='h1'> Komisi </Typography>\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Breadcrumb />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <PaperCustom>\r\n          <Grid container direction='row' spacing={2}>\r\n            <Grid container justify='center' item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n              <CommissionPageTable\r\n                isLoadingData={isLoadingData}\r\n                salesCommissions={salesCommissions}\r\n                queryString={queryString}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                name={name}\r\n                setName={setName}\r\n                address={address}\r\n                setAddress={setAddress}\r\n                email={email}\r\n                setEmail={setEmail}\r\n                salesId={salesId}\r\n                setSalesId={setSalesId}\r\n                phoneNumber={phoneNumber}\r\n                setPhoneNumber={setPhoneNumber}\r\n                setOrder={setOrder}\r\n                setOrderBy={setOrderBy}\r\n              />\r\n\r\n              <StandardConfirmationDialog\r\n                variant={snackbarVariant}\r\n                titleMessage={snackbarVariant === 'success' ? 'Success!' : 'Error!'}\r\n                message={message}\r\n                open={openSnackbar}\r\n                handleClose={handleCloseSnackbar}\r\n                onConfirm={handleCloseSnackbar}\r\n                noCancelButton={true}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid container justify='center' item xl={12} md={12} sm={12}>\r\n              {salesCommissions && salesCommissions.length > 0 && (\r\n                <Pagination count={count} onChange={(event, page) => setCurrentPage(page)} page={currentPage} boundaryCount={2} variant='outlined' />\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </PaperCustom>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CommissionPage;\r\n","import React, { FC, useState } from 'react';\r\nimport { TableContainer, Table, TableBody, TableCell, TableRow, makeStyles, Theme, Typography } from '@material-ui/core';\r\nimport { PaperCustom } from 'components';\r\nimport { GRAY_3 } from 'constants/colors';\r\n\r\ninterface Props {\r\n  salesCommission: SalesModel;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  id: {\r\n    color: GRAY_3\r\n  }\r\n});\r\n\r\nconst SalesDetail: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { salesCommission } = props;\r\n\r\n  return (\r\n    <PaperCustom>\r\n      <Typography variant='h5'>Detail Informasi</Typography>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell className={classes.id}>ID SALES</TableCell>\r\n              <TableCell align='right'>{'#'}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Nama Sales</TableCell>\r\n              <TableCell align='right'></TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell align='right'></TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>No. Handphone</TableCell>\r\n              <TableCell align='right'></TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Alamat</TableCell>\r\n              <TableCell align='right'></TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </PaperCustom>\r\n  );\r\n};\r\n\r\nexport default SalesDetail;\r\n","import React, { FC, Fragment, useState } from 'react';\r\nimport { Theme, Chip, makeStyles, IconButton } from '@material-ui/core';\r\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@material-ui/icons';\r\nimport { TableCellMiddle, TableCellEnd, TableCellStart, TableRowCustom, TableRowCollapse } from 'components/Table';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { GREEN } from 'constants/colors';\r\n\r\ninterface Props {\r\n  invoiceDetail: SalesModel;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  chip: {\r\n    borderRadius: 7\r\n  },\r\n  paidChip: {\r\n    color: GREEN,\r\n    borderRadius: 27\r\n  }\r\n}));\r\n\r\nconst BodyRow: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { invoiceDetail, isLoading } = props;\r\n  const { invoices } = invoiceDetail;\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <Fragment>\r\n      <TableRowCustom>\r\n        <TableCellStart>\r\n          <IconButton aria-label='expand row' size='small' onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\r\n          </IconButton>\r\n        </TableCellStart>\r\n        <TableCellMiddle>\r\n          {isLoading ? (\r\n            <Skeleton variant='text' width={'100%'} height={25} />\r\n          ) : (\r\n            <Chip\r\n              className={classes.chip}\r\n              variant='default'\r\n              label='Dibayar'\r\n              color={invoices && invoices[0].statusInvoice === 'DIBAYAR' ? 'primary' : 'secondary'}\r\n            />\r\n          )}\r\n        </TableCellMiddle>\r\n        <TableCellMiddle>{isLoading ? <Skeleton variant='text' width={'100%'} height={25} /> : invoices && invoices[0].amount}</TableCellMiddle>\r\n        <TableCellMiddle>{isLoading ? <Skeleton variant='text' width={'100%'} height={25} /> : invoices && invoices[0].amountOwed}</TableCellMiddle>\r\n        <TableCellMiddle>{isLoading ? <Skeleton variant='text' width={'100%'} height={25} /> : invoices && invoices[0].invoiceDate}</TableCellMiddle>\r\n        <TableCellMiddle>{isLoading ? <Skeleton variant='text' width={'100%'} height={25} /> : invoices && invoices[0].dueDate}</TableCellMiddle>\r\n        <TableCellEnd>{isLoading ? <Skeleton variant='text' width={'100%'} height={25} /> : invoices && invoices[0].status}</TableCellEnd>\r\n      </TableRowCustom>\r\n      {!isLoading && (\r\n        <TableRowCollapse colSpan={7} open={open}>\r\n          aaaaa\r\n        </TableRowCollapse>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BodyRow;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport { TableContainer, Typography, TableBody, TableHead, TableRow, TableCell, TextField, makeStyles } from '@material-ui/core';\r\nimport { TableCellHead, HeaderRow, TableCustom } from 'components/Table';\r\nimport { PaperCustom } from 'components';\r\nimport BodyRow from './components/BodyRow';\r\n\r\ninterface Props {\r\n  isLoadingData: boolean;\r\n  count: number;\r\n  currentPage: number;\r\n  rowsPerPage: number;\r\n  salesCommissions?: SalesModel[];\r\n  queryString?: string;\r\n  order: 'asc' | 'desc';\r\n  orderBy: string;\r\n  statusInvoice: string;\r\n  setStatusInvoice: React.Dispatch<React.SetStateAction<string>>;\r\n  amount: string;\r\n  setAmount: React.Dispatch<React.SetStateAction<string>>;\r\n  amountOwed: string;\r\n  setAmountOwed: React.Dispatch<React.SetStateAction<string>>;\r\n  invoiceDate: string;\r\n  setInvoiceDate: React.Dispatch<React.SetStateAction<string>>;\r\n  dueDate: string;\r\n  setDueDate: React.Dispatch<React.SetStateAction<string>>;\r\n  status: string;\r\n  setStatus: React.Dispatch<React.SetStateAction<string>>;\r\n  invoiceId: string;\r\n  setInvoiceId: React.Dispatch<React.SetStateAction<string>>;\r\n  setOrder: React.Dispatch<React.SetStateAction<'asc' | 'desc'>>;\r\n  setOrderBy: React.Dispatch<React.SetStateAction<string>>;\r\n  handleChangeRowsPerPage: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\r\n  handleChangePage: (event: React.MouseEvent<HTMLButtonElement> | null, page: number) => void;\r\n}\r\n\r\nconst useStyles = makeStyles({});\r\n\r\nconst dummySales: SalesModel = {\r\n  id: 0,\r\n  salesId: '',\r\n  name: '',\r\n  address: '',\r\n  phoneNumber: '',\r\n  email: ''\r\n};\r\n\r\nconst InvoiceDetail: FC<Props> = props => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    isLoadingData,\r\n    count,\r\n    currentPage,\r\n    rowsPerPage,\r\n    salesCommissions,\r\n    order,\r\n    orderBy,\r\n    invoiceId,\r\n    setInvoiceId,\r\n    statusInvoice,\r\n    setStatusInvoice,\r\n    handleChangePage,\r\n    handleChangeRowsPerPage,\r\n    setOrder,\r\n    setOrderBy,\r\n    queryString\r\n  } = props;\r\n\r\n  const [showSkeleton, setShowSkeleton] = useState<boolean>(true);\r\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: string) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoadingData) {\r\n      setShowSkeleton(true);\r\n    }\r\n    return () => {\r\n      setShowSkeleton(false);\r\n    };\r\n  }, [isLoadingData]);\r\n\r\n  return (\r\n    <PaperCustom>\r\n      <Typography variant='h5'>Semua Invoice</Typography>\r\n      <TableContainer>\r\n        <TableCustom>\r\n          <TableHead>\r\n            <HeaderRow\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              headers={[\r\n                { id: 'invoiceIdId', label: 'ID', sort: true },\r\n                { id: 'statusInvoice', label: 'STATUS INVOICE', sort: true },\r\n                { id: 'amount', label: 'JUMLAH', sort: true },\r\n                { id: 'amountOwed', label: 'JUMLAH TERHUTANG', sort: true },\r\n                { id: 'invoiceDate', label: 'TANGGAL INVOICE', sort: true },\r\n                { id: 'dueDate', label: 'TANGGAL JATUH TEMPO', sort: true },\r\n                { id: 'status', label: 'TERKIRIM', sort: true }\r\n              ]}\r\n            />\r\n            <TableRow>\r\n              <TableCellHead>\r\n                <TextField id='invoiceIdId' variant='outlined' value={invoiceId} onChange={event => setInvoiceId(event.target.value)} size='small' />\r\n              </TableCellHead>\r\n              <TableCellHead>\r\n                <TextField\r\n                  id='statusInvoice'\r\n                  variant='outlined'\r\n                  value={statusInvoice}\r\n                  onChange={event => setStatusInvoice(event.target.value)}\r\n                  size='small'\r\n                />\r\n              </TableCellHead>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {showSkeleton ? (\r\n              [0, 1, 2, 3].map(index => <BodyRow key={index + 1} isLoading={showSkeleton} invoiceDetail={dummySales} />)\r\n            ) : salesCommissions && salesCommissions.length > 0 ? (\r\n              salesCommissions.map((value, index) => <BodyRow key={index + 1} isLoading={showSkeleton} invoiceDetail={value} />)\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell colSpan={7} align='center'>\r\n                  {queryString ? 'No matching result' : 'Data Not Available'}\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </TableCustom>\r\n      </TableContainer>\r\n    </PaperCustom>\r\n  );\r\n};\r\n\r\nexport default InvoiceDetail;\r\n","import React, { FC, useState, useEffect, useCallback } from 'react';\r\nimport { Container, makeStyles, Typography, Grid, Theme, Divider } from '@material-ui/core';\r\nimport { Page, StandardConfirmationDialog, Breadcrumb } from 'components';\r\nimport { SALES_BASE_URL } from 'constants/url';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport useRouter from 'hooks/useRouter';\r\nimport SalesDetail from './components/SalesDetail';\r\nimport InvoiceDetail from './components/InvoiceDetail';\r\nimport useDebounce from 'hooks/useDebounce';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  title: {\r\n    fontWeight: 500,\r\n    fontStyle: 'normal',\r\n    fontSize: '28px',\r\n    lineHeight: '32px',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3)\r\n  },\r\n  text: {\r\n    fontWeight: 'bold',\r\n    fontSize: '30px',\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  textSpace: {\r\n    fontWeight: 'bold',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3)\r\n  },\r\n  divider: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  titleWrapper: {\r\n    width: '169px',\r\n    height: '32px',\r\n    top: '112px',\r\n    left: '239px'\r\n  },\r\n  secondGrid: {\r\n    marginTop: 10\r\n  }\r\n}));\r\n\r\nconst dummyPartner: SalesModel = {\r\n  id: 0,\r\n  salesId: '12',\r\n  name: 'Jhon',\r\n  address: 'JL.Sei.Kampar',\r\n  email: 'jhno@gmail.com',\r\n  phoneNumber: '0812121212'\r\n};\r\n\r\nconst CommissionDetail: FC = () => {\r\n  const classes = useStyles();\r\n  const { location } = useRouter();\r\n  // eslint-disable-next-line\r\n  const params: any = location.state;\r\n\r\n  const [isLoadingData, setIsLoadingData] = useState<boolean>(false);\r\n  const [salesCommission, setSalesCommission] = useState<SalesModel>(dummyPartner);\r\n  const [confirmationDelete, setConfirmationDelete] = useState<boolean>(false);\r\n  const [snackbarVariant, setSnackbarVariant] = useState<'success' | 'error'>('success');\r\n  const [message, setMessage] = useState<string>('');\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const dummySales: SalesModel = {\r\n    id: 0,\r\n    salesId: '#123',\r\n    name: 'Jhon',\r\n    address: 'JL.Sei.Kampar',\r\n    phoneNumber: '0812123434',\r\n    email: 'jhon@gmail.com'\r\n  };\r\n\r\n  const [query, setQuery] = useState<string>('');\r\n  const [count, setCount] = useState<number>(0);\r\n  const [status, setStatus] = useState<string>('');\r\n  const [queryString, setQueryString] = useState<string>();\r\n  const [currentPage, setCurrentPage] = useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(10);\r\n  const [salesCommissions, setSalesCommissions] = useState<SalesModel[]>([dummySales]);\r\n  const [order, setOrder] = useState<'asc' | 'desc'>('asc');\r\n  const [orderBy, setOrderBy] = useState<string>('id');\r\n  const [amountOwed, setAmountOwed] = useState<string>('');\r\n  const [amount, setAmount] = useState<string>('');\r\n  const [invoiceDate, setInvoiceDate] = useState<string>('');\r\n  const [invoiceId, setInvoiceId] = useState<string>('');\r\n  const [dueDate, setDueDate] = useState<string>('');\r\n  const [statusInvoice, setStatusInvoice] = useState<string>('');\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    setIsLoadingData(true);\r\n\r\n    const getQueryParams = () => {\r\n      const params = new URLSearchParams();\r\n      if (queryString) {\r\n        params.append('keyword', queryString);\r\n      }\r\n\r\n      if (statusInvoice) {\r\n        params.append('keyword', statusInvoice);\r\n      }\r\n\r\n      if (invoiceId) {\r\n        params.append('keyword', invoiceId);\r\n      }\r\n\r\n      if (orderBy || order) {\r\n        params.append('orderBy', orderBy);\r\n        params.append('ordered', order);\r\n      }\r\n\r\n      params.append('perPage', rowsPerPage.toString());\r\n      params.append('page', currentPage.toString());\r\n\r\n      return params.toString();\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`${SALES_BASE_URL}?${getQueryParams()}`, { cancelToken: cancelTokenSource.token });\r\n      setSalesCommissions(data.data);\r\n      setCount(data.meta.total);\r\n    } catch (error) {}\r\n    setIsLoadingData(false);\r\n    return () => {\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, [queryString, orderBy, order, invoiceId, statusInvoice, currentPage, rowsPerPage]);\r\n\r\n  const handleCloseConfirmationDelete = () => {\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  const performActionAndRevertPage = (action: React.Dispatch<React.SetStateAction<any>>, actionParam: any) => {\r\n    setCurrentPage(0);\r\n    action(actionParam);\r\n  };\r\n\r\n  const handleSearch = useCallback((searchQuery: string) => {\r\n    performActionAndRevertPage(setQueryString, searchQuery);\r\n  }, []);\r\n\r\n  const debouncedSearchTerm = useDebounce(query, 500);\r\n\r\n  useEffect(() => {\r\n    if (debouncedSearchTerm.length >= 3) {\r\n      handleSearch(debouncedSearchTerm);\r\n    } else if (debouncedSearchTerm.length === 0) {\r\n      handleSearch(debouncedSearchTerm);\r\n    }\r\n  }, [debouncedSearchTerm, handleSearch]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return (\r\n    <Page title='Mitra'>\r\n      <Container>\r\n        <Grid container direction='row'>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Typography variant='h1'>Komisi</Typography>\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Breadcrumb />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <SalesDetail salesCommission={salesCommission} />\r\n\r\n        <StandardConfirmationDialog\r\n          variant={snackbarVariant}\r\n          titleMessage={snackbarVariant === 'success' ? 'Success!' : 'Error!'}\r\n          message={message}\r\n          open={openSnackbar}\r\n          handleClose={handleCloseSnackbar}\r\n          onConfirm={handleCloseSnackbar}\r\n          noCancelButton={true}\r\n        />\r\n\r\n        <InvoiceDetail\r\n          isLoadingData={isLoadingData}\r\n          count={count}\r\n          currentPage={currentPage}\r\n          rowsPerPage={rowsPerPage}\r\n          salesCommissions={salesCommissions}\r\n          queryString={queryString}\r\n          order={order}\r\n          orderBy={orderBy}\r\n          statusInvoice={statusInvoice}\r\n          setStatusInvoice={setStatusInvoice}\r\n          amount={amount}\r\n          setAmount={setAmount}\r\n          amountOwed={amountOwed}\r\n          setAmountOwed={setAmountOwed}\r\n          invoiceDate={invoiceDate}\r\n          setInvoiceDate={setInvoiceDate}\r\n          dueDate={dueDate}\r\n          setDueDate={setDueDate}\r\n          status={status}\r\n          setStatus={setStatus}\r\n          invoiceId={invoiceId}\r\n          setInvoiceId={setInvoiceId}\r\n          setOrder={setOrder}\r\n          setOrderBy={setOrderBy}\r\n          handleChangeRowsPerPage={event => performActionAndRevertPage(setRowsPerPage, +event.target.value)}\r\n          handleChangePage={(event, page) => setCurrentPage(page)}\r\n        />\r\n\r\n        <StandardConfirmationDialog\r\n          variant={'danger'}\r\n          titleMessage={'Delete'}\r\n          message={'Are you sure want to delete this data?'}\r\n          open={confirmationDelete}\r\n          handleClose={handleCloseConfirmationDelete}\r\n        />\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CommissionDetail;\r\n","import React, { FC, useContext, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { AppBar, Avatar, Grid, IconButton, ListItemIcon, makeStyles, Menu, MenuItem, Theme, Toolbar, Typography } from '@material-ui/core';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { LOGOUT_URL } from 'constants/url';\r\nimport { CurrentUserContext } from 'contexts/CurrentUserContext';\r\nimport IdentifyIcon from '@material-ui/icons/PermIdentityRounded';\r\nimport LogoutIcon from '@material-ui/icons/PowerSettingsNewRounded';\r\nimport clsx from 'clsx';\r\nimport logo from 'images/logo_round.png';\r\nimport { format } from 'date-fns';\r\nimport avatar from 'images/avatar.png';\r\nimport SearchInput from '../components/SearchInput';\r\nimport { WHITE, BLACK, GRAY_3 } from 'constants/colors';\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  handleDrawerOpen(): void;\r\n}\r\n\r\nconst { REACT_APP_DRAWER_WIDTH = '240' } = process.env;\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  avatar: {\r\n    margin: 10,\r\n    width: 30,\r\n    height: 30\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24 // keep right padding when drawer closed\r\n  },\r\n  appBar: {\r\n    background: WHITE,\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    boxShadow: '0px 5px 8px 0px #000000 8%',\r\n    filter: 'drop-shadow(0px 5px 8px rgba(0, 0, 0, 0.08))',\r\n  },\r\n  appBarShift: {\r\n    marginLeft: REACT_APP_DRAWER_WIDTH,\r\n    width: `calc(100% - ${REACT_APP_DRAWER_WIDTH}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none'\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  ListItemIcon: {\r\n    minWidth: theme.spacing(5)\r\n  },\r\n  logo: {\r\n    width: '1em'\r\n  },\r\n  greeting:{\r\n    marginLeft: theme.spacing(1),\r\n    color: BLACK,\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    lineHeight: '24px'\r\n  },\r\n  date:{\r\n    marginLeft: theme.spacing(1),\r\n    color: GRAY_3,\r\n    fontSize: 12,\r\n    lineHeight: '16px'\r\n  }\r\n}));\r\n\r\nconst dummyUser: CurrentUser = {\r\n  id: 0,\r\n  displayName: '',\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  contactNumber: ''\r\n};\r\n\r\nconst AppHeader: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { currentUser, unsetCurrentUser } = useContext(CurrentUserContext);\r\n  const { id, displayName } = currentUser ? currentUser : dummyUser;\r\n\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const { open, handleDrawerOpen } = props;\r\n  const [user, setUser] = useState();\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOpenProfileModal = (userProfileId: number): React.MouseEventHandler => () => {\r\n    handleClose();\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    handleClose();\r\n    try {\r\n      await axios.post(LOGOUT_URL);\r\n    } catch (err) {}\r\n    unsetCurrentUser();\r\n  };\r\n\r\n  const detailDate = format(new Date(), 'cccc, dd MMMM yyyy, HH:mm:ss').toString();\r\n  const renderGreeting = () => {\r\n    const now = format(new Date(), 'aa').toString();\r\n    if (now === 'AM') {\r\n      return 'Selamat Pagi,';\r\n    } else if (now === 'PM') {\r\n      return 'Selamat Sore,';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppBar elevation={0} position='absolute' className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          edge='start'\r\n          color='inherit'\r\n          aria-label='Open drawer'\r\n          onClick={handleDrawerOpen}\r\n          className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n        >\r\n          <img src={logo} alt='' className={classes.logo} />\r\n        </IconButton>\r\n        <IconButton size='small' color='inherit'>\r\n          <Avatar src={avatar}></Avatar>\r\n        </IconButton>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <Typography component='p' display='inline' className={classes.greeting}>\r\n              {renderGreeting()} Admin\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <Typography display='inline' className={classes.date}>\r\n              {detailDate}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React, { FC, ComponentType } from 'react';\r\nimport { SvgIconProps } from '@material-ui/core/SvgIcon';\r\nimport { ListItem, ListItemIcon, ListItemText, Tooltip,Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {WHITE} from 'constants/colors';\r\nimport useRouter from 'hooks/useRouter';\r\n\r\ninterface Props {\r\n  Icon: ComponentType<SvgIconProps>;\r\n  path: string;\r\n  label: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n\r\n  colorDrawer: {\r\n    color: WHITE,\r\n    fontSize: '20px',\r\n  },\r\n  textDrawer: {\r\n    fontSize: 40\r\n  },\r\n}));\r\n\r\nconst DrawerItem: FC<Props> = props => {\r\n  const { history } = useRouter();\r\n  const classes = useStyles();\r\n  const { Icon, path, label } = props;\r\n\r\n  const onClickHandler: React.MouseEventHandler = event => {\r\n    event.preventDefault();\r\n\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <Tooltip title={label} placement='right'>\r\n      <ListItem button onClick={onClickHandler}>\r\n        <ListItemIcon>\r\n          <Icon className={classes.colorDrawer} />\r\n        </ListItemIcon>\r\n        <ListItemText primary={label} />\r\n      </ListItem>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default DrawerItem;\r\n","import React, { FC } from 'react';\r\nimport { Drawer, IconButton, List, Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport clsx from 'clsx';\r\nimport logo from 'images/logo.png';\r\nimport DrawerItem from './components/DrawerItem';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ClientsIcon from '@material-ui/icons/SupervisorAccount';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { BLUE_PRIMARY, WHITE, GRADIENT_DRAWER_COLOR } from 'constants/colors';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\nimport { ConfirmationNumber } from '@material-ui/icons';\r\ninterface Props {\r\n  openDrawer: boolean;\r\n  handleDrawerClose(): void;\r\n}\r\n\r\nconst { REACT_APP_DRAWER_WIDTH = '240' } = process.env;\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    background: GRADIENT_DRAWER_COLOR,\r\n    width: +REACT_APP_DRAWER_WIDTH,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    background: GRADIENT_DRAWER_COLOR,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9)\r\n    }\r\n  },\r\n  logoContainer: {\r\n    textAlign: 'center'\r\n  },\r\n  textIcon: {\r\n    color: WHITE,\r\n    fontSize: 50,\r\n    fontWeight: 'bold'\r\n  },\r\n  logo: {\r\n    width: '50%',\r\n    margin: `0px ${theme.spacing(8)}px`\r\n  }\r\n}));\r\n\r\nconst AppDrawer: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { openDrawer, handleDrawerClose } = props;\r\n\r\n  return (\r\n    <Drawer\r\n      variant='permanent'\r\n      classes={{\r\n        paper: clsx(classes.drawerPaper, !openDrawer && classes.drawerPaperClose)\r\n      }}\r\n      open={openDrawer}\r\n    >\r\n      <div className={classes.toolbarIcon}>\r\n        <div className={classes.logoContainer}>\r\n          <img src={logo} alt='' className={classes.logo} />\r\n        </div>\r\n\r\n        <IconButton onClick={handleDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n\r\n      <List className={classes.textIcon}>\r\n        <DrawerItem Icon={HomeIcon} path='/beranda' label='beranda' />\r\n        <DrawerItem Icon={PeopleIcon} path='/mitra' label='Mitra' />\r\n        <DrawerItem Icon={PeopleIcon} path='/produk' label='Katalog' />\r\n        <DrawerItem Icon={PeopleIcon} path='/kategori' label='Kategori' />\r\n        <DrawerItem Icon={ShoppingCartIcon} path='/order' label='Order' />\r\n        <DrawerItem Icon={DescriptionIcon} path='/invoice' label='Invoice' />\r\n        <DrawerItem Icon={ClientsIcon} path='/komisi' label='Komisi' />\r\n        <DrawerItem Icon={SettingsIcon} path='/settings' label='Settings' />\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AppDrawer;\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport clsx from 'clsx';\r\nimport axios from 'axios';\r\nimport { Box, Theme, Typography } from '@material-ui/core';\r\nimport { Switch, Route } from 'react-router';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SettingsPage from 'pages/SettingsPage';\r\nimport UserPage from 'pages/UserPage';\r\nimport AccesPage from 'pages/AccesPage';\r\nimport ConditionalRoute from 'components/ConditionalRoute';\r\nimport LoginPage from 'pages/LoginPage';\r\nimport HomePage from 'pages/HomePage';\r\nimport NotFoundPage from 'pages/NotFoundPage';\r\nimport CompanyPage from 'pages/CompanyPage';\r\nimport PartnerPage from 'pages/PartnerPage';\r\nimport CategoryPage from 'pages/CategoryPage';\r\nimport ProductPage from 'pages/ProductPage';\r\nimport ProductDetailPage from 'pages/ProductDetailPage';\r\nimport PartnerDetailPage from 'pages/PartnerDetailPage';\r\nimport CommissionPage from 'pages/CommissionPage';\r\nimport CommissionDetailPage from 'pages/CommissionDetail';\r\nimport AppHeader from 'components/AppHeader';\r\nimport AppDrawer from 'components/AppDrawer';\r\n\r\nimport { CurrentUserProvider } from 'contexts/CurrentUserContext';\r\nimport { isUserAuthenticated } from 'selectors';\r\nimport { attachTokenToHeader, detachTokenFromHeader } from 'utils/AxiosUtils';\r\nimport { GET_CURRENT_USER_URL } from 'constants/url';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '95vh',\r\n    overflow: 'auto'\r\n  },\r\n  footerPaddingIsLoggedIn: {\r\n    paddingRight: theme.spacing(6)\r\n  }\r\n}));\r\n\r\nconst App: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [CurrentUserData, setCurrentUserData] = useState<CurrentUser>();\r\n  const [isAuthenticating, setAuthenticating] = useState(true);\r\n  const [openDrawer, setOpenDrawer] = useState(true);\r\n\r\n  const isLoggedIn = isUserAuthenticated(CurrentUserData);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpenDrawer(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpenDrawer(false);\r\n  };\r\n\r\n  const setCurrentUser = (currentUser: CurrentUser, token: string): void => {\r\n    localStorage.setItem('token', token);\r\n    attachTokenToHeader(token);\r\n    setCurrentUserData(currentUser);\r\n  };\r\n\r\n  const unsetCurrentUser = (): void => {\r\n    localStorage.removeItem('token');\r\n    detachTokenFromHeader();\r\n\r\n    setCurrentUserData(undefined);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getPersistedToken = () => {\r\n      return localStorage.getItem('token');\r\n    };\r\n\r\n    const getCurrentUserData = async () => {\r\n      setAuthenticating(true);\r\n      const token = getPersistedToken();\r\n      if (token) {\r\n        try {\r\n          const response = await axios.get(GET_CURRENT_USER_URL, { headers: { Authorization: `Bearer ${token}` } });\r\n          const data: CurrentUser = response.data;\r\n          setCurrentUser(data, token);\r\n        } catch (err) {\r\n          unsetCurrentUser();\r\n        }\r\n      }\r\n      setAuthenticating(false);\r\n    };\r\n    getCurrentUserData();\r\n  }, []);\r\n\r\n  return isAuthenticating ? null : (\r\n    <Box>\r\n      <CurrentUserProvider\r\n        value={{\r\n          currentUser: CurrentUserData,\r\n          setCurrentUser,\r\n          unsetCurrentUser\r\n        }}\r\n      >\r\n        <div className={classes.root}>\r\n          {isLoggedIn && (\r\n            <Fragment>\r\n              <AppHeader open={openDrawer} handleDrawerOpen={handleDrawerOpen} />\r\n              <AppDrawer openDrawer={openDrawer} handleDrawerClose={handleDrawerClose} />\r\n            </Fragment>\r\n          )}\r\n          <main className={classes.content}>\r\n            {isLoggedIn && <div className={classes.appBarSpacer} />}\r\n            <Switch>\r\n              <ConditionalRoute exact={true} path={'/'} routeCondition={!isLoggedIn} component={LoginPage} redirectTo={'/home'} />\r\n              <ConditionalRoute exact={true} path={'/home'} routeCondition={isLoggedIn} component={HomePage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/settings'} routeCondition={isLoggedIn} component={SettingsPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/users'} routeCondition={isLoggedIn} component={UserPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/access'} routeCondition={isLoggedIn} component={AccesPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/company'} routeCondition={isLoggedIn} component={CompanyPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/mitra'} routeCondition={isLoggedIn} component={PartnerPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/mitra/detail'} routeCondition={isLoggedIn} component={PartnerDetailPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/produk'} routeCondition={isLoggedIn} component={ProductPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/produk/detail'} routeCondition={isLoggedIn} component={ProductDetailPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/kategori'} routeCondition={isLoggedIn} component={CategoryPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/komisi'} routeCondition={isLoggedIn} component={CommissionPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/komisi/detail'} routeCondition={isLoggedIn} component={CommissionDetailPage} redirectTo={'/'} />\r\n              <Route component={NotFoundPage} />\r\n            </Switch>\r\n          </main>\r\n        </div>\r\n      </CurrentUserProvider>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import axios, { AxiosResponse, AxiosError } from 'axios';\r\n\r\nimport { remountApp } from '..';\r\n\r\nexport const attachTokenToHeader = (token: string) => {\r\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n};\r\n\r\nexport const detachTokenFromHeader = () => {\r\n  delete axios.defaults.headers.common.Authorization;\r\n};\r\n\r\nexport const setUpAxiosInterceptors = () => {\r\n  const onFulfilled = (response: AxiosResponse) => {\r\n    return response;\r\n  };\r\n\r\n  const onRejected = (error: AxiosError) => {\r\n    if (error.message === 'Network Error') {\r\n      return;\r\n    }\r\n\r\n    const response = error.response;\r\n\r\n    if (response && response.data.errorCode === 1) {\r\n      localStorage.removeItem('token');\r\n      remountApp();\r\n    }\r\n\r\n    return Promise.reject(response);\r\n  };\r\n\r\n  axios.interceptors.response.use(onFulfilled, onRejected);\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { BLUE_PRIMARY, BLUE_SECONDARY, BLACK, BLACK_2, WHITE, GREY, BACKGROUND, GRAY_3, RED } from 'constants/colors';\r\n\r\ndeclare module '@material-ui/core/styles/createMuiTheme' {\r\n  interface Theme {\r\n    border: {\r\n      primary: string;\r\n    };\r\n  }\r\n  // allow configuration using `createMuiTheme`\r\n  interface ThemeOptions {\r\n    border?: {\r\n      primary?: string;\r\n    };\r\n  }\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n  border: {\r\n    primary: '#F2F2F2'\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: BLUE_PRIMARY,\r\n      dark: BLUE_SECONDARY,\r\n      contrastText: WHITE\r\n    },\r\n    secondary: {\r\n      main: GREY,\r\n      contrastText: WHITE\r\n    },\r\n    background: {\r\n      default: BACKGROUND\r\n    },\r\n    error: {\r\n      main: RED\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: ['\"Rubik\"'].join(','),\r\n    h1: {\r\n      fontSize: '28px',\r\n      fontWeight: 500,\r\n      fontStyle: 'normal',\r\n      color: GRAY_3\r\n    },\r\n    h5: {\r\n      fontSize: '20px',\r\n      fontWeight: 500,\r\n      fontStyle: 'normal',\r\n      lineHeight: '32px',\r\n      color: BLACK\r\n    },\r\n    h6: {\r\n      fontSize: '16px',\r\n      fontWeight: 500,\r\n      fontStyle: 'normal',\r\n      color: '#333333'\r\n    },\r\n    subtitle1: {\r\n      fontSize: '12px',\r\n      fontWeight: 400,\r\n      fontStyle: 'normal',\r\n      color: GRAY_3,\r\n      letterSpacing: '0.4px',\r\n      lineHeight: ''\r\n    }\r\n  },\r\n  props: {\r\n    MuiButton: {\r\n      variant: 'contained',\r\n      color: 'primary'\r\n    },\r\n    MuiTableCell: {\r\n      color: '#2E384D',\r\n      align: 'left'\r\n    },\r\n    MuiPaper: {\r\n      elevation: 0\r\n    },\r\n    MuiTextField: {\r\n      margin: 'dense',\r\n      size: 'small',\r\n      variant: 'outlined'\r\n    }\r\n  },\r\n  overrides: {\r\n    MuiOutlinedInput: {\r\n      root: {\r\n        background: '#F7F9FC'\r\n      }\r\n    },\r\n    MuiIconButton: {\r\n      root: {\r\n        color: '#231F20'\r\n      }\r\n    },\r\n    MuiTableCell: {\r\n      root: {\r\n        fontWeight: 'normal',\r\n        fontSize: '15px',\r\n        lineHeight: '22px',\r\n        color: BLACK_2\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport theme from 'theme/hady';\r\nimport { setUpAxiosInterceptors } from './utils/AxiosUtils';\r\n\r\nexport const remountApp = () => {\r\n  ReactDOM.unmountComponentAtNode(document.getElementById('root')!);\r\n  render();\r\n};\r\n\r\nconst render = () => {\r\n  ReactDOM.render(\r\n    <Router>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <App />\r\n      </ThemeProvider>\r\n    </Router>,\r\n    document.getElementById('root')\r\n  );\r\n};\r\n\r\n// Actual rendering\r\nrender();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n// This is to set up axios interceptors for handling 401 errors\r\nsetUpAxiosInterceptors();\r\n\r\n// For hot-reloading\r\nif (module.hot) {\r\n  module.hot.accept('./App', () => {\r\n    render();\r\n  });\r\n}\r\n"],"sourceRoot":""}