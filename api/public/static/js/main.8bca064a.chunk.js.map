{"version":3,"sources":["images/simplify_logo2C.png","images/logo_round.png","images/avatar.png","images/logo.png","hooks/useRouter.ts","pages/SettingsPage/index.tsx","hooks/useDebounce.ts","components/ActionSnackBar.tsx","constants/url.ts","components/BodyCell.tsx","pages/UserPage/components/UserTable/components/BodyRow.tsx","components/HeaderCell.tsx","components/HeaderRow.tsx","pages/UserPage/components/UserTable/index.tsx","utils/index.ts","pages/UserPage/components/CreateUserModal/components/CreateUserForm.tsx","pages/UserPage/components/CreateUserModal/index.tsx","pages/UserPage/components/EditUserModal/components/EditUserForm.tsx","pages/UserPage/components/EditUserModal/index.tsx","components/SearchInput/index.tsx","components/StandardConfirmationDialog.tsx","constants/colors.ts","components/Page.tsx","components/AntSwitch.tsx","components/IOSSwitch.tsx","components/PaperCustom.tsx","components/Breadcrumb.tsx","pages/UserPage/index.tsx","pages/AccesPage/LevelAccesUserTable/components/BodyRow.tsx","pages/AccesPage/LevelAccesUserTable/index.tsx","pages/AccesPage/EditLevelAccesUserModal/components/EditLevelAccessUserForm.tsx","pages/AccesPage/EditLevelAccesUserModal/index.tsx","pages/AccesPage/CreateLevelAccessUserModal/components/CreateLevelAccessForm.tsx","pages/AccesPage/CreateLevelAccessUserModal/index.tsx","pages/AccesPage/index.tsx","components/ConditionalRoute.tsx","components/LoadingButton.tsx","contexts/CurrentUserContext.ts","pages/LoginPage/index.tsx","pages/HomePage.tsx","pages/NotFoundPage/index.tsx","pages/CompanyPage/components/CompanyForm.tsx","pages/CompanyPage/index.tsx","components/Table/TableCellCustom.tsx","components/Table/TableRowCustom.tsx","pages/PartnerPage/components/PartnerTable/components/BodyRow.tsx","components/TablePagination.tsx","components/Table/TableCellHead.tsx","components/Table/HeaderCell.tsx","components/Table/HeaderRow.tsx","pages/PartnerPage/components/PartnerTable/index.tsx","pages/PartnerPage/components/PartnerModal/components/PartnerWizard.tsx","pages/PartnerPage/components/PartnerModal/index.tsx","pages/PartnerPage/index.tsx","pages/CategoryPage/components/CategoryTable/components/BodyRow.tsx","pages/CategoryPage/components/CategoryTable/index.tsx","pages/CategoryPage/components/CategoryModal/components/CategoryWizard.tsx","pages/CategoryPage/components/CategoryModal/index.tsx","pages/CategoryPage/index.tsx","pages/ProductPage/components/ProductTable/components/BodyRow.tsx","pages/ProductPage/components/ProductTable/index.tsx","pages/ProductPage/components/ProductModal/components/ProductWizard.tsx","pages/ProductPage/components/ProductModal/index.tsx","pages/ProductPage/index.tsx","pages/ProductDetailPage/components/ImageSlider.tsx","pages/ProductDetailPage/components/ProductDetail.tsx","pages/ProductDetailPage/components/ProductModal/ProductWizard.tsx","pages/ProductDetailPage/components/ProductModal/index.tsx","pages/ProductDetailPage/index.tsx","pages/PartnerDetailPage/components/PartnerDetail.tsx","pages/PartnerDetailPage/components/PartnerWizard.tsx","pages/PartnerDetailPage/index.tsx","pages/CommissionPage/components/CommissionPageTable/components/BodyRow.tsx","pages/CommissionPage/components/CommissionPageTable/index.tsx","theme/index.ts","pages/CommissionPage/index.tsx","pages/CommissionDetail/components/SalesDetail.tsx","pages/CommissionDetail/components/InvoiceDetail/components/BodyRow.tsx","pages/CommissionDetail/components/InvoiceDetail/index.tsx","pages/CommissionDetail/index.tsx","components/AppHeader.tsx","components/AppDrawer/components/DrawerItem.tsx","components/AppDrawer/index.tsx","App.tsx","utils/AxiosUtils.ts","serviceWorker.ts","theme/hady/index.ts","index.tsx"],"names":["module","exports","useRouter","useContext","RouterContext","history","location","match","useStyles","makeStyles","theme","root","paddingTop","spacing","paddingBottom","container","marginTop","text","fontWeight","fontSize","textSpace","divider","marginBottom","paper","width","subMenuGrid","borderRight","maxWidth","rootPaper","display","flexWrap","margin","height","content","paddingLeft","headerSubMenuTitleContainer","headerPageTitleContainer","borderColor","color","paddingRight","spaceText","spaceTextBold","contentContainer","SettingsPage","classes","Container","className","clsx","Grid","item","sm","Typography","variant","Divider","Paper","onClick","event","preventDefault","push","xs","elevation","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","success","backgroundColor","green","error","palette","dark","icon","iconVariant","opacity","marginRight","message","alignItems","ActionSnackBar","props","open","handleClose","Icon","isSuccessVariant","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","aria-describedby","id","action","IconButton","key","aria-label","BASE_URL","process","LOGIN_URL","USER_BASE_URL","GET_CURRENT_USER_URL","COMPANY_BASE_URL","ACCESS_USER_BASE_URL","PARTNER_BASE_URL","PARTNER_LAST_ID_BASE_URL","WILAYAH_BASE_URL","WILAYAH_PROVINSI_BASE_URL","WILAYAH_KABUPATEN_BASE_URL","code","WILAYAH_KECAMATAN_BASE_URL","ZONE_BASE_URL","PRODUCT_BASE_URL","CATEGORY_BASE_URL","SALES_BASE_URL","bodyCellText","common","black","hideBorder","borderBottom","isRemoveBorderBottom","customWidth","cellWidth","customPadding","pL","pR","pT","pB","BodyCell","align","colSpan","rowSpan","isComponent","TableCell","children","tableRow","tableCellInner","avatar","primary","main","menuAvatar","menuList","minHeight","nameTextCell","flexDirection","marginLeft","otherTextCell","secondText","grey","circle","borderRadius","redCircle","red","actionCell","wrapper","position","newIcon","BodyRow","isLoadingData","user","onEditUser","userName","fullName","email","contact","level","new","TableRow","Button","size","headerCellText","A200","cellStyle","verticalAlign","undefined","HeaderCell","isCheckBox","checkBox","checkBoxSize","HeaderRow","headers","map","header","countChecked","checked","length","totalShouldBeChecked","rowsPerPage","label","Checkbox","checkedIcon","renderCheckBoxIcon","edge","tabIndex","disableRipple","onChange","handleCheckAll","tableWrapper","overflowX","UserTable","users","setOpenSnackbar","setSnackbarVarient","handleOpenEditUser","dummyUser","showSkeleton","setShowSkeleton","timeout","Table","TableHead","TableBody","index","isValidEmail","test","String","toLowerCase","ucWords","charAt","toUpperCase","slice","AddButton","withStyles","getContrastText","orange","controlDiv","cancelButton","addButton","CreateUserForm","setEmail","emailError","setUserName","userNameError","setFullName","fullNameError","setContact","contactError","selectedlevelId","setSelectedlevelId","levelIdError","isSubmitting","onSubmit","onCancel","okLabel","levelUser","handleChange","noValidate","md","lg","xl","TextField","required","fullWidth","helperText","target","autoComplete","select","MenuItem","FormControl","component","FormGroup","FormControlLabel","control","name","justify","disabled","type","background","boxShadow","shadows","padding","outline","top","left","transform","closeButton","right","CreateUserModal","cancelTokenSource","isLoading","setLoading","selectedLevelId","setSelectedLevelId","setEmailError","setUserNameError","setFullNameError","setContactError","setLevelIdError","addNewUser","handleCancel","clearFormValue","clearFormErrors","validateForm","ret","trim","handleOnSubmit","a","axios","CancelToken","source","post","displayName","levelId","cancelToken","token","response","data","console","log","Modal","aria-labelledby","disableBackdropClick","direction","EditUserForm","EditUserModal","updateIndividualUser","resetFormValues","useCallback","handleOnClose","put","userId","errorCode","search","shape","fade","white","breakpoints","up","appbarSearch","searchIcon","pointerEvents","justifyContent","searchIconCustomColor","iconColor","clearIcon","inputRoot","inputInput","widthTransition","transition","transitions","create","bordered","border","SearchInput","setAnchorEl","setPlacement","isAppbar","withTransition","withBorder","placeHolder","tableSearchValue","globalSearchValue","setTableSearchValue","openPopper","setGlobalSearchValue","setOpenPopper","InputBase","placeholder","input","inputProps","currentTarget","handleTextGlobalSearchChange","handleTextTableSearchChange","Tooltip","title","successAvatarIcon","warnigAvatarIcon","dangerAvatarIcon","noCancelButton","okButton","blue","dialogActions","titleText","messageText","iconGrid","StandardConfirmationDialog","titleMessage","onConfirm","Dialog","DialogTitle","DialogContent","DialogActions","disableElevation","WHITE","GREY","Page","forwardRef","ref","Helmet","createStyles","switchBase","thumb","track","Switch","IOSSwitch","secondary","focusVisible","focusVisibleClassName","PaperCustom","active","lineHeight","link","Breadcrumb","path","pathname","split","filter","x","handleClick","Breadcrumbs","Link","href","join","tableRoot","button","extendedIcon","addGrid","textAlign","leftHeader","rightHeader","ButtonNew","UserPage","openSnackbar","snackbarVarient","setUsers","query","setQuery","queryString","setQueryString","setSearchUserError","messageSuccess","messageError","openEditUser","setOpenEditUser","isSearchingUser","setSearchingUser","openCreateUserModal","setOpenCreateUserModal","currentEditingUserIndex","setCurrentEditingUserIndex","setLevelUser","get","getAllLevelUser","cancel","handleCancelEditUser","handleSearch","searchQuery","fetchData","getQueryParams","params","URLSearchParams","append","toString","url","searchUser","debouncedSearchTerm","userIndex","updatedUserProperties","Object","assign","unshift","CheckCircleIcon","ErrorIcon","chip","onEditLevelAccess","accessRight","Chip","LevelAccesUserTable","levelUsers","handleOpenEditLevelAccess","dummyLevelUser","EditLevelAccessUserForm","setLevel","levelError","accessRightError","setAccessRight","setOpenConfirmationModal","EditLevelAccessUserModal","setLevelError","setAccessRightError","updateIndividualLevelUser","accesUserId","CreateLevelAccessForm","CreateLevelAccessUserModal","addNewLevelUser","setLevelAccessUser","levelAccessData","searchLevelAccess","textPaper","AccesPage","state","setLevelUsers","openEditLevelUser","setOpenEditLevelUser","currentEditingLevelUserIndex","setCurrentEditingLevelUserIndex","openCreateLevelUserModal","setOpenCreateLevelUserModal","searchLevelUser","accessIndex","handleCancelEditLevelUser","levelUserIndex","EditLevelAccesUserModal","updatedLevelUserProperties","ConditionalRoute","Component","rest","routeCondition","redirectTo","render","renderProps","to","buttonProgress","LoadingButton","timerRef","React","useRef","style","disabledDueToLoading","setDisabledDueToLoading","current","Fade","in","transitionDelay","unmountOnExit","CircularProgress","CurrentUserContext","createContext","setCurrentUser","unsetCurrentUser","CurrentUserProvider","Provider","Consumer","body","form","logoContainer","logo","linkButton","LoginPage","currentUserContext","useTheme","isAuthenticationError","setAuthenticationError","password","setPassword","isEmptyFieldError","setEmptyFieldError","isShowPassword","setShowPassword","login","currentUser","onSubmitHandler","src","alt","autoFocus","InputProps","endAdornment","InputAdornment","VisibilityOff","Visibility","textDecoration","HomePage","NotFoundPage","rightPaper","dividerStyle","textTypo","textField","textFieldFont","bigAvatar","minWidth","spacingNewLine","buttonBaseStyle","down","inputImageStyle","buttonImage","cancelImage","cursor","spaceImage","textLast","imageRemarks","fontStyle","marginButtom","CompanyForm","setName","nameError","address","setAddress","addressError","npwp","setNPWP","npwpError","district","setDistrict","districtError","subDistrict","setSubDistrict","subDistrictError","postalCode","setPostalCode","postalCodeError","contactNumber","setContactNumber","contactNumberError","contactPerson","setContactPerson","contactPersonError","handphone","setHandphone","handphoneError","website","setWebsite","websiteError","province","setProvince","provinceError","setImage","setImageView","imageView","image","handleChooseImage","selectedImage","selectedImageView","files","URL","createObjectURL","gutterBottom","InputLabelProps","multiline","rowsMax","accept","htmlFor","ButtonBase","focusRipple","placement","Avatar","Badge","badgeContent","CompanyPage","setMessageSuccess","setMessageError","setCompany","setNameError","setAddressError","setPostalCodeError","setContactNumberError","setDistrictError","setHandphoneError","setWebsiteError","setContactPersonError","setNPWPError","setSubDistrictError","setProvinceError","handleSetMessageError","formData","FormData","config","TableCellStart","borderTopLeftRadius","borderBottomLeftRadius","TableCellEnd","borderTopRightRadius","borderBottomRightRadius","borderLeft","TableCellMiddle","TableRowCustom","deleteButton","partner","onDelete","Skeleton","partnerId","partnerType","cellPhoneNumber","TablePagination","rowsPerPageOptions","count","page","onChangePage","onChangeRowsPerPage","SelectProps","native","TableCellHead","letterSpacing","textTransform","visuallyHidden","clip","overflow","property","order","orderBy","sort","onRequestSort","TableSortLabel","table","borderCollapse","borderSpacing","dummyPartner","areaCode","businessEntity","notes","phoneNumber","regionName","virtualAccount","PartnerTable","currentPage","partners","setType","setPartnerId","setCellPhoneNumber","handleChangePage","handleChangeRowsPerPage","setOrder","setOrderBy","handleConfirmationDelete","Select","notesGrid","buttonGrid","tabGrid","gridWrapper","boxSizing","TabPanel","other","role","hidden","a11yProps","dummyRegion","dummyZone","PartnerWizard","setPartners","setOpen","handleSnackBar","setPhoneNumber","setVirtualAccount","setNotes","setValue","setPartnerType","provinsi","setProvinsi","kabupaten","setKabupaten","kecamatan","setKecamatan","zone","setZone","route","setRoute","region","setRegion","isSubmit","setSubmit","nameMessage","setNameMessage","emailMessage","setEmailMessage","addressMessage","setAddressMessage","businessEntityMessage","setBusinessEntityMessage","provinsiMessage","setProvinsiMessage","kabupatenMessage","setKabupatenMessage","kecamatanMessage","setKecamatanMessage","postalCodeMessage","setPostalCodeMessage","zoneMessage","setZoneMessage","phoneNumberMessage","setPhoneNumberMessage","fetch","handleSearchProvinsi","handleSearchKabupaten","handleSearchZone","handleSearchKecamatan","resetValidation","validation","ZoneId","valid","Tabs","indicatorColor","newValue","Tab","FormHelperText","Autocomplete","options","getOptionLabel","option","renderInput","rows","disableTypography","MuiDialogContent","PartnerModal","reason","titleWrapper","PartnerPage","setCount","setIsLoadingData","setCurrentPage","setRowsPerPage","selectedId","setSelectedId","confirmationDelete","setConfirmationDelete","snackbarVariant","setSnackbarVariant","setMessage","meta","total","performActionAndRevertPage","actionParam","deletePartner","delete","handleCloseSnackbar","category","onUpdate","EditOutlined","cellStart","cellSearch","dummyCategory","CategoryTable","categories","description","setDescription","handleOnUpdate","CategoryWizard","setCategories","setCategory","setId","resetForm","CategoryModal","secondGrid","fourthGrid","iconAddColor","CategoryPage","deleteCategory","Pagination","boundaryCount","media","productImage","heigth","price","dummyProductImage","product","setProductImage","ProductImage","Category","Card","CardMedia","CardContent","productName","productCode","sellingPrice","displayType","thousandSeparator","prefix","thirdGrid","dummyProduct","purchasePrice","typeUnit","totalStock","isReminder","minimumStock","ProductTable","products","dropZone","flex","borderWidth","borderStyle","thumbsContainer","thumbInner","img","inputFile","ProductWizard","setProducts","setProductName","setProductCode","setSellingPrice","setPurchasePrice","setTypeUnit","setReminder","setMinimumStock","productNameMessage","setProductNameMessage","productCodeMessage","setProductCodeMessage","typeUnitMessage","setTypeUnitMessage","minimumStockMessage","setMinimumStockMessage","sellingPriceMessage","setSellingPriceMessage","purchasePriceMessage","setPurchasePriceMessage","categoryMessage","setCategoryMessage","setFiles","progress","setProgress","useDropzone","maxFiles","onDrop","acceptedFiles","uploadImage","getRootProps","getInputProps","file","preview","onUploadProgress","progressEvent","totalLength","lengthComputable","getResponseHeader","Math","round","loaded","thumbs","forEach","revokeObjectURL","handleSearchCategory","CategoryId","textColor","getOptionSelected","LinearProgress","ProductModal","ProductPage","last_page","current_page","deleteProduct","ImageSlider","productImages","showArrows","cell","tableDetail","MuiTableCell","ProductDetail","setProduct","upload","ProductDetailPage","setProductImages","ProductImages","handleOpenForm","DeleteRounded","EditRounded","disableFocusRipple","disableTouchRipple","PartnerDetail","Provinsi","Kabupaten","Kecamatan","Zone","setPartner","setUpdate","setBusinessEntity","maxLength","PartnerDetailPage","isUpdate","StyledTableRow","salesCommission","hover","salesId","dummySales","CommissionPageTable","salesCommissions","setSalesId","createMuiTheme","contrastText","typography","h4","h5","h6","body1","body2","subtitle1","overline","caption","overrides","MuiOutlinedInput","adornedStart","responsiveFontSizes","paperSpace","searchSpace","CommissionPage","setSalesCommissions","card","cardHeader","actionIcon","gridOdd","gridEven","contentLabel","contentValue","healthIssueGrid","SalesDetail","salesEmail","salesContactNumber","salesAddress","salesName","CardHeader","paidChip","invoiceDetail","invoices","statusInvoice","amount","amountOwed","invoiceDate","dueDate","status","InvoiceDetail","invoiceId","setInvoiceId","setStatusInvoice","CommissionDetail","setStatus","setAmountOwed","setAmount","setInvoiceDate","setDueDate","REACT_APP_DRAWER_WIDTH","toolbar","appBar","zIndex","drawer","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","ListItemIcon","greeting","date","firstName","lastName","AppHeader","handleDrawerOpen","detailDate","format","Date","AppBar","Toolbar","now","renderGreeting","colorDrawer","textDrawer","DrawerItem","ListItem","ListItemText","toolbarIcon","mixins","drawerPaper","whiteSpace","drawerPaperClose","textIcon","AppDrawer","openDrawer","handleDrawerClose","Drawer","List","HomeIcon","PeopleIcon","ShoppingCartIcon","DescriptionIcon","ClientsIcon","ConfirmationNumberIcon","SettingsIcon","appBarSpacer","footerPaddingIsLoggedIn","App","CurrentUserData","setCurrentUserData","isAuthenticating","setAuthenticating","setOpenDrawer","isLoggedIn","localStorage","setItem","defaults","Authorization","attachTokenToHeader","removeItem","getItem","getCurrentUserData","Box","exact","CommissionDetailPage","Boolean","window","hostname","default","fontFamily","h1","MuiButton","MuiPaper","MuiTextField","MuiIconButton","remountApp","ReactDOM","unmountComponentAtNode","document","getElementById","ThemeProvider","CssBaseline","navigator","serviceWorker","ready","then","registration","unregister","interceptors","use","Promise","reject"],"mappings":"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","file":"static/js/main.8bca064a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/simplify_logo2C.fa4ba6ba.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_round.fa4ba6ba.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar.f5b08587.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.fa4ba6ba.png\";","import { useContext } from 'react';\r\n\r\nimport { __RouterContext as RouterContext, match } from 'react-router';\r\n\r\ninterface MatchParams {\r\n  id: string;\r\n}\r\n\r\nconst useRouter = () => {\r\n  const { history, location, match } = useContext(RouterContext);\r\n\r\n  return {\r\n    history,\r\n    location,\r\n    match: match as match<MatchParams>\r\n  };\r\n};\r\n\r\nexport default useRouter;\r\n","import React, { FC } from 'react';\r\nimport clsx from 'clsx';\r\nimport { Container, Divider, Grid, makeStyles, Paper, Theme, Typography } from '@material-ui/core';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport useRouter from 'hooks/useRouter';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4)\r\n  },\r\n  container: {\r\n    '& > :nth-child(n+2)': {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  },\r\n  text: {\r\n    fontWeight: 'bold',\r\n    fontSize: '30px',\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  textSpace: {\r\n    fontWeight: 'bold',\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  divider: {\r\n    marginBottom: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    width: '10%'\r\n  },\r\n  subMenuGrid: {\r\n    borderRight: '1px solid #dcdcdc',\r\n    maxWidth: theme.spacing(15)\r\n  },\r\n  rootPaper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(36),\r\n      height: theme.spacing(20)\r\n    }\r\n  },\r\n  content: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingTop: theme.spacing(0.2)\r\n  },\r\n  headerSubMenuTitleContainer: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    paddingLeft: theme.spacing(0)\r\n  },\r\n  headerPageTitleContainer: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(4),\r\n    paddingLeft: theme.spacing(2)\r\n  },\r\n  borderColor: {\r\n    color: '#0c88b8',\r\n    width: '110%',\r\n    height: '110%',\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  spaceText: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2)\r\n  },\r\n  spaceTextBold: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    fontWeight: 'bold'\r\n  },\r\n  contentContainer: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(0),\r\n    paddingBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst SettingsPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { history } = useRouter();\r\n\r\n  const onClickHandler: React.MouseEventHandler = event => {\r\n    event.preventDefault();\r\n\r\n    history.push('/users');\r\n  };\r\n\r\n  const onClickCompanyHandler: React.MouseEventHandler = event => {\r\n    event.preventDefault();\r\n\r\n    history.push('/company');\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth='lg' className={clsx(classes.root, classes.container)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item sm={6}>\r\n          <Typography className={classes.text} variant='h3' >\r\n            Pengaturan\r\n          </Typography>\r\n          <Typography className={classes.textSpace} variant='h4' >\r\n            Awal {'>'}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Divider className={classes.divider} />\r\n      <div className={classes.rootPaper}>\r\n        <Paper onClick={onClickHandler}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={9}>\r\n              <Typography variant='h4' className={classes.spaceTextBold}>\r\n                Pengguna\r\n              </Typography>\r\n              <Typography variant='h5'  className={classes.spaceText}>\r\n                Pengaturan Pengguna dan Hak Akses Pengguna\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <PeopleIcon className={classes.borderColor} />\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <Paper onClick={onClickCompanyHandler}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={9}>\r\n              <Typography variant='h4' className={classes.spaceTextBold}>\r\n                Perusahaan\r\n              </Typography>\r\n              <Typography variant='h5'  className={classes.spaceText}>\r\n                Informasi Perusahaan terkait nama, logo dan alamat\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <BusinessIcon className={classes.borderColor} />\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <Paper elevation={3}></Paper>\r\n        <Paper elevation={3}></Paper>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useDebounce = (value: string, delay: number) => {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    // Update debounced value after delay\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    // Cancel the timeout if value changes (also on delay change or unmount)\r\n    // This is how we prevent debounced value from updating if value is changed ...\r\n    // .. within the delay period. Timeout gets cleared and restarted.\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]); // Only re-call effect if value or delay changes\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","import React from 'react';\r\nimport { Snackbar, makeStyles, Theme, SnackbarContent, IconButton } from '@material-ui/core';\r\nimport { green } from '@material-ui/core/colors';\r\nimport clsx from 'clsx';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { SvgIconProps } from '@material-ui/core/SvgIcon';\r\n\r\ninterface Props {\r\n  variant?: 'success' | 'error';\r\n  message: string;\r\n  open: boolean;\r\n  handleClose(): void;\r\n  Icon: React.ComponentType<SvgIconProps>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  icon: {\r\n    fontSize: 20\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  }\r\n}));\r\n\r\nconst ActionSnackBar: React.FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { variant, message, open, handleClose, Icon } = props;\r\n  const isSuccessVariant = variant === 'success';\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center'\r\n      }}\r\n      open={open}\r\n      autoHideDuration={6000}\r\n      onClose={handleClose}\r\n    >\r\n      <SnackbarContent\r\n        className={isSuccessVariant ? classes.success : classes.error}\r\n        aria-describedby='client-snackbar'\r\n        message={\r\n          <span id='client-snackbar' className={classes.message}>\r\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n            {message}\r\n          </span>\r\n        }\r\n        action={[\r\n          <IconButton key='close' aria-label='Close' color='inherit' onClick={handleClose}>\r\n            <CloseIcon className={classes.icon} />\r\n          </IconButton>\r\n        ]}\r\n      />\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default ActionSnackBar;\r\n","const BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\nexport const LOGIN_URL = `${BASE_URL}/login`;\r\nexport const LOGOUT_URL = `${BASE_URL}/logout`;\r\nexport const FORGOT_PASSWORD_URL = `${BASE_URL}/forgotpassword`;\r\nexport const RESET_PASSWORD_URL = `${BASE_URL}/resetpassword`;\r\nexport const CHANGE_PASSWORD_URL = `${BASE_URL}/changepassword`;\r\n\r\nexport const USER_BASE_URL = `${BASE_URL}/users`;\r\nexport const GET_CURRENT_USER_URL = `${USER_BASE_URL}/me`;\r\n\r\nexport const GET_EDIT_USER_URL = (userId: number) => `${USER_BASE_URL}/${userId}`;\r\n\r\nexport const COMPANY_BASE_URL = `${BASE_URL}/company`;\r\n\r\nexport const ACCESS_USER_BASE_URL = `${BASE_URL}/access`;\r\nexport const GET_EDIT_ACCESS_USER_URL = (accesUserId: number) => `${ACCESS_USER_BASE_URL}/${accesUserId}`;\r\n\r\nexport const PARTNER_BASE_URL = `${BASE_URL}/partner`;\r\nexport const PARTNER_LAST_ID_BASE_URL = `${PARTNER_BASE_URL}/last`;\r\n\r\nexport const WILAYAH_BASE_URL = `${BASE_URL}/wilayah`\r\nexport const WILAYAH_PROVINSI_BASE_URL = `${WILAYAH_BASE_URL}/provinsi`;\r\nexport const WILAYAH_KABUPATEN_BASE_URL = (code: string) => `${WILAYAH_BASE_URL}/kabupaten/${code}`;\r\nexport const WILAYAH_KECAMATAN_BASE_URL = (code: string) => `${WILAYAH_BASE_URL}/kecamatan/${code}`;\r\n\r\nexport const ZONE_BASE_URL = `${BASE_URL}/zone`;\r\n\r\nexport const PRODUCT_BASE_URL = `${BASE_URL}/product`;\r\n\r\nexport const CATEGORY_BASE_URL = `${BASE_URL}/category`;\r\nexport const SALES_BASE_URL = `${BASE_URL}/sales`;","import React, { FC } from 'react';\r\nimport { TableCell, Typography, Theme, withStyles } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props {\r\n  cellWidth?: string;\r\n  pL?: string;\r\n  pR?: string;\r\n  pT?: string;\r\n  pB?: string;\r\n  colSpan?: number;\r\n  rowSpan?: number;\r\n  align?: 'left' | 'right' | 'inherit' | 'center' | 'justify' | undefined;\r\n  isComponent?: boolean;\r\n  isRemoveBorderBottom?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  bodyCellText: {\r\n    color: theme.palette.common.black\r\n  },\r\n  hideBorder: (props: Props) => ({\r\n    '&.MuiTableCell-root': {\r\n      borderBottom: props.isRemoveBorderBottom === false || props.isRemoveBorderBottom === null ? '1' : 'none'\r\n    }\r\n  }),\r\n  customWidth: (props: Props) => ({\r\n    width: props.cellWidth\r\n  }),\r\n  customPadding: (props: Props) => ({\r\n    paddingLeft: props.pL === '' || props.pL === null ? theme.spacing(0) : props.pL,\r\n    paddingRight: props.pR === '' || props.pR === null ? theme.spacing(0) : props.pR,\r\n    paddingTop: props.pT === '' || props.pT === null ? theme.spacing(0) : props.pT,\r\n    paddingBottom: props.pB === '' || props.pB === null ? theme.spacing(0) : props.pB\r\n  })\r\n}));\r\n\r\nconst BodyCell: FC<Props> = props => {\r\n  const { cellWidth, pL, pR, pT, pB, align, colSpan, rowSpan, isComponent, isRemoveBorderBottom } = props;\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <TableCell\r\n      align={align}\r\n      rowSpan={rowSpan}\r\n      colSpan={colSpan}\r\n      className={clsx(\r\n        { [classes.hideBorder]: isRemoveBorderBottom },\r\n        { [classes.customWidth]: cellWidth },\r\n        { [classes.customPadding]: pL || pR || pT || pB }\r\n      )}\r\n    >\r\n      {isComponent ? (\r\n        props.children\r\n      ) : (\r\n        <Typography variant='body1' className={classes.bodyCellText}>\r\n          {props.children}\r\n        </Typography>\r\n      )}\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nexport default BodyCell;\r\n","import React, { FC, Fragment, useState } from 'react';\r\nimport { TableRow, makeStyles, Theme, Avatar, Typography, IconButton, CircularProgress, Menu, MenuItem, Checkbox, Button } from '@material-ui/core';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { Paper } from '@material-ui/core';\r\nimport { grey, green, red } from '@material-ui/core/colors';\r\nimport BodyCell from 'components/BodyCell';\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\ninterface Props {\r\n  isLoadingData: boolean;\r\n  user: UserDetailsModel;\r\n  setOpenSnackbar: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setSnackbarVarient: React.Dispatch<React.SetStateAction<'success' | 'error'>>;\r\n  onEditUser: React.MouseEventHandler;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tableRow: {\r\n    height: 64\r\n  },\r\n  tableCellInner: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    display: 'inline-flex',\r\n    fontSize: '14px',\r\n    fontWeight: 500,\r\n    height: '36px',\r\n    width: '36px'\r\n  },\r\n  menuAvatar: {\r\n    backgroundColor: '#ffffff',\r\n    display: 'inline-flex',\r\n    fontSize: '14px',\r\n    fontWeight: 500,\r\n    height: '36px',\r\n    width: '36px',\r\n    color: '#707070'\r\n  },\r\n  menuList: {\r\n    minHeight: 30\r\n  },\r\n  nameTextCell: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  otherTextCell: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  secondText: {\r\n    color: grey[500]\r\n  },\r\n  circle: {\r\n    height: theme.spacing(3),\r\n    width: theme.spacing(3),\r\n    borderRadius: '50%',\r\n    display: 'inline-block',\r\n    backgroundColor: green[500],\r\n    marginRight: theme.spacing(1),\r\n    content: \"''\"\r\n  },\r\n  redCircle: {\r\n    backgroundColor: red[500]\r\n  },\r\n  actionCell: {\r\n    '& > :nth-child(n+2)': {\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n  },\r\n  wrapper: {\r\n    position: 'relative'\r\n  },\r\n\r\n  newIcon: {\r\n    color: green[500]\r\n  }\r\n}));\r\n\r\nconst BodyRow: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { isLoadingData, user, onEditUser } = props;\r\n\r\n  const { id, userName, fullName, email, contact, level, new: isNew } = user;\r\n\r\n  return (\r\n    <TableRow className={classes.tableRow}>\r\n      <BodyCell cellWidth='10%' pR='5px'>\r\n        {isLoadingData ? <Skeleton width={100} height={25} /> : id}\r\n      </BodyCell>\r\n\r\n      <BodyCell cellWidth='20%' pR='5px'>\r\n        {isLoadingData ? <Skeleton width={100} height={25} /> : userName}\r\n      </BodyCell>\r\n      <BodyCell cellWidth='15%' pR='5px'>\r\n        {isLoadingData ? <Skeleton width={100} height={25} /> : fullName}\r\n      </BodyCell>\r\n      <BodyCell cellWidth='20%' pR='5px'>\r\n        {isLoadingData ? <Skeleton width={100} height={25} /> : email}\r\n      </BodyCell>\r\n      <BodyCell cellWidth='20%' pR='5px'>\r\n        {isLoadingData ? <Skeleton width={100} height={25} /> : contact}\r\n      </BodyCell>\r\n      <BodyCell cellWidth='10%' pR='5px'>\r\n        {isLoadingData ? <Skeleton width={100} height={25} /> : level}\r\n      </BodyCell>\r\n      <BodyCell cellWidth='5%' isComponent={true}>\r\n        {isLoadingData ? null : (\r\n          <Fragment>\r\n            <Button variant='text' size='small' color='secondary' onClick={onEditUser}>\r\n              Edit\r\n            </Button>\r\n          </Fragment>\r\n        )}\r\n      </BodyCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default BodyRow;\r\n","import React, { FC } from 'react';\r\nimport { TableCell, Typography, Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props {\r\n  pL?: string;\r\n  pR?: string;\r\n  pT?: string;\r\n  pB?: string;\r\n  verticalAlign?: 'top' | 'middle' | 'bottom';\r\n  isCheckBox?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  headerCellText: {\r\n    fontWeight: 500,\r\n    color: theme.palette.grey.A200\r\n  },\r\n  cellStyle: (props: Props) => ({\r\n    paddingLeft: props.pL === '' || props.pL === null ? theme.spacing(0) : props.pL,\r\n    paddingRight: props.pR === '' || props.pR === null ? theme.spacing(0) : props.pR,\r\n    paddingTop: props.pT === '' || props.pT === null ? theme.spacing(0) : props.pT,\r\n    paddingBottom: props.pB === '' || props.pB === null ? theme.spacing(0) : props.pB,\r\n    verticalAlign: props.verticalAlign === undefined ? 'middle' : props.verticalAlign\r\n  })\r\n}));\r\n\r\nconst HeaderCell: FC<Props> = props => {\r\n  const { pL, pR, pT, pB, isCheckBox } = props;\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <TableCell align='left' className={clsx({ [classes.cellStyle]: pL || pR || pT || pB })}>\r\n      {isCheckBox ? (\r\n        props.children\r\n      ) : (\r\n        <Typography variant='overline' className={classes.headerCellText}>\r\n          {props.children}\r\n        </Typography>\r\n      )}\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nexport default HeaderCell;\r\n","import React, { FC } from 'react';\r\nimport { TableRow, Checkbox } from '@material-ui/core';\r\nimport HeaderCell from './HeaderCell';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxOutlinedUncompletedIcon from '@material-ui/icons/IndeterminateCheckBox';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\ninterface Header {\r\n  label: string;\r\n  pT?: string;\r\n  pR?: string;\r\n  pB?: string;\r\n  pL?: string;\r\n  verticalAlign?: 'top' | 'middle' | 'bottom';\r\n  isCheckBox?: boolean;\r\n  checked?: number[];\r\n  rowsPerPage?: number;\r\n  handleCheckAll?: () => void;\r\n}\r\n\r\ninterface Props {\r\n  headers: Header[];\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  tableRow: {\r\n    height: 64\r\n  },\r\n  checkBox: {\r\n    '&&:hover': {\r\n      backgroundColor: 'transparent'\r\n    }\r\n  },\r\n  checkBoxSize: {\r\n    fontSize: '16px'\r\n  }\r\n}));\r\n\r\nconst HeaderRow: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { headers } = props;\r\n\r\n  const renderContent = () => {\r\n    return headers.map(header => {\r\n      const countChecked = header.checked && header.checked.length;\r\n      const totalShouldBeChecked = header.rowsPerPage && header.rowsPerPage;\r\n      const renderCheckBoxIcon = () => {\r\n        if (countChecked !== 0) {\r\n          if (countChecked !== totalShouldBeChecked) {\r\n            return <CheckBoxOutlinedUncompletedIcon className={classes.checkBoxSize} />;\r\n          } else {\r\n            return <CheckBoxIcon className={classes.checkBoxSize} />;\r\n          }\r\n        }\r\n      };\r\n      return (\r\n        <HeaderCell\r\n          key={header.label}\r\n          pL={header.pL}\r\n          pR={header.pR}\r\n          pT={header.pT}\r\n          pB={header.pB}\r\n          verticalAlign={header.verticalAlign}\r\n          isCheckBox={header.isCheckBox}\r\n        >\r\n          {header.isCheckBox ? (\r\n            <Checkbox\r\n              key={header.label}\r\n              icon={<CheckBoxOutlineBlankIcon className={classes.checkBoxSize} />}\r\n              checkedIcon={renderCheckBoxIcon()}\r\n              edge='start'\r\n              color='secondary'\r\n              className={classes.checkBox}\r\n              checked={countChecked !== 0 ? true : false}\r\n              tabIndex={-1}\r\n              disableRipple\r\n              onChange={header.handleCheckAll}\r\n            />\r\n          ) : (\r\n            header.label\r\n          )}\r\n        </HeaderCell>\r\n      );\r\n    });\r\n  };\r\n  return <TableRow className={classes.tableRow}>{renderContent()}</TableRow>;\r\n};\r\n\r\nexport default HeaderRow;\r\n","import React, { FC, Fragment, useState, useEffect, useContext, useCallback } from 'react';\r\nimport { CancelTokenSource } from 'axios';\r\nimport { Theme, makeStyles, Table, TableBody, TableHead } from '@material-ui/core';\r\nimport BodyRow from './components/BodyRow';\r\nimport HeaderRow from 'components/HeaderRow';\r\n\r\ninterface Props {\r\n  isLoadingData: boolean;\r\n  users: UserDetailsModel[];\r\n  handleOpenEditUser: (userIndex: number) => React.MouseEventHandler;\r\n  handleCancelEditUser: () => void;\r\n  setOpenSnackbar: React.Dispatch<React.SetStateAction<boolean>>;\r\n  updateIndividualUser: (userIndex: number) => (updatedUserProperties: Partial<UserDetailsModel>) => void;\r\n  setSnackbarVarient: React.Dispatch<React.SetStateAction<'success' | 'error'>>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tableWrapper: {\r\n    overflowX: 'auto'\r\n  },\r\n  headerPageTitleContainer: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingLeft: theme.spacing(0)\r\n  }\r\n}));\r\n\r\nconst UserTable: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  let cancelTokenSource: CancelTokenSource;\r\n\r\n  const { isLoadingData, users, setOpenSnackbar, setSnackbarVarient, handleOpenEditUser } = props;\r\n\r\n  const dummyUser: UserDetailsModel = {\r\n    id: 0,\r\n    userName: '',\r\n    fullName: '',\r\n    contact: '',\r\n    email: '',\r\n    level: ''\r\n  };\r\n\r\n  const [showSkeleton, setShowSkeleton] = useState<boolean>(false);\r\n  useEffect(() => {\r\n    let timeout: NodeJS.Timeout;\r\n\r\n    if (isLoadingData) {\r\n      timeout = setTimeout(() => {\r\n        setShowSkeleton(true);\r\n      }, 500);\r\n    }\r\n\r\n    setShowSkeleton(false);\r\n\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [isLoadingData]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.tableWrapper}>\r\n        <Table>\r\n          <TableHead>\r\n            <HeaderRow\r\n              headers={[\r\n                { label: 'ID', pL: '25', pR: '25px', verticalAlign: 'top' },\r\n                { label: 'USERNAME', pL: '25px', pR: '25px', verticalAlign: 'top' },\r\n                { label: 'NAMALENGKAP', pL: '25px', pR: '25px', verticalAlign: 'top' },\r\n                { label: 'EMAIL', pL: '25px', pR: '25px', verticalAlign: 'top' },\r\n                { label: 'NO.HANDPHONE', pL: '25px', pR: '25px', verticalAlign: 'top' },\r\n                { label: 'LEVEL', pL: '25px', pR: '25px', verticalAlign: 'top' },\r\n                { label: '', pL: '25px', pR: '25px', verticalAlign: 'top' }\r\n              ]}\r\n            />\r\n          </TableHead>\r\n          <TableBody>\r\n            {showSkeleton\r\n              ? [1, 2, 3, 4, 5, 6].map(index => (\r\n                  <BodyRow\r\n                    key={index}\r\n                    user={dummyUser}\r\n                    setOpenSnackbar={setOpenSnackbar}\r\n                    setSnackbarVarient={setSnackbarVarient}\r\n                    isLoadingData={showSkeleton}\r\n                    onEditUser={handleOpenEditUser(index)}\r\n                  />\r\n                ))\r\n              : users.map((user, index) => (\r\n                  <BodyRow\r\n                    key={user.id}\r\n                    user={user}\r\n                    setOpenSnackbar={setOpenSnackbar}\r\n                    setSnackbarVarient={setSnackbarVarient}\r\n                    isLoadingData={showSkeleton}\r\n                    onEditUser={handleOpenEditUser(index)}\r\n                  />\r\n                ))}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserTable;\r\n","export const isValidEmail = (email: string): boolean => {\r\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  };\r\n\r\n  export const ucWords = (text: string): string => text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();","import React from 'react';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Theme,\r\n  withStyles,\r\n  FormControl,\r\n  FormLabel,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  MenuItem\r\n} from '@material-ui/core';\r\nimport { orange } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\ninterface Props {\r\n  okLabel: 'Simpan';\r\n\r\n  email: string;\r\n  userName: string;\r\n  fullName: string;\r\n  contact: string;\r\n  selectedlevelId: number;\r\n\r\n  setEmail: React.Dispatch<React.SetStateAction<string>>;\r\n  setUserName: React.Dispatch<React.SetStateAction<string>>;\r\n  setFullName: React.Dispatch<React.SetStateAction<string>>;\r\n  setContact: React.Dispatch<React.SetStateAction<string>>;\r\n  setSelectedlevelId: React.Dispatch<React.SetStateAction<number>>;\r\n\r\n  emailError: string;\r\n  userNameError: string;\r\n  fullNameError: string;\r\n  contactError: string;\r\n  levelIdError: string;\r\n\r\n  levelUser: LevelAccessUserDetailsModel[];\r\n  isSubmitting: boolean;\r\n  onSubmit: React.FormEventHandler;\r\n  onCancel: React.MouseEventHandler;\r\n}\r\n\r\nconst AddButton = withStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(orange[500]),\r\n    backgroundColor: '#53A0BE',\r\n    '&:hover': {\r\n      backgroundColor: orange[700]\r\n    }\r\n  }\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  controlDiv: {\r\n    '& > :nth-child(n+2)': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  },\r\n  cancelButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  addButton: {\r\n    color: '#FFFFFF'\r\n  }\r\n}));\r\n\r\nconst CreateUserForm: React.FC<Props> = props => {\r\n  const classes = useStyles();\r\n\r\n  const { email, setEmail, emailError } = props;\r\n  const { userName, setUserName, userNameError } = props;\r\n  const { fullName, setFullName, fullNameError } = props;\r\n  const { contact, setContact, contactError } = props;\r\n  const { selectedlevelId, setSelectedlevelId, levelIdError } = props;\r\n  const { isSubmitting, onSubmit, onCancel, okLabel, levelUser } = props;\r\n\r\n  const handleChange = () => {};\r\n  return (\r\n    <form noValidate onSubmit={onSubmit}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='userName'\r\n            label='userName'\r\n            error={userNameError !== ''}\r\n            helperText={userNameError}\r\n            value={userName}\r\n            onChange={event => setUserName(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='fullName'\r\n            label='fullName'\r\n            error={fullNameError !== ''}\r\n            helperText={fullNameError}\r\n            value={fullName}\r\n            onChange={event => setFullName(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='email'\r\n            label='Email'\r\n            error={emailError !== ''}\r\n            helperText={emailError}\r\n            value={email}\r\n            onChange={event => setEmail(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='contact'\r\n            label='Contact '\r\n            error={contactError !== ''}\r\n            helperText={contactError}\r\n            value={contact}\r\n            onChange={event => setContact(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            select\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='level'\r\n            label='Level'\r\n            error={levelIdError !== ''}\r\n            helperText={levelIdError}\r\n            value={selectedlevelId}\r\n            onChange={event => setSelectedlevelId(+event.target.value)}\r\n            autoComplete='off'\r\n          >\r\n            {levelUser.map(levelUser => (\r\n              <MenuItem key={levelUser.id} value={levelUser.id}>\r\n                {levelUser.level}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n            <FormControl component='fieldset'>\r\n              <FormGroup>\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Mitra Page' />} label='Mitra Page' />\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Product Page' />} label='Product Page' />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n            <FormControl component='fieldset'>\r\n              <FormGroup>\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Data Stok' />} label='Data Stok' />\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Order Page' />} label='Order Page' />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n            <FormControl component='fieldset'>\r\n              <FormGroup>\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='invoice Page' />} label='invoice Page' />\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Commission Page' />} label='Commission Page' />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container item justify='flex-end' xs={12} sm={12} md={12} lg={12} xl={12} className={classes.controlDiv}>\r\n          <Button variant='contained' className={classes.cancelButton} onClick={onCancel} disabled={isSubmitting}>\r\n            Cancel\r\n          </Button>\r\n          <AddButton type='submit' variant='contained' color='primary' className={classes.addButton} disabled={isSubmitting}>\r\n            {okLabel}\r\n          </AddButton>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateUserForm;\r\n","import React, { useState } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { IconButton, Theme, makeStyles, Typography, Grid } from '@material-ui/core';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { isValidEmail } from '../../../../utils';\r\nimport { USER_BASE_URL } from '../../../../constants/url';\r\nimport CreateUserForm from './components/CreateUserForm';\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  levelUser: LevelAccessUserDetailsModel[];\r\n  addNewUser(user: UserDetailsModel): void;\r\n  handleCancel(): void;\r\n  setOpenSnackbar: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setSnackbarVarient: React.Dispatch<React.SetStateAction<'success' | 'error'>>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(4),\r\n    outline: 'none',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    borderRadius: 4\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n}));\r\n\r\nconst CreateUserModal: React.FC<Props> = props => {\r\n  const classes = useStyles();\r\n  let cancelTokenSource: CancelTokenSource;\r\n\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n\r\n  const [email, setEmail] = useState<string>('');\r\n  const [userName, setUserName] = useState<string>('');\r\n  const [fullName, setFullName] = useState<string>('');\r\n  const [contact, setContact] = useState<string>('');\r\n  const [selectedLevelId, setSelectedLevelId] = useState<number>(0);\r\n\r\n  const [emailError, setEmailError] = useState<string>('');\r\n  const [userNameError, setUserNameError] = useState<string>('');\r\n  const [fullNameError, setFullNameError] = useState<string>('');\r\n  const [contactError, setContactError] = useState<string>('');\r\n  const [levelIdError, setLevelIdError] = useState<string>('');\r\n\r\n  const { open, levelUser, addNewUser, handleCancel, setOpenSnackbar, setSnackbarVarient } = props;\r\n\r\n  const handleClose = () => {\r\n    handleCancel();\r\n    clearFormValue();\r\n    clearFormErrors();\r\n  };\r\n\r\n  const clearFormValue = () => {\r\n    setEmail('');\r\n    setUserName('');\r\n    setFullName('');\r\n    setContact('');\r\n    setSelectedLevelId(0);\r\n  };\r\n\r\n  const clearFormErrors = () => {\r\n    setEmailError('');\r\n    setUserNameError('');\r\n    setContactError('');\r\n    setLevelIdError('');\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let ret = true;\r\n    clearFormErrors();\r\n\r\n    if (!email || !email.trim()) {\r\n      setEmailError('Please enter email');\r\n      ret = false;\r\n    } else if (!isValidEmail(email)) {\r\n      setEmailError('Please enter an valid email');\r\n      ret = false;\r\n    }\r\n\r\n    if (!userName || !userName.trim()) {\r\n      setUserNameError('Please enter display name');\r\n      ret = false;\r\n    }\r\n\r\n    if (!fullName || !fullName.trim()) {\r\n      setFullNameError('Please enter Fullname');\r\n      ret = false;\r\n    }\r\n\r\n    if (!contact || !contact.trim()) {\r\n      setContactError('Please enter contact number');\r\n      ret = false;\r\n    }\r\n\r\n    // if (!selectedLevelId) {\r\n    //   setLevelIdError('Please select Level');\r\n    //   ret = false;\r\n    // }\r\n\r\n    return ret;\r\n  };\r\n\r\n  const handleOnSubmit: React.FormEventHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      cancelTokenSource = axios.CancelToken.source();\r\n      const response = await axios.post(\r\n        `${USER_BASE_URL}`,\r\n        {\r\n          displayName: userName,\r\n          email,\r\n          contact,\r\n          fullName,\r\n          levelId: selectedLevelId\r\n        },\r\n        { cancelToken: cancelTokenSource.token }\r\n      );\r\n      addNewUser(response.data);\r\n      setOpenSnackbar(true);\r\n      setSnackbarVarient('success');\r\n      handleClose();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Modal aria-labelledby='modal-title' open={open} disableBackdropClick={true}>\r\n      <Grid container item xs={8} sm={8} md={8} lg={5} xl={5} spacing={3} direction='column' className={classes.paper}>\r\n        <Typography variant='h4' id='modal-title'>\r\n          Tambah Data User\r\n        </Typography>\r\n        <IconButton size='small' className={classes.closeButton} onClick={handleClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <CreateUserForm\r\n          okLabel='Simpan'\r\n          email={email}\r\n          setEmail={setEmail}\r\n          emailError={emailError}\r\n          userName={userName}\r\n          setUserName={setUserName}\r\n          userNameError={userNameError}\r\n          fullName={fullName}\r\n          setFullName={setFullName}\r\n          fullNameError={fullNameError}\r\n          contact={contact}\r\n          setContact={setContact}\r\n          contactError={contactError}\r\n          selectedlevelId={selectedLevelId}\r\n          setSelectedlevelId={setSelectedLevelId}\r\n          levelIdError={levelIdError}\r\n          isSubmitting={isLoading}\r\n          onSubmit={handleOnSubmit}\r\n          onCancel={handleClose}\r\n          levelUser={levelUser}\r\n        />\r\n      </Grid>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateUserModal;\r\n","import React from 'react';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Button,\r\n  Theme,\r\n  withStyles,\r\n  FormControl,\r\n  FormLabel,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport { orange } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\ninterface Props {\r\n  okLabel: 'Add' | 'Edit';\r\n\r\n  email: string;\r\n  userName: string;\r\n  fullName: string;\r\n  contact: string;\r\n  selectedlevelId: number;\r\n\r\n  setEmail: React.Dispatch<React.SetStateAction<string>>;\r\n  setUserName: React.Dispatch<React.SetStateAction<string>>;\r\n  setFullName: React.Dispatch<React.SetStateAction<string>>;\r\n  setContact: React.Dispatch<React.SetStateAction<string>>;\r\n  setSelectedlevelId: React.Dispatch<React.SetStateAction<number>>;\r\n\r\n  emailError: string;\r\n  userNameError: string;\r\n  fullNameError: string;\r\n  contactError: string;\r\n  levelIdError: string;\r\n\r\n  levelUser: LevelAccessUserDetailsModel[];\r\n  isSubmitting: boolean;\r\n  onSubmit: React.FormEventHandler;\r\n  onCancel: React.MouseEventHandler;\r\n}\r\n\r\nconst AddButton = withStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(orange[500]),\r\n    backgroundColor: '#EF965A',\r\n    '&:hover': {\r\n      backgroundColor: orange[700]\r\n    }\r\n  }\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  controlDiv: {\r\n    '& > :nth-child(n+2)': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  },\r\n  cancelButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  addButton: {\r\n    color: '#FFFFFF'\r\n  }\r\n}));\r\n\r\nconst EditUserForm: React.FC<Props> = props => {\r\n  const classes = useStyles();\r\n\r\n  const { email, setEmail, emailError } = props;\r\n  const { userName, setUserName, userNameError } = props;\r\n  const { fullName, setFullName, fullNameError } = props;\r\n  const { contact, setContact, contactError } = props;\r\n  const { selectedlevelId, setSelectedlevelId, levelIdError } = props;\r\n  const { isSubmitting, onSubmit, onCancel, okLabel, levelUser } = props;\r\n  const handleChange = () => {};\r\n\r\n  return (\r\n    <form noValidate onSubmit={onSubmit}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='userName'\r\n            label='userName'\r\n            error={userNameError !== ''}\r\n            helperText={userNameError}\r\n            value={userName}\r\n            onChange={event => setUserName(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='fullName'\r\n            label='fullName'\r\n            error={fullNameError !== ''}\r\n            helperText={fullNameError}\r\n            value={fullName}\r\n            onChange={event => setFullName(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='email'\r\n            label='Email'\r\n            error={emailError !== ''}\r\n            helperText={emailError}\r\n            value={email}\r\n            onChange={event => setEmail(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='contact'\r\n            label='Contact '\r\n            error={contactError !== ''}\r\n            helperText={contactError}\r\n            value={contact}\r\n            onChange={event => setContact(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            select\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='level'\r\n            label='Level'\r\n            error={levelIdError !== ''}\r\n            helperText={levelIdError}\r\n            value={selectedlevelId}\r\n            onChange={event => setSelectedlevelId(+event.target.value)}\r\n            autoComplete='off'\r\n          >\r\n            {levelUser.map(levelUser => (\r\n              <MenuItem key={levelUser.id} value={levelUser.id}>\r\n                {levelUser.level}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n            <FormControl component='fieldset'>\r\n              <FormGroup>\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Mitra Page' />} label='Mitra Page' />\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Product Page' />} label='Product Page' />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n            <FormControl component='fieldset'>\r\n              <FormGroup>\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Data Stok' />} label='Data Stok' />\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Order Page' />} label='Order Page' />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n            <FormControl component='fieldset'>\r\n              <FormGroup>\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='invoice Page' />} label='invoice Page' />\r\n                <FormControlLabel control={<Checkbox onChange={handleChange} color='primary' name='Commission Page' />} label='Commission Page' />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container item justify='flex-end' xs={12} sm={12} md={12} lg={12} xl={12} className={classes.controlDiv}>\r\n          <Button variant='contained' className={classes.cancelButton} onClick={onCancel} disabled={isSubmitting}>\r\n            Cancel\r\n          </Button>\r\n          <AddButton type='submit' variant='contained' color='primary' className={classes.addButton} disabled={isSubmitting}>\r\n            {okLabel}\r\n          </AddButton>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditUserForm;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { IconButton, Theme, Modal, Grid, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport EditUserForm from './components/EditUserForm';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { GET_EDIT_USER_URL } from '../../../../constants/url';\r\nimport { isValidEmail } from 'utils';\r\ninterface Props {\r\n  user?: UserDetailsModel;\r\n  open: boolean;\r\n  levelUser: LevelAccessUserDetailsModel[];\r\n  handleCancel(): void;\r\n  updateIndividualUser: (updatedUserProperties: Partial<UserDetailsModel>) => void;\r\n  setOpenSnackbar: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setSnackbarVarient: React.Dispatch<React.SetStateAction<'success' | 'error'>>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(4),\r\n    outline: 'none',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    borderRadius: 4\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n}));\r\n\r\nconst EditUserModal: React.FC<Props> = props => {\r\n  const classes = useStyles();\r\n  let cancelTokenSource: CancelTokenSource;\r\n\r\n  const { levelUser, user, open, handleCancel, setOpenSnackbar, setSnackbarVarient, updateIndividualUser } = props;\r\n\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n\r\n  const [email, setEmail] = useState<string>('');\r\n  const [userName, setUserName] = useState<string>('');\r\n  const [fullName, setFullName] = useState<string>('');\r\n  const [contact, setContact] = useState<string>('');\r\n  const [selectedLevelId, setSelectedLevelId] = useState<number>(0);\r\n\r\n  const [emailError, setEmailError] = useState<string>('');\r\n  const [userNameError, setUserNameError] = useState<string>('');\r\n  const [fullNameError, setFullNameError] = useState<string>('');\r\n  const [contactError, setContactError] = useState<string>('');\r\n  const [levelIdError, setLevelIdError] = useState<string>('');\r\n\r\n  const resetFormValues = useCallback(() => {\r\n    if (!user) {\r\n      return;\r\n    }\r\n\r\n    const { email, userName, fullName, level, contact } = user;\r\n\r\n    setEmail(email);\r\n    setUserName(userName);\r\n    setFullName(fullName);\r\n    setContact(contact);\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    resetFormValues();\r\n    clearFormErrors();\r\n  }, [resetFormValues]);\r\n\r\n  const clearFormErrors = () => {\r\n    setEmailError('');\r\n    setUserNameError('');\r\n    setContactError('');\r\n    setLevelIdError('');\r\n  };\r\n\r\n  // This is to ensure that the form vale and erors are reset/cleared when user canceled the editing\r\n  const handleOnClose = () => {\r\n    resetFormValues();\r\n    clearFormErrors();\r\n    handleCancel();\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let ret = true;\r\n    clearFormErrors();\r\n\r\n    if (!email || !email.trim()) {\r\n      setEmailError('Please enter email');\r\n      ret = false;\r\n    } else if (!isValidEmail(email)) {\r\n      setEmailError('Please enter an valid email');\r\n      ret = false;\r\n    }\r\n\r\n    if (!userName || !userName.trim()) {\r\n      setUserNameError('Please enter userName');\r\n      ret = false;\r\n    }\r\n\r\n    if (!fullName || !fullName.trim()) {\r\n      setFullNameError('Please enter fullName');\r\n      ret = false;\r\n    }\r\n\r\n    if (!contact || !contact.trim()) {\r\n      setContactError('Please enter contact number');\r\n      ret = false;\r\n    }\r\n\r\n    if (!selectedLevelId) {\r\n      setLevelIdError('Please select level');\r\n      ret = false;\r\n    }\r\n\r\n    return ret;\r\n  };\r\n\r\n  const handleOnSubmit: React.FormEventHandler = async event => {\r\n    event.preventDefault();\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n    setLoading(true);\r\n\r\n    try {\r\n      cancelTokenSource = axios.CancelToken.source();\r\n      const response = await axios.put(\r\n        `${GET_EDIT_USER_URL(user!.id)}`,\r\n        {\r\n          displayName: userName,\r\n          email,\r\n          contact,\r\n          fullName,\r\n          levelId: selectedLevelId\r\n        },\r\n        { cancelToken: cancelTokenSource.token }\r\n      );\r\n      updateIndividualUser(response.data);\r\n      setOpenSnackbar(true);\r\n      setSnackbarVarient('success');\r\n      handleCancel();\r\n    } catch (err) {\r\n      console.log(err);\r\n      const { errorCode } = err.data;\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Modal aria-labelledby='modal-title' open={open} disableBackdropClick={true}>\r\n      <Grid container item xs={8} sm={8} md={8} lg={5} xl={5} spacing={3} direction='column' className={classes.paper}>\r\n        <Typography variant='h4' id='modal-title'>\r\n          Edit User\r\n        </Typography>\r\n        <IconButton size='small' className={classes.closeButton} onClick={handleOnClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <EditUserForm\r\n          okLabel='Edit'\r\n          email={email}\r\n          setEmail={setEmail}\r\n          emailError={emailError}\r\n          userName={userName}\r\n          setUserName={setUserName}\r\n          userNameError={userNameError}\r\n          fullName={fullName}\r\n          setFullName={setFullName}\r\n          fullNameError={fullNameError}\r\n          contact={contact}\r\n          setContact={setContact}\r\n          contactError={contactError}\r\n          selectedlevelId={selectedLevelId}\r\n          setSelectedlevelId={setSelectedLevelId}\r\n          levelIdError={levelIdError}\r\n          isSubmitting={isLoading}\r\n          onSubmit={handleOnSubmit}\r\n          onCancel={handleOnClose}\r\n          levelUser={levelUser}\r\n        />\r\n      </Grid>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditUserModal;\r\n","import React, { FC, useState } from 'react';\r\nimport { PopperPlacementType } from '@material-ui/core/Popper';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { IconButton, InputBase, Theme, Tooltip } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { fade } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props {\r\n  isAppbar?: boolean;\r\n  withTransition?: boolean;\r\n  withBorder?: boolean;\r\n  width?: number;\r\n  placeHolder?: string;\r\n  iconColor?: string;\r\n  tableSearchValue?: string;\r\n  setTableSearchValue?: React.Dispatch<React.SetStateAction<string>>;\r\n  globalSearchValue?: string;\r\n  setGlobalSearchValue?: React.Dispatch<React.SetStateAction<string>>;\r\n  openPopper?: boolean;\r\n  setOpenPopper?: React.Dispatch<React.SetStateAction<boolean>>;\r\n  isLoadingData?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.5),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 1)\r\n    },\r\n    marginRight: theme.spacing(1),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 'auto'\r\n    }\r\n  },\r\n  appbarSearch: {\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25)\r\n    }\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  searchIconCustomColor: (props: Props) => ({\r\n    color: props.iconColor\r\n  }),\r\n  clearIcon: {\r\n    color: '#ffffff'\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit'\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    width: '100%',\r\n    fontSize: '13px',\r\n    '&::placeholder': {\r\n      fontSize: '13px'\r\n    }\r\n  },\r\n  widthTransition: {\r\n    transition: theme.transitions.create('width'),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 100,\r\n      '&:focus': {\r\n        width: 120\r\n      }\r\n    }\r\n  },\r\n  bordered: {\r\n    border: `1px solid ${theme.border.primary}}`\r\n  },\r\n  customWidth: (props: Props) => ({\r\n    width: props.width\r\n  })\r\n}));\r\n\r\nconst SearchInput: FC<Props> = props => {\r\n  const classes = useStyles(props);\r\n\r\n  // eslint-disable-next-line\r\n  const [anchorEl, setAnchorEl] = useState<HTMLInputElement | null>(null);\r\n  // eslint-disable-next-line\r\n  const [placement, setPlacement] = useState<PopperPlacementType>();\r\n\r\n  const {\r\n    isAppbar = false,\r\n    withTransition = true,\r\n    withBorder = false,\r\n    width,\r\n    placeHolder = 'Search...',\r\n    iconColor,\r\n    tableSearchValue,\r\n    globalSearchValue,\r\n    // eslint-disable-next-line\r\n    openPopper,\r\n    setTableSearchValue,\r\n    setGlobalSearchValue,\r\n    // eslint-disable-next-line\r\n    setOpenPopper,\r\n    // eslint-disable-next-line\r\n    isLoadingData \r\n  } = props;\r\n\r\n  // This method use for global search client on AppHeader\r\n  const handleTextGlobalSearchChange = (event: any) => {\r\n    setGlobalSearchValue && setGlobalSearchValue(event.target.value);\r\n    setAnchorEl(event.currentTarget);\r\n    setPlacement('left-start');\r\n  };\r\n\r\n  // This method use for search on table\r\n  const handleTextTableSearchChange = (event: any) => {\r\n    setTableSearchValue && setTableSearchValue(event.target.value);\r\n  };\r\n\r\n  // This method use for clear search\r\n  const handleClearSearch = () => {\r\n    setTableSearchValue && setTableSearchValue('');\r\n    setGlobalSearchValue && setGlobalSearchValue('');\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.search, { [classes.bordered]: withBorder, [classes.appbarSearch]: isAppbar })}>\r\n      <div className={clsx(classes.searchIcon, { [classes.searchIconCustomColor]: iconColor })}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        autoComplete='off'\r\n        placeholder={placeHolder}\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: clsx(classes.inputInput, { [classes.widthTransition]: withTransition }, { [classes.customWidth]: width })\r\n        }}\r\n        inputProps={{ 'aria-label': 'Search' }}\r\n        value={isAppbar ? globalSearchValue : tableSearchValue}\r\n        onChange={event => (isAppbar ? handleTextGlobalSearchChange(event) : handleTextTableSearchChange(event))}\r\n      />\r\n      {tableSearchValue === '' || globalSearchValue === '' ? (\r\n        ''\r\n      ) : (\r\n        <Tooltip title='Clear'>\r\n          <IconButton size='small' onClick={handleClearSearch}>\r\n            <ClearIcon className={clsx(classes.clearIcon, { [classes.searchIconCustomColor]: iconColor })} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React, { FC } from 'react';\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, Grid, makeStyles, Theme, Typography } from '@material-ui/core';\r\nimport SuccessIcon from '@material-ui/icons/CheckCircle';\r\nimport WarningIcon from '@material-ui/icons/Error';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ErrorIcon from '@material-ui/icons/Close';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { orange } from '@material-ui/core/colors';\r\nimport { red, blue } from '@material-ui/core/colors';\r\n\r\ninterface Props {\r\n  variant: string;\r\n  titleMessage?: string;\r\n  message: string;\r\n  open: boolean;\r\n  handleClose(): void;\r\n  onConfirm?: React.MouseEventHandler<HTMLButtonElement>;\r\n  noCancelButton?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  successAvatarIcon: {\r\n    fontSize: 60,\r\n    color: green[500]\r\n  },\r\n  warnigAvatarIcon: {\r\n    fontSize: 60,\r\n    color: orange[500]\r\n  },\r\n  dangerAvatarIcon: {\r\n    width: 54,\r\n    height: 54,\r\n    color: '#f44336'\r\n  },\r\n  cancelButton: (props: Props) => ({\r\n    marginRight: theme.spacing(props.noCancelButton ? 0 : 3),\r\n    color: '#FFFF'\r\n  }),\r\n  okButton: {\r\n    backgroundColor: '#02A9EA',\r\n    '&:hover': {\r\n      backgroundColor: blue[700]\r\n    }\r\n  },\r\n  dialogActions: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  titleText: {\r\n    paddingBottom: 2\r\n  },\r\n  messageText: {\r\n    paddingBottom: theme.spacing(4)\r\n  },\r\n  iconGrid:{\r\n    marginTop: 4\r\n  }\r\n}));\r\n\r\nconst StandardConfirmationDialog: FC<Props> = props => {\r\n  const classes = useStyles(props);\r\n  const { variant, titleMessage, message, open, handleClose, onConfirm, noCancelButton } = props;\r\n\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        <Grid container justify='center' alignItems='center' className={classes.iconGrid}>\r\n          {variant === 'success' && <SuccessIcon className={classes.successAvatarIcon} />}\r\n          {variant === 'warning' && <WarningIcon className={classes.warnigAvatarIcon} />}\r\n          {variant === 'danger' && <DeleteOutlineIcon className={classes.dangerAvatarIcon} />}\r\n          {variant === 'error' && <ErrorIcon className={classes.dangerAvatarIcon} />}\r\n        </Grid>\r\n      </DialogTitle>\r\n      <DialogContent className={classes.titleText}>\r\n        <Typography variant='h4' component='p' align={'center'}>\r\n          {titleMessage}\r\n        </Typography>\r\n      </DialogContent>\r\n      <DialogContent className={classes.messageText}>\r\n        <Typography variant='h6' component='p' align={'center'}>\r\n          {message}\r\n        </Typography>\r\n      </DialogContent>\r\n      <DialogActions className={classes.dialogActions}>\r\n        <Grid container justify='center' alignItems='center'>\r\n          <Button disableElevation variant='contained' color={'default'} className={classes.cancelButton} onClick={handleClose}>\r\n            {noCancelButton ? 'Ok' : 'Cancel'}\r\n          </Button>\r\n          {!noCancelButton && (\r\n            <Button disableElevation variant='contained' className={classes.okButton} onClick={onConfirm}>\r\n              Konfirmasi\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default StandardConfirmationDialog;","export const WHITE = '#FFFFFF';\r\nexport const BLUE_PRIMARY = '#02A9EA';\r\nexport const BLUE_SECONDARY = '#0088BD';\r\nexport const BLACK = '#333333';\r\nexport const BLACK_2 = '#2E384D';\r\nexport const GREY = '#E0E0E0';\r\nexport const GRAY_3 = '#828282';\r\nexport const GREEN = '#00FF00';\r\nexport const BACKGROUND = '#F7F9FC';\r\nexport const GRADIENT_DRAWER_COLOR = 'linear-gradient(#0088BD 30%, #02A9EA 70%)';\r\nexport const ORANGE = '#F2994A';\r\nexport const RED = '#EB5757';\r\n","import React, { forwardRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { BACKGROUND} from 'constants/colors';\r\n\r\ntype Props = {\r\n  title: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root:{\r\n    background: BACKGROUND,\r\n    paddingTop: 15\r\n  }\r\n})\r\n\r\n\r\nconst Page = forwardRef<HTMLDivElement, Props>((props, ref) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div ref={ref} className={classes.root}>\r\n      <Helmet>\r\n        <title>{props.title}</title>\r\n      </Helmet>\r\n      {props.children}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport { withStyles, createStyles, Theme, Switch } from '@material-ui/core';\r\n\r\nconst AntSwitch = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 28,\r\n      height: 16,\r\n      padding: 0,\r\n      display: 'flex'\r\n    },\r\n    switchBase: {\r\n      padding: 2,\r\n      color: theme.palette.grey[500],\r\n      '&$checked': {\r\n        transform: 'translateX(12px)',\r\n        color: theme.palette.common.white,\r\n        '& + $track': {\r\n          opacity: 1,\r\n          backgroundColor: theme.palette.primary.main,\r\n          borderColor: theme.palette.primary.main\r\n        }\r\n      }\r\n    },\r\n    thumb: {\r\n      width: 12,\r\n      height: 12,\r\n      boxShadow: 'none'\r\n    },\r\n    track: {\r\n      border: `1px solid ${theme.palette.grey[500]}`,\r\n      borderRadius: 16 / 2,\r\n      opacity: 1,\r\n      backgroundColor: theme.palette.common.white\r\n    },\r\n    checked: {}\r\n  })\r\n)(Switch);\r\n\r\nexport default AntSwitch;\r\n","import React from 'react';\r\nimport { withStyles, createStyles, Theme, Switch, SwitchClassKey, SwitchProps } from '@material-ui/core';\r\n\r\ninterface Styles extends Partial<Record<SwitchClassKey, string>> {\r\n  focusVisible?: string;\r\n}\r\n\r\ninterface Props extends SwitchProps {\r\n  classes: Styles;\r\n}\r\n\r\nconst IOSSwitch = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 42,\r\n      height: 26,\r\n      padding: 0,\r\n      margin: theme.spacing(1)\r\n    },\r\n    switchBase: {\r\n      padding: 1,\r\n      '&$checked': {\r\n        transform: 'translateX(16px)',\r\n        color: theme.palette.common.white,\r\n        '& + $track': {\r\n          backgroundColor: theme.palette.secondary,\r\n          opacity: 1,\r\n          border: 'none'\r\n        }\r\n      },\r\n      '&$focusVisible $thumb': {\r\n        color: '#52d869',\r\n        border: '6px solid #fff'\r\n      }\r\n    },\r\n    thumb: {\r\n      width: 24,\r\n      height: 24\r\n    },\r\n    track: {\r\n      borderRadius: 26 / 2,\r\n      border: `1px solid ${theme.palette.grey[400]}`,\r\n      backgroundColor: theme.palette.grey[50],\r\n      opacity: 1,\r\n      transition: theme.transitions.create(['background-color', 'border'])\r\n    },\r\n    checked: {},\r\n    focusVisible: {}\r\n  })\r\n)(({ classes, ...props }: Props) => {\r\n  return (\r\n    <Switch\r\n      focusVisibleClassName={classes.focusVisible}\r\n      disableRipple\r\n      classes={{\r\n        root: classes.root,\r\n        switchBase: classes.switchBase,\r\n        thumb: classes.thumb,\r\n        track: classes.track,\r\n        checked: classes.checked\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nexport default IOSSwitch;\r\n","import { withStyles, createStyles, Theme, Paper } from '@material-ui/core';\r\n\r\nconst PaperCustom = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n        padding: '24px',\r\n        marginTop: '24px',\r\n        marginBottom: '24px',\r\n        boxShadow: '0px 5px 12px rgba(0, 0, 0, 0.08)',\r\n        width:'100%'\r\n    },\r\n  })\r\n)(Paper);\r\n\r\nexport default PaperCustom;\r\n\r\n","import React, { FC } from 'react';\r\nimport { Breadcrumbs, Typography, makeStyles } from '@material-ui/core';\r\nimport Link from '@material-ui/core/Link';\r\nimport useRouter from 'hooks/useRouter';\r\nimport { ucWords } from 'utils';\r\n\r\nconst useStyles = makeStyles({\r\n  active: {\r\n    fontWeight: 500,\r\n    fontSize: '16px',\r\n    lineHeight: '16px'\r\n  },\r\n  link: {\r\n    fontWeight: 400,\r\n    fontSize: '16px',\r\n    lineHeight: '32px'\r\n  }\r\n});\r\n\r\nconst Breadcrumb: FC = () => {\r\n  const classes = useStyles();\r\n  const { location, history } = useRouter();\r\n  const path = location.pathname.split('/').filter(x => x);\r\n\r\n  const handleClick = (path: string): React.MouseEventHandler => event => {\r\n    event.preventDefault();\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <Breadcrumbs aria-label='breadcrumb'>\r\n      <Link color='inherit' href='/' onClick={handleClick('/')}>\r\n        Beranda\r\n      </Link>\r\n      {path.map((value, index) =>\r\n        index === path.length - 1 ? (\r\n          <Typography className={classes.active}>{ucWords(value)}</Typography>\r\n        ) : (\r\n          <Link\r\n            color='inherit'\r\n            href={`/${path.slice(0, index + 1).join('/')}`}\r\n            onClick={handleClick(`/${path.slice(0, index + 1).join('/')}`)}\r\n            className={classes.link}\r\n          >\r\n            {ucWords(value)}\r\n          </Link>\r\n        )\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React, { FC, useState, useContext, useEffect, useCallback } from 'react';\r\nimport { green } from '@material-ui/core/colors';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport useRouter from 'hooks/useRouter';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport clsx from 'clsx';\r\nimport { Button, Container, Divider, Grid, makeStyles, Paper, Theme, Typography } from '@material-ui/core';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ActionSnackBar from 'components/ActionSnackBar';\r\nimport { USER_BASE_URL, ACCESS_USER_BASE_URL } from 'constants/url';\r\nimport UserTable from './components/UserTable';\r\nimport CreateUserModal from './components/CreateUserModal';\r\nimport EditUserModal from './components/EditUserModal';\r\nimport SearchInput from 'components/SearchInput';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport { Page } from 'components';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(2),\r\n    margin: 'auto'\r\n  },\r\n  text: {\r\n    fontWeight: 'bold',\r\n    fontSize: '30px',\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  textSpace: {\r\n    fontWeight: 'bold',\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  divider: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  container: {\r\n    '& > :nth-child(n+2)': {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  },\r\n  tableRoot: {\r\n    width: '100%',\r\n    overflowX: 'auto'\r\n  },\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  button: {\r\n    paddingTop: theme.spacing(4)\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  addButton: {\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  extendedIcon: {\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  addGrid: {\r\n    textAlign: 'end'\r\n  },\r\n  leftHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2)\r\n  },\r\n  rightHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    paddingRight: theme.spacing(1.5)\r\n  },\r\n  Button: {\r\n    width: '70%'\r\n  },\r\n  ButtonNew: {\r\n    width: '130%'\r\n  }\r\n}));\r\n\r\nconst UserPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { history } = useRouter();\r\n\r\n  const dummyUser: UserDetailsModel = {\r\n    id: 0,\r\n    userName: '',\r\n    fullName: '',\r\n    email: '',\r\n    contact: '',\r\n    level: ''\r\n  };\r\n\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n  const [snackbarVarient, setSnackbarVarient] = useState<'success' | 'error'>('success');\r\n  const [users, setUsers] = useState<UserDetailsModel[]>([dummyUser]);\r\n  const [query, setQuery] = useState<string>('');\r\n  const [queryString, setQueryString] = useState<string>();\r\n  const [isSearchUserError, setSearchUserError] = useState<boolean>(false);\r\n  const [messageSuccess, setMessageSuccess] = useState<string>('');\r\n  const [messageError, setMessageError] = useState<string>('');\r\n  const [openEditUser, setOpenEditUser] = useState<boolean>(false);\r\n  const [isSearchingUser, setSearchingUser] = useState<boolean>(false);\r\n  const [openCreateUserModal, setOpenCreateUserModal] = useState<boolean>(false);\r\n  const [currentEditingUserIndex, setCurrentEditingUserIndex] = useState<number>(0);\r\n  const [levelUser, setLevelUser] = useState<LevelAccessUserDetailsModel[]>([]);\r\n\r\n  useEffect(() => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n\r\n    const getAllLevelUser = async () => {\r\n      try {\r\n        const response = await axios.get(ACCESS_USER_BASE_URL, { cancelToken: cancelTokenSource.token });\r\n        setLevelUser(response.data.levelUser);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    getAllLevelUser();\r\n\r\n    return () => {\r\n      // Canceling the request if component is unmounted\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, []);\r\n\r\n  const performActionAndRevertPage = (action: React.Dispatch<React.SetStateAction<any>>, actionParam: any) => {\r\n    action(actionParam);\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  const addNewUser = (user: UserDetailsModel) => {\r\n    user.new = true;\r\n    users.unshift(user);\r\n    setUsers([...users]);\r\n  };\r\n\r\n  const handleCancelEditUser = () => {\r\n    setOpenEditUser(false);\r\n  };\r\n\r\n  const handleOpenEditUser = (userIndex: number): React.MouseEventHandler => () => {\r\n    setCurrentEditingUserIndex(userIndex);\r\n    setOpenEditUser(true);\r\n  };\r\n\r\n  const handleOpenCreateUser = () => {\r\n    setOpenCreateUserModal(true);\r\n  };\r\n\r\n  const handleCancelCreateUser = () => {\r\n    setOpenCreateUserModal(false);\r\n  };\r\n\r\n  const handleSearch = useCallback((searchQuery: string) => {\r\n    performActionAndRevertPage(setQueryString, searchQuery);\r\n  }, []);\r\n\r\n  // Search Client whenever rowsPerPage, currentPage, queryString, user, and filterby changes\r\n  const fetchData = useCallback(() => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n\r\n    const getQueryParams = () => {\r\n      const params = new URLSearchParams();\r\n      if (queryString) {\r\n        params.append('q', queryString);\r\n      }\r\n\r\n      return params.toString();\r\n    };\r\n\r\n    const searchUser = async () => {\r\n      setSearchingUser(true);\r\n      setSearchUserError(false);\r\n\r\n      try {\r\n        const url = `${USER_BASE_URL}?${getQueryParams()}`;\r\n        const { data } = await axios.get(url, { cancelToken: cancelTokenSource.token });\r\n        setUsers(data.data);\r\n              \r\n      } catch (err) {\r\n        setSearchUserError(true);\r\n      }\r\n\r\n      setSearchingUser(false);\r\n    };\r\n\r\n    searchUser();\r\n\r\n    return () => {\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, [queryString]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const debouncedSearchTerm = useDebounce(query, 500);\r\n  // Load User data to populate on search list\r\n  useEffect(() => {\r\n    if (debouncedSearchTerm.length >= 3) {\r\n      handleSearch(debouncedSearchTerm);\r\n    } else if (debouncedSearchTerm.length === 0) {\r\n      handleSearch(debouncedSearchTerm);\r\n    }\r\n  }, [debouncedSearchTerm, handleSearch]);\r\n\r\n  const onClickHandler: React.MouseEventHandler = event => {\r\n    event.preventDefault();\r\n\r\n    history.push('/access');\r\n  };\r\n  const updateIndividualUser = (userIndex: number) => {\r\n    return (updatedUserProperties: Partial<UserDetailsModel>) => {\r\n      setUsers(\r\n        users!.map((user, index) => {\r\n          if (index !== userIndex) {\r\n            return user;\r\n          }\r\n\r\n          return Object.assign({}, user, updatedUserProperties);\r\n        })\r\n      );\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Page title='User'>\r\n    <Container maxWidth='lg' className={clsx(classes.root, classes.container)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item sm={6}>\r\n          <Typography className={classes.text} variant='h3' >\r\n            Pengaturan\r\n          </Typography>\r\n          <Typography className={classes.textSpace} variant='h4' >\r\n            Awal {'>'} Pengguna\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Divider className={classes.divider} />\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\r\n            <Grid container direction='row' justify='flex-start' alignItems='center' className={classes.leftHeader}>\r\n              <SearchInput\r\n                withBorder\r\n                withTransition={false}\r\n                width={150}\r\n                placeHolder='Pencarian'\r\n                iconColor='#989898'\r\n                tableSearchValue={query}\r\n                setTableSearchValue={setQuery}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n            <Grid container direction='row' justify='flex-end' alignItems='center' className={classes.rightHeader}>\r\n              <Button className={classes.Button} color='secondary' size='medium' variant='outlined' onClick={onClickHandler}>\r\n                <LockOpenIcon className={classes.extendedIcon} />\r\n                Level Akses\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n            <Grid container direction='row' justify='flex-end' alignItems='center' className={classes.rightHeader}>\r\n              <Button\r\n                className={classes.ButtonNew}\r\n                color='secondary'\r\n                size='medium'\r\n                variant='contained'\r\n                onClick={() => {\r\n                  handleOpenCreateUser();\r\n                }}\r\n              >\r\n                <AddBoxIcon className={classes.extendedIcon} />\r\n                Tambah User Baru\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <UserTable\r\n          isLoadingData={isSearchingUser}\r\n          users={users}\r\n          handleOpenEditUser={handleOpenEditUser}\r\n          handleCancelEditUser={handleCancelEditUser}\r\n          setOpenSnackbar={setOpenSnackbar}\r\n          setSnackbarVarient={setSnackbarVarient}\r\n          updateIndividualUser={updateIndividualUser}\r\n        />\r\n        <CreateUserModal\r\n          open={openCreateUserModal}\r\n          handleCancel={handleCancelCreateUser}\r\n          addNewUser={addNewUser}\r\n          setOpenSnackbar={setOpenSnackbar}\r\n          setSnackbarVarient={setSnackbarVarient}\r\n          levelUser={levelUser}\r\n        />\r\n        <EditUserModal\r\n          open={openEditUser}\r\n          user={users[currentEditingUserIndex]}\r\n          handleCancel={handleCancelEditUser}\r\n          setOpenSnackbar={setOpenSnackbar}\r\n          setSnackbarVarient={setSnackbarVarient}\r\n          updateIndividualUser={updateIndividualUser(currentEditingUserIndex)}\r\n          levelUser={levelUser}\r\n        />\r\n      </Paper>\r\n      <ActionSnackBar\r\n        variant={snackbarVarient}\r\n        message={snackbarVarient === 'success' ? messageSuccess : messageError}\r\n        open={openSnackbar}\r\n        handleClose={handleCloseSnackbar}\r\n        Icon={snackbarVarient === 'success' ? CheckCircleIcon : ErrorIcon}\r\n      />\r\n    </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { FC, Fragment, useState } from 'react';\r\nimport {\r\n  TableRow,\r\n  makeStyles,\r\n  Theme,\r\n  Avatar,\r\n  Typography,\r\n  IconButton,\r\n  CircularProgress,\r\n  Menu,\r\n  MenuItem,\r\n  Checkbox,\r\n  Button,\r\n  Chip\r\n} from '@material-ui/core';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { grey, green, red } from '@material-ui/core/colors';\r\nimport BodyCell from 'components/BodyCell';\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\ninterface Props {\r\n  isLoadingData: boolean;\r\n  levelUser: LevelAccessUserDetailsModel;\r\n  onEditLevelAccess: React.MouseEventHandler;\r\n  setOpenSnackbar: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setSnackbarVarient: React.Dispatch<React.SetStateAction<'success' | 'error'>>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tableRow: {\r\n    height: 64\r\n  },\r\n  tableCellInner: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    display: 'inline-flex',\r\n    fontSize: '14px',\r\n    fontWeight: 500,\r\n    height: '36px',\r\n    width: '36px'\r\n  },\r\n  menuAvatar: {\r\n    backgroundColor: '#ffffff',\r\n    display: 'inline-flex',\r\n    fontSize: '14px',\r\n    fontWeight: 500,\r\n    height: '36px',\r\n    width: '36px',\r\n    color: '#707070'\r\n  },\r\n  menuList: {\r\n    minHeight: 30\r\n  },\r\n  chip: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  nameTextCell: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  otherTextCell: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  secondText: {\r\n    color: grey[500]\r\n  },\r\n  circle: {\r\n    height: theme.spacing(3),\r\n    width: theme.spacing(3),\r\n    borderRadius: '50%',\r\n    display: 'inline-block',\r\n    backgroundColor: green[500],\r\n    marginRight: theme.spacing(1),\r\n    content: \"''\"\r\n  },\r\n  redCircle: {\r\n    backgroundColor: red[500]\r\n  },\r\n  actionCell: {\r\n    '& > :nth-child(n+2)': {\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n  },\r\n  wrapper: {\r\n    position: 'relative'\r\n  },\r\n\r\n  newIcon: {\r\n    color: green[500]\r\n  }\r\n}));\r\n\r\nconst BodyRow: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { isLoadingData, levelUser, onEditLevelAccess, setOpenSnackbar, setSnackbarVarient } = props;\r\n\r\n  const { level, accessRight, new: isNew } = levelUser;\r\n\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n  return (\r\n    <TableRow className={classes.tableRow}>\r\n      <BodyCell cellWidth='25%' pR='5px'>\r\n        {isLoadingData ? <Skeleton width={100} height={25} /> : level}\r\n      </BodyCell>\r\n      <Chip label={accessRight} className={classes.chip} variant='default' color='secondary' />\r\n\r\n      <BodyCell cellWidth='5%' isComponent={true}>\r\n        {isLoadingData ? null : (\r\n          <Fragment>\r\n            <Button variant='text' size='small' color='secondary' onClick={onEditLevelAccess}>\r\n              Edit\r\n            </Button>\r\n          </Fragment>\r\n        )}\r\n      </BodyCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default BodyRow;\r\n","import React, { FC, Fragment, useState, useEffect, useContext, useCallback } from 'react';\r\nimport{ CancelTokenSource } from 'axios';\r\nimport { Theme, makeStyles, Table, TableBody, TableHead, Modal } from '@material-ui/core';\r\nimport BodyRow from './components/BodyRow';\r\nimport HeaderRow from 'components/HeaderRow';\r\nimport TablePagination from 'components/TablePagination';\r\nimport { StandardConfirmationDialog } from 'components/AppDialog';\r\n\r\ninterface Props {\r\n  isLoadingData: boolean;\r\n  levelUsers: LevelAccessUserDetailsModel[];\r\n  handleCancelEditLevelUser: () => void;\r\n  setOpenSnackbar: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setSnackbarVarient: React.Dispatch<React.SetStateAction<'success' | 'error'>>;\r\n  handleOpenEditLevelAccess: (accessIndex: number) => React.MouseEventHandler;\r\n }\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tableWrapper: {\r\n    overflowX: 'auto'\r\n  },\r\n  headerPageTitleContainer: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingLeft: theme.spacing(0)\r\n  }\r\n}));\r\n\r\nconst LevelAccesUserTable: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  let cancelTokenSource: CancelTokenSource;\r\n\r\n  const { isLoadingData, levelUsers, setOpenSnackbar, setSnackbarVarient, handleOpenEditLevelAccess } = props;\r\n\r\n  const dummyLevelUser: LevelAccessUserDetailsModel = {\r\n    id: 0,\r\n    level: 'Superadmin',\r\n    accessRight: 'Stok'\r\n  };\r\n\r\n  const [showSkeleton, setShowSkeleton] = useState<boolean>(false);\r\n  useEffect(() => {\r\n    let timeout: NodeJS.Timeout;\r\n\r\n    if (isLoadingData) {\r\n      timeout = setTimeout(() => {\r\n        setShowSkeleton(true);\r\n      }, 500);\r\n    }\r\n\r\n    setShowSkeleton(false);\r\n\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [isLoadingData]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.tableWrapper}>\r\n        <Table>\r\n          <TableHead>\r\n            <HeaderRow\r\n              headers={[\r\n                { label: 'LEVEL ', pL: '25', pR: '25px', verticalAlign: 'top' },\r\n                { label: 'HAK AKSES', pL: '25px', pR: '25px', verticalAlign: 'top' },\r\n                { label: '', pL: '25px', pR: '25px', verticalAlign: 'top' }\r\n              ]}\r\n            />\r\n          </TableHead>\r\n          <TableBody>\r\n            {showSkeleton\r\n              ? [1, 2, 3, 4, 5, 6].map(index => (\r\n                  <BodyRow\r\n                    key={index}\r\n                    levelUser={dummyLevelUser}\r\n                    setOpenSnackbar={setOpenSnackbar}\r\n                    setSnackbarVarient={setSnackbarVarient}\r\n                    isLoadingData={showSkeleton}\r\n                    onEditLevelAccess={handleOpenEditLevelAccess(index)}\r\n                  />\r\n                ))\r\n              : levelUsers.map((levelUser, index) => (\r\n                  <BodyRow\r\n                    key={levelUser.id}\r\n                    levelUser={levelUser}\r\n                    setOpenSnackbar={setOpenSnackbar}\r\n                    setSnackbarVarient={setSnackbarVarient}\r\n                    isLoadingData={showSkeleton}\r\n                    onEditLevelAccess={handleOpenEditLevelAccess(index)}\r\n                  />\r\n                ))}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LevelAccesUserTable;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Button,\r\n  Theme,\r\n  withStyles,\r\n  FormControl,\r\n  FormLabel,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport { orange } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\ninterface Props {\r\n  okLabel: 'Simpan';\r\n  level: string;\r\n  accessRight: string;\r\n\r\n  setLevel: React.Dispatch<React.SetStateAction<string>>;\r\n  setAccessRight: React.Dispatch<React.SetStateAction<string>>;\r\n\r\n  levelError: string;\r\n  accessRightError: string;\r\n\r\n  isSubmitting: boolean;\r\n  onSubmit: React.FormEventHandler;\r\n  onCancel: React.MouseEventHandler;\r\n}\r\n\r\nconst AddButton = withStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(orange[500]),\r\n    backgroundColor: '#EF965A',\r\n    '&:hover': {\r\n      backgroundColor: orange[700]\r\n    }\r\n  }\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  controlDiv: {\r\n    '& > :nth-child(n+2)': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  },\r\n  cancelButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  addButton: {\r\n    color: '#FFFFFF'\r\n  }\r\n}));\r\n\r\nconst EditLevelAccessUserForm: React.FC<Props> = props => {\r\n  const classes = useStyles();\r\n\r\n  const { level, setLevel, levelError } = props;\r\n  const { accessRightError, setAccessRight, accessRight } = props;\r\n  const { isSubmitting, onSubmit, onCancel, okLabel } = props;\r\n  const [openConfirmationModal, setOpenConfirmationModal] = useState<boolean>(false);\r\n  const [snackbarVarient, setSnackbarVarient] = useState<'success' | 'error'>('success');\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const handleChange = () => {};\r\n\r\n  const handleOpenConfirmation = () => {\r\n    setOpenConfirmationModal(true);\r\n  };\r\n\r\n  const handleCancelConfirmation = () => {\r\n    setOpenConfirmationModal(false);\r\n  };\r\n\r\n  const handleClose = () => {};\r\n\r\n  return (\r\n    <form noValidate onSubmit={onSubmit}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='level'\r\n            label='Level'\r\n            error={levelError !== ''}\r\n            helperText={levelError}\r\n            value={level}\r\n            onChange={event => setLevel(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <FormControl component='fieldset'>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Mitra Page' />}\r\n                label='Mitra Page'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Product Page' />}\r\n                label='Product Page'\r\n              />\r\n            </FormGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n          <FormControl component='fieldset'>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Data Stok' />}\r\n                label='Data Stok'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Order Page' />}\r\n                label='Order Page'\r\n              />\r\n            </FormGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n          <FormControl component='fieldset'>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='invoice Page' />}\r\n                label='invoice Page'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Commission Page' />}\r\n                label='Commission Page'\r\n              />\r\n            </FormGroup>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid container item justify='flex-end' xs={12} sm={12} md={12} lg={12} xl={12} className={classes.controlDiv}>\r\n          <Button\r\n            variant='contained'\r\n            className={classes.cancelButton}\r\n            disabled={isSubmitting}\r\n            onClick={() => {\r\n              handleOpenConfirmation();\r\n            }}\r\n          >\r\n            Batal\r\n          </Button>\r\n          <AddButton type='submit' variant='contained' color='primary' className={classes.addButton} disabled={isSubmitting}>\r\n            {okLabel}\r\n          </AddButton>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditLevelAccessUserForm;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { IconButton, Theme, makeStyles, Typography, Grid } from '@material-ui/core';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { GET_EDIT_ACCESS_USER_URL } from '../../../constants/url';\r\nimport EditLevelAccessUserForm from './components/EditLevelAccessUserForm';\r\n\r\ninterface Props {\r\n  levelUser?: LevelAccessUserDetailsModel;\r\n  open: boolean;\r\n  handleCancel(): void;\r\n  updateIndividualLevelUser: (updatedLevelUserProperties: Partial<LevelAccessUserDetailsModel>) => void;\r\n  setOpenSnackbar: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setSnackbarVarient: React.Dispatch<React.SetStateAction<'success' | 'error'>>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(4),\r\n    outline: 'none',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    borderRadius: 4\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n}));\r\n\r\nconst EditLevelAccessUserModal: React.FC<Props> = props => {\r\n  const classes = useStyles();\r\n  let cancelTokenSource: CancelTokenSource;\r\n\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n  const [level, setLevel] = useState<string>('');\r\n  const [accessRight, setAccessRight] = useState<string>('');\r\n  const [levelError, setLevelError] = useState<string>('');\r\n  const [accessRightError, setAccessRightError] = useState<string>('');\r\n  const { open, handleCancel, setOpenSnackbar, setSnackbarVarient, levelUser, updateIndividualLevelUser } = props;\r\n\r\n  const resetFormValues = useCallback(() => {\r\n    if (!levelUser) {\r\n      return;\r\n    }\r\n\r\n    const { level, accessRight } = levelUser;\r\n\r\n    setLevel(level);\r\n    setAccessRight(accessRight);\r\n  }, [levelUser]);\r\n\r\n  useEffect(() => {\r\n    resetFormValues();\r\n    clearFormErrors();\r\n  }, [resetFormValues]);\r\n\r\n  const clearFormErrors = () => {\r\n    setLevelError('');\r\n    setAccessRightError('');\r\n  };\r\n\r\n  const handleOnClose = () => {\r\n    resetFormValues();\r\n    clearFormErrors();\r\n    handleCancel();\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let ret = true;\r\n    clearFormErrors();\r\n\r\n    if (!level || !level.trim()) {\r\n      setLevelError('Please enter Level');\r\n      ret = false;\r\n    }\r\n\r\n    if (!accessRight || !accessRight.trim()) {\r\n      setAccessRightError('Please enter acces user');\r\n      ret = false;\r\n    }\r\n\r\n    return ret;\r\n  };\r\n\r\n  const handleOnSubmit: React.FormEventHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      cancelTokenSource = axios.CancelToken.source();\r\n      const response = await axios.post(\r\n        `${GET_EDIT_ACCESS_USER_URL(levelUser!.id)}`,\r\n        {\r\n          level,\r\n          accessRight\r\n        },\r\n        { cancelToken: cancelTokenSource.token }\r\n      );\r\n      updateIndividualLevelUser(response.data);\r\n      setOpenSnackbar(true);\r\n      setSnackbarVarient('success');\r\n      handleCancel();\r\n    } catch (err) {\r\n      console.log(err);\r\n      const { errorCode } = err.data;\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Modal aria-labelledby='modal-title' open={open} disableBackdropClick={true}>\r\n      <Grid container item xs={8} sm={8} md={8} lg={5} xl={5} spacing={3} direction='column' className={classes.paper}>\r\n        <Typography variant='h4' id='modal-title' >\r\n          Edit Hak Akses\r\n        </Typography>\r\n        <IconButton size='small' className={classes.closeButton} onClick={handleOnClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <EditLevelAccessUserForm\r\n          okLabel='Simpan'\r\n          level={level}\r\n          accessRight={accessRight}\r\n          setLevel={setLevel}\r\n          setAccessRight={setAccessRight}\r\n          levelError={levelError}\r\n          accessRightError={accessRightError}\r\n          isSubmitting={isLoading}\r\n          onSubmit={handleOnSubmit}\r\n          onCancel={handleOnClose}\r\n        />\r\n      </Grid>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditLevelAccessUserModal;\r\n","import React from 'react';\r\nimport { Grid, TextField, Button, Theme, withStyles, FormControl, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core';\r\nimport { orange } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\ninterface Props {\r\n  okLabel: 'Simpan';\r\n\r\n  level: string;\r\n  accessRight: string;\r\n\r\n  setLevel: React.Dispatch<React.SetStateAction<string>>;\r\n  setAccessRight: React.Dispatch<React.SetStateAction<string>>;\r\n\r\n  levelError: string;\r\n  accessRightError: string;\r\n\r\n  isSubmitting: boolean;\r\n  onSubmit: React.FormEventHandler;\r\n  onCancel: React.MouseEventHandler;\r\n}\r\n\r\nconst AddButton = withStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(orange[500]),\r\n    backgroundColor: '#EF965A',\r\n    '&:hover': {\r\n      backgroundColor: orange[700]\r\n    }\r\n  }\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  controlDiv: {\r\n    '& > :nth-child(n+2)': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  },\r\n  cancelButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  addButton: {\r\n    color: '#FFFFFF'\r\n  }\r\n}));\r\n\r\nconst CreateLevelAccessForm: React.FC<Props> = props => {\r\n  const classes = useStyles();\r\n\r\n  const { level, setLevel, levelError } = props;\r\n  const { accessRightError, setAccessRight, accessRight } = props;\r\n  const { isSubmitting, onSubmit, onCancel, okLabel } = props;\r\n  const handleChange = () => {};\r\n\r\n  return (\r\n    <form noValidate onSubmit={onSubmit}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='level'\r\n            label='Level'\r\n            error={levelError !== ''}\r\n            helperText={levelError}\r\n            value={level}\r\n            onChange={event => setLevel(event.target.value)}\r\n            autoComplete='off'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <FormControl component='fieldset'>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Mitra Page' />}\r\n                label='Mitra Page'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Product Page' />}\r\n                label='Product Page'\r\n              />\r\n            </FormGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n          <FormControl component='fieldset'>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Data Stok' />}\r\n                label='Data Stok'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Order Page' />}\r\n                label='Order Page'\r\n              />\r\n            </FormGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n          <FormControl component='fieldset'>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='invoice Page' />}\r\n                label='invoice Page'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox onChange={handleChange} value={accessRight} color='primary' name='Commission Page' />}\r\n                label='Commission Page'\r\n              />\r\n            </FormGroup>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid container item justify='flex-end' xs={12} sm={12} md={12} lg={12} xl={12} className={classes.controlDiv}>\r\n          <Button variant='contained' className={classes.cancelButton} onClick={onCancel} disabled={isSubmitting}>\r\n            Cancel\r\n          </Button>\r\n          <AddButton type='submit' variant='contained' color='primary' className={classes.addButton} disabled={isSubmitting}>\r\n            {okLabel}\r\n          </AddButton>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateLevelAccessForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { IconButton, Theme, Modal, Grid, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport CreateLevelAccessForm from './components/CreateLevelAccessForm';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { ACCESS_USER_BASE_URL } from '../../../constants/url';\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  addNewLevelUser(levelUser: LevelAccessUserDetailsModel): void;\r\n  handleCancel(): void;\r\n  setOpenSnackbar: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setSnackbarVarient: React.Dispatch<React.SetStateAction<'success' | 'error'>>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(4),\r\n    outline: 'none',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    borderRadius: 4\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n}));\r\n\r\nconst CreateLevelAccessUserModal: React.FC<Props> = props => {\r\n  const classes = useStyles();\r\n  let cancelTokenSource: CancelTokenSource;\r\n\r\n  const { addNewLevelUser, open, handleCancel, setOpenSnackbar, setSnackbarVarient } = props;\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n  const [level, setLevel] = useState<string>('');\r\n  const [levelError, setLevelError] = useState<string>('');\r\n  const [levelAccessUser, setLevelAccessUser] = useState<LevelAccessUserDetailsModel[]>([]);\r\n  const [accessRight, setAccessRight] = useState<string>('');\r\n  const [accessRightError, setAccessRightError] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n\r\n    const searchLevelAccess = async () => {\r\n      try {\r\n        const url = `${ACCESS_USER_BASE_URL}?`;\r\n        const { data } = await axios.get(url, { cancelToken: cancelTokenSource.token });\r\n\r\n        let levelAccessData: LevelAccessUserDetailsModel[] = [...data.level];\r\n\r\n        setLevelAccessUser(levelAccessData);\r\n      } catch (e) {}\r\n    };\r\n\r\n    searchLevelAccess();\r\n  }, []);\r\n\r\n  const clearFormErrors = () => {\r\n    setLevelError('');\r\n    setAccessRightError('');\r\n  };\r\n\r\n  const clearFormValue = () => {\r\n    setLevel('');\r\n    setAccessRight('');\r\n  };\r\n  // This is to ensure that the form vale and erors are reset/cleared when user canceled the editing\r\n  const handleOnClose = () => {\r\n    clearFormErrors();\r\n    handleCancel();\r\n    clearFormValue();\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let ret = true;\r\n    clearFormErrors();\r\n\r\n    if (!level || !level.trim()) {\r\n      setLevelError('Please enter email');\r\n      ret = false;\r\n    }\r\n    if (!accessRight || !accessRight.trim()) {\r\n      setAccessRightError('Please enter acccess user');\r\n      ret = false;\r\n    }\r\n    return ret;\r\n  };\r\n\r\n  const handleOnSubmit: React.FormEventHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      cancelTokenSource = axios.CancelToken.source();\r\n      const response = await axios.post(\r\n        `${ACCESS_USER_BASE_URL}`,\r\n        {\r\n          level,\r\n          accessRight\r\n        },\r\n        { cancelToken: cancelTokenSource.token }\r\n      );\r\n      addNewLevelUser(response.data);\r\n      setOpenSnackbar(true);\r\n      setSnackbarVarient('success');\r\n      handleOnClose();\r\n    } catch (err) {\r\n      console.log(err);\r\n      const { errorCode } = err.data;\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Modal aria-labelledby='modal-title' open={open} disableBackdropClick={true}>\r\n      <Grid container item xs={8} sm={8} md={8} lg={5} xl={5} spacing={3} direction='column' className={classes.paper}>\r\n        <Typography variant='h4' id='modal-title'>\r\n          Edit User\r\n        </Typography>\r\n        <IconButton size='small' className={classes.closeButton} onClick={handleOnClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <CreateLevelAccessForm\r\n          okLabel='Simpan'\r\n          level={level}\r\n          accessRight={accessRight}\r\n          setLevel={setLevel}\r\n          setAccessRight={setAccessRight}\r\n          levelError={levelError}\r\n          accessRightError={accessRightError}\r\n          isSubmitting={isLoading}\r\n          onSubmit={handleOnSubmit}\r\n          onCancel={handleOnClose}\r\n        />\r\n      </Grid>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateLevelAccessUserModal;\r\n","import React, { FC, useState, useContext, useEffect, useCallback } from 'react';\r\nimport { green } from '@material-ui/core/colors';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport useRouter from 'hooks/useRouter';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport clsx from 'clsx';\r\nimport { Button, Container, Grid, makeStyles, Paper, Theme, Typography } from '@material-ui/core';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ActionSnackBar from 'components/ActionSnackBar';\r\nimport { ACCESS_USER_BASE_URL } from 'constants/url';\r\nimport LevelAccessUserTable from './LevelAccesUserTable';\r\nimport EditLevelAccesUserModal from './EditLevelAccesUserModal';\r\nimport CreateLevelAccessUserModal from './CreateLevelAccessUserModal';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(2),\r\n    margin: 'auto'\r\n  },\r\n  text: {\r\n    fontWeight: 'bold',\r\n    fontSize: '30px',\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  textPaper: {\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  textSpace: {\r\n    fontWeight: 'bold',\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  divider: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  container: {\r\n    '& > :nth-child(n+2)': {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  },\r\n  tableRoot: {\r\n    width: '100%',\r\n    overflowX: 'auto'\r\n  },\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  button: {\r\n    paddingTop: theme.spacing(4)\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  addButton: {\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  extendedIcon: {\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  addGrid: {\r\n    textAlign: 'end'\r\n  },\r\n  leftHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2)\r\n  },\r\n  rightHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    paddingRight: theme.spacing(1.5)\r\n  },\r\n  Button: {\r\n    width: '70%'\r\n  },\r\n  ButtonNew: {\r\n    width: '60%',\r\n    paddingLeft: theme.spacing(7)\r\n  }\r\n}));\r\n\r\nconst AccesPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { history } = useRouter();\r\n  const state = history.location.state as any;\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n  const [snackbarVarient, setSnackbarVarient] = useState<'success' | 'error'>('success');\r\n\r\n  const dummyLevelUser: LevelAccessUserDetailsModel = {\r\n    id: 0,\r\n    level: 'SuperAdmin',\r\n    accessRight: 'Warehouse'\r\n  };\r\n\r\n  const [levelUsers, setLevelUsers] = useState<LevelAccessUserDetailsModel[]>([dummyLevelUser]);\r\n  const [queryString, setQueryString] = useState<string>();\r\n  const [isSearchUserError, setSearchUserError] = useState<boolean>(false);\r\n\r\n  const [messageSuccess, setMessageSuccess] = useState<string>('');\r\n  const [messageError, setMessageError] = useState<string>('');\r\n  const [openEditLevelUser, setOpenEditLevelUser] = useState<boolean>(false);\r\n  const [isSearchingUser, setSearchingUser] = useState<boolean>(false);\r\n  const [currentEditingLevelUserIndex, setCurrentEditingLevelUserIndex] = useState<number>(0); // sudah\r\n  const [openCreateLevelUserModal, setOpenCreateLevelUserModal] = useState<boolean>(false);\r\n\r\n  const handleCancelEditUser = () => {\r\n    setOpenEditLevelUser(false);\r\n  };\r\n\r\n  // Loading all the roles to populate the tabs once\r\n\r\n  useEffect(() => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n\r\n    return () => {\r\n      // Canceling the request if component is unmounted\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, []);\r\n\r\n  const performActionAndRevertPage = (action: React.Dispatch<React.SetStateAction<any>>, actionParam: any) => {\r\n    action(actionParam);\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  const handleCancelEditLevelUser = () => {\r\n    setOpenEditLevelUser(false);\r\n  };\r\n\r\n  const handleOpenEditLevelAccess = (levelUserIndex: number): React.MouseEventHandler => () => {\r\n    setCurrentEditingLevelUserIndex(levelUserIndex);\r\n    setOpenEditLevelUser(true);\r\n  };\r\n  const handleOpenCreateLevelUser = () => {\r\n    setOpenCreateLevelUserModal(true);\r\n  };\r\n\r\n  const handleCancelCreateUser = () => {\r\n    setOpenCreateLevelUserModal(false);\r\n  };\r\n\r\n  const handleSearch = useCallback((searchQuery: string) => {\r\n    performActionAndRevertPage(setQueryString, searchQuery);\r\n  }, []);\r\n\r\n  // Search Client whenever rowsPerPage, currentPage, queryString, user, and filterby changes\r\n  const fetchData = useCallback(() => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n\r\n    const getQueryParams = () => {\r\n      const params = new URLSearchParams();\r\n      if (queryString) {\r\n        params.append('q', queryString);\r\n      }\r\n\r\n      return params.toString();\r\n    };\r\n\r\n    const searchLevelUser = async () => {\r\n      setSearchingUser(true);\r\n      setSearchUserError(false);\r\n\r\n      try {\r\n        const url = `${ACCESS_USER_BASE_URL}?${getQueryParams()}`;\r\n        const { data } = await axios.get(url, { cancelToken: cancelTokenSource.token });\r\n        setLevelUsers(data.levelUsers);\r\n      } catch (err) {\r\n        setSearchUserError(true);\r\n      }\r\n\r\n      setSearchingUser(false);\r\n    };\r\n\r\n    searchLevelUser();\r\n\r\n    return () => {\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, [queryString]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const addNewLevelUser = (levelUser: LevelAccessUserDetailsModel) => {\r\n    levelUser.new = true;\r\n    levelUsers.unshift(levelUser);\r\n    setLevelUsers([...levelUsers]);\r\n  };\r\n\r\n  const updateIndividualLevelUser = (accessIndex: number) => {\r\n    return (updatedLevelUserProperties: Partial<LevelAccessUserDetailsModel>) => {\r\n      setLevelUsers(\r\n        levelUsers!.map((levelUser, index) => {\r\n          if (index !== accessIndex) {\r\n            return levelUser;\r\n          }\r\n\r\n          return Object.assign({}, levelUser, updatedLevelUserProperties);\r\n        })\r\n      );\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth='lg' className={clsx(classes.root, classes.container)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item sm={6}>\r\n          <Typography className={classes.text} variant='h3' >\r\n            Pengaturan\r\n          </Typography>\r\n          <Typography className={classes.textSpace} variant='h4'>\r\n            Awal {'>'} Pengguna {'>'} Level Akses\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item sm={6} className={classes.addGrid}>\r\n          <Button\r\n            color='secondary'\r\n            size='medium'\r\n            variant='contained'\r\n            className={classes.addButton}\r\n            onClick={() => {\r\n              handleOpenCreateLevelUser();\r\n            }}\r\n          >\r\n            <PersonAddIcon className={classes.extendedIcon} />\r\n            Tambah Level Akses\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Paper className={classes.paper}>\r\n        <Typography className={classes.text} variant='h4' color='secondary'>\r\n          Semua Level Akses\r\n        </Typography>\r\n\r\n        <LevelAccessUserTable\r\n          isLoadingData={isSearchingUser}\r\n          levelUsers={levelUsers}\r\n          handleCancelEditLevelUser={handleCancelEditLevelUser}\r\n          setOpenSnackbar={setOpenSnackbar}\r\n          setSnackbarVarient={setSnackbarVarient}\r\n          handleOpenEditLevelAccess={handleOpenEditLevelAccess}\r\n        />\r\n\r\n        <CreateLevelAccessUserModal\r\n          open={openCreateLevelUserModal}\r\n          handleCancel={handleCancelCreateUser}\r\n          addNewLevelUser={addNewLevelUser}\r\n          setOpenSnackbar={setOpenSnackbar}\r\n          setSnackbarVarient={setSnackbarVarient}\r\n        />\r\n\r\n        <EditLevelAccesUserModal\r\n          open={openEditLevelUser}\r\n          levelUser={levelUsers[currentEditingLevelUserIndex]}\r\n          handleCancel={handleCancelEditUser}\r\n          setOpenSnackbar={setOpenSnackbar}\r\n          setSnackbarVarient={setSnackbarVarient}\r\n          updateIndividualLevelUser={updateIndividualLevelUser(currentEditingLevelUserIndex)}\r\n        />\r\n      </Paper>\r\n      <ActionSnackBar\r\n        variant={snackbarVarient}\r\n        message={snackbarVarient === 'success' ? messageSuccess : messageError}\r\n        open={openSnackbar}\r\n        handleClose={handleCloseSnackbar}\r\n        Icon={snackbarVarient === 'success' ? CheckCircleIcon : ErrorIcon}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AccesPage;\r\n","import React from 'react';\r\nimport { RouteComponentProps, RouteProps, Redirect, Route } from 'react-router';\r\n\r\ninterface Props extends RouteProps {\r\n  routeCondition: boolean;\r\n  redirectTo: string;\r\n}\r\n\r\nconst ConditionalRoute: React.FC<Props> = props => {\r\n  const { component: Component, routeCondition, redirectTo, ...rest } = props;\r\n\r\n  const renderFn = (renderProps: RouteComponentProps<any>) => {\r\n    if (props.routeCondition) {\r\n      if (!Component) {\r\n        return null;\r\n      }\r\n      return <Component {...renderProps} />;\r\n    }\r\n\r\n    return <Redirect to={props.redirectTo} />;\r\n  };\r\n\r\n  return (\r\n    // Extract RouteProps without component property to rest.\r\n    <Route {...rest} render={renderFn} />\r\n  );\r\n};\r\n\r\nexport default ConditionalRoute;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport Button, { ButtonProps } from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Theme, CircularProgress, Fade } from '@material-ui/core';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\ninterface Props extends ButtonProps {\r\n  isLoading: boolean;\r\n  delay: number;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  wrapper: {\r\n    position: 'relative'\r\n  },\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12\r\n  }\r\n}));\r\n\r\nconst LoadingButton: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const timerRef = React.useRef<NodeJS.Timeout>();\r\n\r\n  // The className and styling defined for LoadingButton will be used to style the root div\r\n  const { isLoading, delay, disabled, children, className, style, ...rest } = props;\r\n\r\n  const [disabledDueToLoading, setDisabledDueToLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      timerRef.current = setTimeout(() => {\r\n        setDisabledDueToLoading(true);\r\n      }, delay);\r\n    } else {\r\n      const test = timerRef.current!;\r\n      clearTimeout(test);\r\n      setDisabledDueToLoading(false);\r\n    }\r\n\r\n    return () => {\r\n      const test = timerRef.current!;\r\n      clearTimeout(test);\r\n      setDisabledDueToLoading(false);\r\n    };\r\n  }, [isLoading, delay]);\r\n\r\n  return (\r\n    <div className={className} style={style}>\r\n      <div className={classes.wrapper}>\r\n        <Button disabled={disabled || disabledDueToLoading} {...rest}>\r\n          {children}\r\n        </Button>\r\n        <Fade\r\n          in={isLoading}\r\n          style={{\r\n            transitionDelay: isLoading ? `${delay}ms` : '0ms'\r\n          }}\r\n          unmountOnExit\r\n        >\r\n          <CircularProgress size={24} className={classes.buttonProgress} />\r\n        </Fade>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingButton;\r\n","import React from 'react';\r\n\r\nexport interface CurrentUserContextData {\r\n  currentUser?: CurrentUser;\r\n  setCurrentUser: (currentUser: CurrentUser, token: string) => void;\r\n  unsetCurrentUser: () => void;\r\n}\r\n\r\nexport const CurrentUserContext = React.createContext<CurrentUserContextData>({\r\n  setCurrentUser: () => {},\r\n  unsetCurrentUser: () => {}\r\n});\r\n\r\nexport const CurrentUserProvider = CurrentUserContext.Provider;\r\nexport const CurrentUserConsumer = CurrentUserContext.Consumer;\r\n","import { Container, Grid, InputAdornment, IconButton, Paper, TextField, Theme } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport React, { FC, useState, useCallback, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LoadingButton from 'components/LoadingButton';\r\nimport logo from 'images/simplify_logo2C.png';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { LOGIN_URL } from 'constants/url';\r\nimport { CurrentUserContext } from 'contexts/CurrentUserContext';\r\nimport { AuthenticationResponse } from 'typings/AuthenticationResponse';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(8),\r\n    padding: theme.spacing(3, 5)\r\n  },\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  logoContainer: {\r\n    textAlign: 'center'\r\n  },\r\n  logo: {\r\n    width: '50%'\r\n  },\r\n  linkButton: {\r\n    textAlign: 'center',\r\n    padding: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst LoginPage: FC = () => {\r\n  const currentUserContext = useContext(CurrentUserContext);\r\n\r\n  const theme = useTheme<Theme>();\r\n  const classes = useStyles();\r\n\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n  const [isAuthenticationError, setAuthenticationError] = useState<boolean>(false);\r\n\r\n  const [email, setEmail] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [isEmptyFieldError, setEmptyFieldError] = useState<boolean>(false);\r\n  const [isShowPassword, setShowPassword] = useState<boolean>(false);\r\n\r\n\r\n  const login = useCallback(async () => {\r\n      const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n      setLoading(true);\r\n      setAuthenticationError(false);\r\n\r\n      try {\r\n        const response = await axios.post(LOGIN_URL, { email, password }, { cancelToken: cancelTokenSource.token });\r\n        const { currentUser, token }: AuthenticationResponse = response.data;\r\n        currentUserContext.setCurrentUser(currentUser, token);\r\n      } catch (err) {\r\n        setLoading(false);\r\n        setAuthenticationError(true);\r\n      }\r\n    },\r\n    [email, password, currentUserContext],\r\n  );\r\n\r\n  const validateLoginForm = (): boolean => {\r\n    if (!email || !password) {\r\n      setEmptyFieldError(true);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const onSubmitHandler: React.FormEventHandler = async event => {\r\n    event.preventDefault();\r\n    setEmptyFieldError(false);\r\n\r\n    if (validateLoginForm()) {\r\n      login()\r\n    }\r\n  };\r\n\r\n  const getPasswordFieldHelperText = (): string => {\r\n    if (isEmptyFieldError) {\r\n      return 'Please enter your credentials';\r\n    }\r\n\r\n    if (isAuthenticationError) {\r\n      return 'Your credentials is incorrect.';\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <Paper className={classes.root}>\r\n        <div className={classes.paper}>\r\n          <div className={classes.logoContainer}>\r\n            <img src={logo} alt='' className={classes.logo} />\r\n          </div>\r\n          <form className={classes.form} noValidate onSubmit={onSubmitHandler}>\r\n            <TextField\r\n              variant='outlined'\r\n              margin='normal'\r\n              required\r\n              fullWidth\r\n              id='email'\r\n              label='Email Address'\r\n              name='email'\r\n              autoComplete='email'\r\n              autoFocus\r\n              error={isEmptyFieldError || isAuthenticationError}\r\n              onChange={event => setEmail(event.target.value)}\r\n              value={email}\r\n            />\r\n            <TextField\r\n              variant='outlined'\r\n              margin='normal'\r\n              required\r\n              fullWidth\r\n              name='password'\r\n              label='Password'\r\n              type={isShowPassword ? 'text' : 'password'}\r\n              id='password'\r\n              autoComplete='current-password'\r\n              error={isEmptyFieldError || isAuthenticationError}\r\n              helperText={getPasswordFieldHelperText()}\r\n              onChange={event => setPassword(event.target.value)}\r\n              value={password}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position='end'>\r\n                    <IconButton edge='end' aria-label='toggle password visibility' onClick={event => setShowPassword(!isShowPassword)}>\r\n                      {isShowPassword ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n            <LoadingButton\r\n              delay={0}\r\n              isLoading={isLoading}\r\n              type='submit'\r\n              fullWidth\r\n              variant='contained'\r\n              color='secondary'\r\n              style={{ margin: theme.spacing(2, 0, 2) }}\r\n            >\r\n              Sign In\r\n            </LoadingButton>\r\n            <Grid container>\r\n              <Grid item xs className={classes.linkButton}>\r\n                <Link to='/forgotpassword' style={{ textDecoration: 'none' }}>\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import * as React from 'react';\r\n\r\nconst HomePage: React.FC = () => {\r\n  return (\r\n    <div>\r\n      Home Page\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\nconst NotFoundPage: React.FC = () => {\r\n  return <div>NOT FOUND</div>;\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React, { FC, Fragment } from 'react';\r\nimport {\r\n  Avatar,\r\n  Badge,\r\n  Button,\r\n  ButtonBase,\r\n  Container,\r\n  createStyles,\r\n  Divider,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Theme,\r\n  Tooltip,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport UploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CancelImageIcon from '@material-ui/icons/Close';\r\n\r\ninterface Props {\r\n  name: string;\r\n  setName: React.Dispatch<React.SetStateAction<string>>;\r\n  address: string;\r\n  setAddress: React.Dispatch<React.SetStateAction<string>>;\r\n  email: string;\r\n  setEmail: React.Dispatch<React.SetStateAction<string>>;\r\n  contactNumber: string;\r\n  setContactNumber: React.Dispatch<React.SetStateAction<string>>;\r\n  npwp: string;\r\n  setNPWP: React.Dispatch<React.SetStateAction<string>>;\r\n  contactPerson: string;\r\n  setContactPerson: React.Dispatch<React.SetStateAction<string>>;\r\n  handphone: string;\r\n  setHandphone: React.Dispatch<React.SetStateAction<string>>;\r\n  website: string;\r\n  setWebsite: React.Dispatch<React.SetStateAction<string>>;\r\n  district: string;\r\n  setDistrict: React.Dispatch<React.SetStateAction<string>>;\r\n  postalCode: string;\r\n  setPostalCode: React.Dispatch<React.SetStateAction<string>>;\r\n  province: string;\r\n  setProvince: React.Dispatch<React.SetStateAction<string>>;\r\n  subDistrict: string;\r\n  setSubDistrict: React.Dispatch<React.SetStateAction<string>>;\r\n  image: string;\r\n  imageView: string;\r\n  setImage: React.Dispatch<React.SetStateAction<string>>;\r\n  setImageView: React.Dispatch<React.SetStateAction<string>>;\r\n\r\n  nameError: string;\r\n  addressError: string;\r\n  postalCodeError: string;\r\n  contactNumberError: string;\r\n  npwpError: string;\r\n  handphoneError: string;\r\n  websiteError: string;\r\n  districtError: string;\r\n  provinceError: string;\r\n  subDistrictError: string;\r\n  emailError: string;\r\n  contactPersonError: string;\r\n  onSubmit: React.FormEventHandler;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    rightPaper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'justify',\r\n      marginBottom: theme.spacing(3)\r\n    },\r\n    container: {\r\n      '& > :nth-child(n+2)': {\r\n        marginTop: theme.spacing(2)\r\n      }\r\n    },\r\n    root: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4)\r\n    },\r\n    dividerStyle: {\r\n      marginTop: theme.spacing(1.5)\r\n    },\r\n    text: {\r\n      fontWeight: 'bold',\r\n      fontSize: '30px',\r\n      paddingTop: theme.spacing(3)\r\n    },\r\n    textSpace: {\r\n      fontWeight: 'bold',\r\n      paddingTop: theme.spacing(3)\r\n    },\r\n    textTypo: {\r\n      marginTop: theme.spacing(5)\r\n    },\r\n\r\n    textField: {\r\n      marginTop: theme.spacing(15.5)\r\n    },\r\n    textFieldFont: {\r\n      fontSize: '13px',\r\n      height: 18\r\n    },\r\n    bigAvatar: {\r\n      minWidth: '200px',\r\n      minHeight: '90px',\r\n      color: `#C4C4C4`,\r\n      backgroundColor: '#FFFFFF',\r\n      border: `1px solid #C4C4C4`,\r\n      borderRadius: '10px'\r\n    },\r\n    spacingNewLine: {\r\n      marginBottom: theme.spacing(1.5)\r\n    },\r\n    buttonBaseStyle: {\r\n      position: 'relative',\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '100% !important'\r\n      }\r\n    },\r\n    inputImageStyle: {\r\n      display: 'none'\r\n    },\r\n    buttonImage: {\r\n      marginRight: theme.spacing(63),\r\n      paddingRight: theme.spacing(63)\r\n    },\r\n    cancelImage: {\r\n      fontSize: '12px',\r\n      cursor: 'pointer'\r\n    },\r\n    spaceImage: {\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    addGrid: {\r\n      textAlign: 'end',\r\n      marginTop:theme.spacing(7)\r\n    },\r\n    textLast: {\r\n     paddingLeft:theme.spacing(2)\r\n    },\r\n    imageRemarks: {\r\n      color: 'grey',\r\n      fontStyle: 'oblique',\r\n      fontSize: '11px',\r\n      marginTop: theme.spacing(1),\r\n      marginButtom: theme.spacing(1)\r\n    }\r\n  })\r\n);\r\n\r\nconst CompanyForm: FC<Props> = props => {\r\n  const classes = useStyles();\r\n\r\n  const { name, setName, nameError } = props;\r\n  const { address, setAddress, addressError } = props;\r\n  const { email, setEmail, emailError } = props;\r\n  const { npwp, setNPWP, npwpError } = props;\r\n  const { district, setDistrict, districtError } = props;\r\n  const { subDistrict, setSubDistrict, subDistrictError } = props;\r\n  const { postalCode, setPostalCode, postalCodeError } = props;\r\n  const { contactNumber, setContactNumber, contactNumberError } = props;\r\n  const { contactPerson, setContactPerson, contactPersonError } = props;\r\n  const { handphone, setHandphone, handphoneError } = props;\r\n  const { website, setWebsite, websiteError, onSubmit } = props;\r\n  const { province, setProvince, provinceError, setImage, setImageView, image, imageView } = props;\r\n\r\n  const handleChooseImage = (event: any) => {\r\n    let selectedImage;\r\n    let selectedImageView;\r\n    if (event.target.files[0] === undefined) {\r\n      selectedImage = '';\r\n      selectedImageView = '';\r\n    } else {\r\n      selectedImage = event.target.files[0];\r\n      selectedImageView = URL.createObjectURL(event.target.files[0]);\r\n    }\r\n\r\n    setImage(selectedImage);\r\n    setImageView(selectedImageView);\r\n  };\r\n\r\n  const cancelImage = () => {\r\n    setImage('');\r\n    setImageView('');\r\n  };\r\n\r\n  const renderImageComponent = () => {\r\n    if (imageView === '') {\r\n      return (\r\n        <Fragment>\r\n          <input\r\n            accept='image/*'\r\n            className={classes.inputImageStyle}\r\n            id='outlined-button-file'\r\n            type='file'\r\n            onChange={event => handleChooseImage(event)}\r\n          />\r\n          <label htmlFor='outlined-button-file'>\r\n            <ButtonBase focusRipple key={'Upload'} component='span' disableRipple>\r\n              <Tooltip title='Choose an image' placement='top'>\r\n                <Avatar className={classes.bigAvatar}>\r\n                  <UploadIcon fontSize='large' />\r\n                </Avatar>\r\n              </Tooltip>\r\n            </ButtonBase>\r\n          </label>\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <Badge badgeContent={<CancelImageIcon className={classes.cancelImage} onClick={event => cancelImage()} />} color='primary'>\r\n          <input\r\n            accept='image/*'\r\n            className={classes.inputImageStyle}\r\n            id='outlined-button-file'\r\n            type='file'\r\n            onChange={event => handleChooseImage(event)}\r\n          />\r\n          <label htmlFor='outlined-button-file'>\r\n            <ButtonBase focusRipple key={'Upload'} className={classes.buttonBaseStyle} component='span' disableRipple>\r\n              <Tooltip title='Choose an image' placement='top'>\r\n                <Avatar alt='Image' src={imageView} className={classes.bigAvatar} />\r\n              </Tooltip>\r\n            </ButtonBase>\r\n          </label>\r\n        </Badge>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth='lg' className={clsx(classes.root, classes.container)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item sm={6}>\r\n          <Typography className={classes.text} variant='h3'>\r\n            Pengaturan\r\n          </Typography>\r\n          <Typography className={classes.textSpace} variant='h4'>\r\n            Awal {'>'} Perusahaan\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item sm={6} className={classes.addGrid}>\r\n          <Button color='secondary' size='medium' variant='contained' onClick={onSubmit}>\r\n            EDIT\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Paper className={classes.rightPaper}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Typography variant='h4' display='block' gutterBottom>\r\n              Info Perusahaan\r\n            </Typography>\r\n            <Divider className={classes.dividerStyle} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='companyName'\r\n              label='Company Name'\r\n              error={nameError !== ''}\r\n              helperText={nameError}\r\n              value={name}\r\n              onChange={event => setName(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='email'\r\n              label='Email'\r\n              error={emailError !== ''}\r\n              helperText={emailError}\r\n              value={email}\r\n              onChange={event => setEmail(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='contactNumber'\r\n              label='No.Telp'\r\n              error={contactNumberError !== ''}\r\n              helperText={contactNumberError}\r\n              value={contactNumber}\r\n              onChange={event => setContactNumber(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              multiline\r\n              rowsMax='4'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='npwp'\r\n              label='No.NPWP'\r\n              error={npwpError !== ''}\r\n              helperText={npwpError}\r\n              value={npwp}\r\n              onChange={event => setNPWP(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              multiline\r\n              rowsMax='4'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n\r\n            <Typography className={classes.textTypo} variant='h4' display='block' gutterBottom>\r\n              Alamat Perusahaan\r\n            </Typography>\r\n\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='companyAddress'\r\n              label='Company Address'\r\n              error={addressError !== ''}\r\n              helperText={addressError}\r\n              value={address}\r\n              onChange={event => setAddress(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              multiline\r\n              rowsMax='4'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='district'\r\n              label='Kabupaten'\r\n              error={districtError !== ''}\r\n              helperText={districtError}\r\n              value={district}\r\n              onChange={event => setDistrict(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              multiline\r\n              rowsMax='4'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='postalCode'\r\n              label='Postal Code'\r\n              error={postalCodeError !== ''}\r\n              helperText={postalCodeError}\r\n              value={postalCode}\r\n              onChange={event => setPostalCode(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='contactPerson'\r\n              label='Contact Person'\r\n              error={contactPersonError !== ''}\r\n              helperText={contactPersonError}\r\n              value={contactPerson}\r\n              onChange={event => setContactPerson(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='handphone'\r\n              label='No.Handphone'\r\n              error={handphoneError !== ''}\r\n              helperText={handphoneError}\r\n              value={handphone}\r\n              onChange={event => setHandphone(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='website'\r\n              label='Webiste Perusahaan'\r\n              error={websiteError !== ''}\r\n              helperText={websiteError}\r\n              value={website}\r\n              onChange={event => setWebsite(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              className={classes.textField}\r\n              id='province'\r\n              label='Provinsi'\r\n              error={provinceError !== ''}\r\n              helperText={provinceError}\r\n              value={province}\r\n              onChange={event => setProvince(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              multiline\r\n              rowsMax='4'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              margin='dense'\r\n              required\r\n              fullWidth\r\n              id='subDistrict'\r\n              label='Kecamatan'\r\n              error={subDistrictError !== ''}\r\n              helperText={subDistrictError}\r\n              value={subDistrict}\r\n              onChange={event => setSubDistrict(event.target.value)}\r\n              variant='outlined'\r\n              autoComplete='off'\r\n              multiline\r\n              rowsMax='4'\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textFieldFont\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                className: classes.textFieldFont\r\n              }}\r\n            />\r\n            <Grid></Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Typography  variant='h4' display='block' gutterBottom className={classes.textLast}>\r\n                Logo Perusahaan\r\n              </Typography>\r\n            \r\n            </Grid>\r\n            <Grid container justify='center' alignItems='center' className={classes.buttonImage}>\r\n              {renderImageComponent()}\r\n              <Typography className={classes.imageRemarks}>Make sure image is in .JPG (400x400 px)</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CompanyForm;\r\n","import React, { FC, useState } from 'react';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { Grid } from '@material-ui/core';\r\nimport CompanyForm from './components/CompanyForm';\r\n\r\nimport { COMPANY_BASE_URL } from 'constants/url';\r\n\r\nconst CompanyPage: FC = () => {\r\n  let cancelTokenSource: CancelTokenSource;\r\n\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n  const [snackbarVarient, setSnackbarVarient] = useState<'success' | 'error'>('success');\r\n  const [messageSuccess, setMessageSuccess] = useState<string>('');\r\n  const [messageError, setMessageError] = useState<string>('');\r\n\r\n  const [company, setCompany] = useState<CompanyModel[]>([]);\r\n  const [name, setName] = useState<string>('');\r\n  const [address, setAddress] = useState<string>('');\r\n  const [postalCode, setPostalCode] = useState<string>('');\r\n  const [contactNumber, setContactNumber] = useState<string>('');\r\n\r\n  const [nameError, setNameError] = useState<string>('');\r\n  const [addressError, setAddressError] = useState<string>('');\r\n  const [postalCodeError, setPostalCodeError] = useState<string>('');\r\n  const [contactNumberError, setContactNumberError] = useState<string>('');\r\n  const [email, setEmail] = useState<string>('');\r\n  const [district, setDistrict] = useState<string>('');\r\n  const [handphone, setHandphone] = useState<string>('');\r\n  const [website, setWebsite] = useState<string>('');\r\n  const [contactPerson, setContactPerson] = useState<string>('');\r\n  const [npwp, setNPWP] = useState<string>('');\r\n  const [subDistrict, setSubDistrict] = useState<string>('');\r\n\r\n  const [emailError, setEmailError] = useState<string>('');\r\n  const [districtError, setDistrictError] = useState<string>('');\r\n  const [handphoneError, setHandphoneError] = useState<string>('');\r\n  const [websiteError, setWebsiteError] = useState<string>('');\r\n  const [contactPersonError, setContactPersonError] = useState<string>('');\r\n  const [npwpError, setNPWPError] = useState<string>('');\r\n  const [subDistrictError, setSubDistrictError] = useState<string>('');\r\n  const [province, setProvince] = useState<string>('');\r\n\r\n  const [provinceError, setProvinceError] = useState<string>('');\r\n  const [image, setImage] = useState<string>('');\r\n  const [imageView, setImageView] = useState<string>('');\r\n\r\n  const clearFormErrors = () => {\r\n    setNameError('');\r\n    setAddressError('');\r\n    setPostalCodeError('');\r\n    setContactNumberError('');\r\n    setWebsiteError('');\r\n    setHandphoneError('');\r\n    setContactPersonError('');\r\n    setHandphoneError('');\r\n    setEmailError('');\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let ret = true;\r\n    clearFormErrors();\r\n\r\n    if (!name || !name.trim()) {\r\n      setNameError('Please enter company name');\r\n      ret = false;\r\n    }\r\n\r\n    if (!address || !address.trim()) {\r\n      setAddressError('Please enter company address');\r\n      ret = false;\r\n    }\r\n\r\n    if (!postalCode || !postalCode.trim()) {\r\n      setPostalCodeError('Please enter postal code');\r\n      ret = false;\r\n    }\r\n\r\n    if (!contactPerson || !contactPerson.trim()) {\r\n      setContactPersonError('Please enter contactPerson');\r\n      ret = false;\r\n    }\r\n\r\n    if (!handphone || !handphone.trim()) {\r\n      setHandphoneError('Please enter handphone');\r\n      ret = false;\r\n    }\r\n    if (!province || !province.trim()) {\r\n      setProvinceError('Please enter province');\r\n      ret = false;\r\n    }\r\n\r\n    if (!subDistrict || !subDistrict.trim()) {\r\n      setSubDistrictError('Please enter subDistrict');\r\n      ret = false;\r\n    }\r\n\r\n    if (!district || !district.trim()) {\r\n      setDistrictError('Please enter district');\r\n      ret = false;\r\n    }\r\n\r\n    if (!npwp || !npwp.trim()) {\r\n      setNPWPError('Please enter No.NPWP');\r\n      ret = false;\r\n    }\r\n\r\n    return ret;\r\n  };\r\n\r\n  const handleSetMessageSuccess = (message: string) => {\r\n    setMessageSuccess(message);\r\n  };\r\n\r\n  const handleSetMessageError = (message: string) => {\r\n    setMessageError(message);\r\n  };\r\n\r\n  const handleOnSubmit: React.FormEventHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      cancelTokenSource = axios.CancelToken.source();\r\n      const formData = new FormData();\r\n\r\n      formData.append('name', name);\r\n      formData.append('address', address);\r\n      formData.append('postalCode', postalCode);\r\n      formData.append('website', website);\r\n      formData.append('contactPerson', contactPerson);\r\n      formData.append('handphone', handphone);\r\n      formData.append('npwp', npwp);\r\n      formData.append('contactNumber', contactNumber);\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        cancelToken: cancelTokenSource.token\r\n      };\r\n\r\n      const response = await axios.post(`${COMPANY_BASE_URL}`, formData, config);\r\n      setCompany(response.data);\r\n      handleSetMessageSuccess('Successfully added new entity');\r\n    } catch (err) {\r\n      handleSetMessageError('Failed to add a new enity');\r\n      setSnackbarVarient('error');\r\n      setOpenSnackbar(true);\r\n      console.log(`err:${err}`);\r\n      const { errorCode } = err.data;\r\n\r\n      console.log(`errorCode:${errorCode}`);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <form noValidate onSubmit={handleOnSubmit}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <CompanyForm\r\n            name={name}\r\n            setName={setName}\r\n            address={address}\r\n            setAddress={setAddress}\r\n            postalCode={postalCode}\r\n            setPostalCode={setPostalCode}\r\n            contactNumber={contactNumber}\r\n            setContactNumber={setContactNumber}\r\n            nameError={nameError}\r\n            addressError={addressError}\r\n            postalCodeError={postalCodeError}\r\n            contactNumberError={contactNumberError}\r\n            email={email}\r\n            setEmail={setEmail}\r\n            district={district}\r\n            setDistrict={setDistrict}\r\n            website={website}\r\n            setWebsite={setWebsite}\r\n            handphone={handphone}\r\n            setHandphone={setHandphone}\r\n            subDistrict={subDistrict}\r\n            setSubDistrict={setSubDistrict}\r\n            npwp={npwp}\r\n            setNPWP={setNPWP}\r\n            contactPerson={contactPerson}\r\n            setContactPerson={setContactPerson}\r\n            handphoneError={handphoneError}\r\n            websiteError={websiteError}\r\n            npwpError={npwpError}\r\n            districtError={districtError}\r\n            subDistrictError={subDistrictError}\r\n            contactPersonError={contactPersonError}\r\n            emailError={emailError}\r\n            province={province}\r\n            setProvince={setProvince}\r\n            provinceError={provinceError}\r\n            image={image}\r\n            imageView={imageView}\r\n            setImage={setImage}\r\n            setImageView={setImageView}\r\n            onSubmit={handleOnSubmit}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CompanyPage;\r\n","import { withStyles, createStyles, Theme, TableCell } from '@material-ui/core';\r\nimport { GREY, BLACK_2 } from 'constants/colors';\r\n\r\nconst TableCellStart = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      border: `1px solid ${GREY}`,\r\n      borderTopLeftRadius: 5,\r\n      borderBottomLeftRadius: 5,\r\n      borderRight: 'none',\r\n      color: BLACK_2,\r\n      fontWeight: 500,\r\n      fontSize: '15px',\r\n      lineHeight:'18px',\r\n    }\r\n  })\r\n)(TableCell);\r\n\r\nconst TableCellEnd = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n        border: `1px solid ${GREY}`,\r\n        borderTopRightRadius: 5,\r\n        borderBottomRightRadius: 5,\r\n        borderLeft: 'none'\r\n    }\r\n  })\r\n)(TableCell);\r\n\r\nconst TableCellMiddle = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      border: `1px solid ${GREY}`,\r\n      borderRight: 'none',\r\n      borderLeft: 'none'\r\n    }\r\n  })\r\n)(TableCell);\r\n\r\nexport { TableCellStart, TableCellEnd, TableCellMiddle };\r\n","import { withStyles, createStyles, TableRow } from '@material-ui/core';\r\n\r\nconst TableRowCustom = withStyles(theme =>\r\n  createStyles({\r\n    root: {\r\n      '&:hover': {\r\n        background: '#F7F9FC',\r\n        boxShadow: '0px 5px 12px rgba(0, 0, 0, 0.08)'\r\n      }\r\n    }\r\n  })\r\n)(TableRow);\r\n\r\nexport default TableRowCustom;\r\n","import React, { FC } from 'react';\r\nimport { Button, Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { TableCellMiddle, TableCellEnd, TableCellStart } from 'components/Table/TableCellCustom';\r\nimport TableRowCustom from 'components/Table/TableRowCustom';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport useRouter from 'hooks/useRouter';\r\nimport { RED } from 'constants/colors';\r\n\r\ninterface Props {\r\n  partner: PartnerModel;\r\n  isLoading: boolean;\r\n  onDelete: React.MouseEventHandler;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  deleteButton: {\r\n    color: RED\r\n  }\r\n});\r\n\r\nconst BodyRow: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { partner, isLoading, onDelete } = props;\r\n  const { history } = useRouter();\r\n\r\n  const handleLink = (event: React.MouseEvent<HTMLTableRowElement, MouseEvent>) => {\r\n    event.preventDefault();\r\n    history.push('/mitra/detail', { id: partner.id });\r\n  };\r\n\r\n  return (\r\n    <TableRowCustom onClick={handleLink}>\r\n      <TableCellStart>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : partner.partnerId}</TableCellStart>\r\n      <TableCellMiddle>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : partner.name}</TableCellMiddle>\r\n      <TableCellMiddle>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : partner.address}</TableCellMiddle>\r\n      <TableCellMiddle align='center'>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : partner.partnerType}</TableCellMiddle>\r\n      <TableCellMiddle>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : partner.email}</TableCellMiddle>\r\n      <TableCellMiddle>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : partner.cellPhoneNumber}</TableCellMiddle>\r\n      <TableCellEnd align='center'>\r\n        <Button variant='text' onClick={onDelete} className={classes.deleteButton}>\r\n          Hapus\r\n        </Button>\r\n      </TableCellEnd>\r\n    </TableRowCustom>\r\n  );\r\n};\r\n\r\nexport default BodyRow;\r\n","import React, { FC } from 'react';\r\nimport { TableRow, TablePagination as TablePaginationComponent } from '@material-ui/core';\r\n\r\ninterface Props {\r\n  rowsPerPageOptions: number[];\r\n  count: number;\r\n  rowsPerPage: number;\r\n  page: number;\r\n  size?: 'small' | 'medium' | undefined;\r\n  onChangePage: (event: React.MouseEvent<HTMLButtonElement> | null, page: number) => void;\r\n  onChangeRowsPerPage: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\r\n}\r\n\r\nconst TablePagination: FC<Props> = props => {\r\n  const { rowsPerPageOptions, count, rowsPerPage, page, size, onChangePage, onChangeRowsPerPage } = props;\r\n  return (\r\n    <TableRow>\r\n      <TablePaginationComponent\r\n        size={size}\r\n        rowsPerPageOptions={rowsPerPageOptions}\r\n        count={count}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        SelectProps={{\r\n          inputProps: { 'aria-label': 'Rows per page' },\r\n          native: true\r\n        }}\r\n        onChangePage={onChangePage}\r\n        onChangeRowsPerPage={onChangeRowsPerPage}\r\n        style={{ borderBottom: 'none' }}\r\n      />\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TablePagination;\r\n","import { withStyles, createStyles, Theme, TableCell } from '@material-ui/core';\r\n\r\nconst TableCellHead = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      color: '#BFC5D2',\r\n      padding: '0px 24px 0px 0px',\r\n      border: 'none',\r\n      fontWeight: 500,\r\n      fontSize: '12px',\r\n      lineHeight: '14px',\r\n      letterSpacing: '1.12px',\r\n      textTransform: 'uppercase'\r\n    }\r\n  })\r\n)(TableCell);\r\n\r\nexport default TableCellHead;\r\n","import React, { FC } from 'react';\r\nimport { TableCell, TableSortLabel, Theme, makeStyles, createStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport { LabelImportantTwoTone } from '@material-ui/icons';\r\nimport TableCellHead from './TableCellHead';\r\n\r\ninterface Props {\r\n  id?: string;\r\n  pL?: string;\r\n  pR?: string;\r\n  pT?: string;\r\n  pB?: string;\r\n  align?: 'left' | 'center' | 'right' | 'justify' | 'inherit' | undefined;\r\n  verticalAlign?: 'top' | 'middle' | 'bottom';\r\n  isCheckBox?: boolean;\r\n  orderBy?: string;\r\n  order?: 'asc' | 'desc';\r\n  sort?: boolean;\r\n  onRequestSort?: (event: React.MouseEvent<unknown>, property: string) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: 'none'\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1\r\n    }\r\n  })\r\n);\r\n\r\nconst HeaderCell: FC<Props> = props => {\r\n  const { id, pL, pR, pT, pB, order, orderBy, align, sort, onRequestSort } = props;\r\n  const classes = useStyles(props);\r\n\r\n  const createSortHandler = (property: string) => (event: React.MouseEvent<unknown>) => {\r\n    onRequestSort!(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableCellHead variant='head' align={align} size='small'>\r\n      {sort && sort! ? (\r\n        <TableSortLabel active={orderBy === id} direction={orderBy === id ? order : 'asc'} onClick={createSortHandler(id ? id : '')}>\r\n          {props.children}\r\n          {orderBy === id ? <span className={classes.visuallyHidden}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</span> : null}\r\n        </TableSortLabel>\r\n      ) : (\r\n        props.children\r\n      )}\r\n    </TableCellHead>\r\n  );\r\n};\r\n\r\nexport default HeaderCell;\r\n","import React, { FC } from 'react';\r\nimport { TableRow, Checkbox } from '@material-ui/core';\r\nimport HeaderCell from './HeaderCell';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxOutlinedUncompletedIcon from '@material-ui/icons/IndeterminateCheckBox';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\ninterface Header {\r\n  label: string;\r\n  id?: string;\r\n  pT?: string;\r\n  pR?: string;\r\n  pB?: string;\r\n  pL?: string;\r\n  verticalAlign?: 'top' | 'middle' | 'bottom';\r\n  isCheckBox?: boolean;\r\n  checked?: number[];\r\n  rowsPerPage?: number;\r\n  align?: 'left' | 'center' | 'right' | 'justify' | 'inherit' | undefined;\r\n  sort?: boolean;\r\n  handleCheckAll?: () => void;\r\n}\r\n\r\ninterface Props {\r\n  headers: Header[];\r\n  height?: number | string;\r\n  order?: 'asc' | 'desc';\r\n  orderBy?: string;\r\n  onRequestSort?: (event: React.MouseEvent<unknown>, property: string) => void;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableRow: (props: Props) => ({\r\n    height: '20px'\r\n  }),\r\n  checkBox: {\r\n    '&&:hover': {\r\n      backgroundColor: 'transparent'\r\n    }\r\n  },\r\n  checkBoxSize: {\r\n    fontSize: '16px'\r\n  }\r\n}));\r\n\r\nconst HeaderRow: FC<Props> = props => {\r\n  const classes = useStyles(props);\r\n  const { headers, orderBy, order, onRequestSort } = props;\r\n\r\n  const renderContent = () => {\r\n    return headers.map(header => {\r\n      const countChecked = header.checked && header.checked.length;\r\n      const totalShouldBeChecked = header.rowsPerPage && header.rowsPerPage;\r\n      const renderCheckBoxIcon = () => {\r\n        if (countChecked !== 0) {\r\n          if (countChecked !== totalShouldBeChecked) {\r\n            return <CheckBoxOutlinedUncompletedIcon className={classes.checkBoxSize} />;\r\n          } else {\r\n            return <CheckBoxIcon className={classes.checkBoxSize} />;\r\n          }\r\n        }\r\n      };\r\n      return (\r\n        <HeaderCell\r\n          key={header.label}\r\n          pL={header.pL}\r\n          pR={header.pR}\r\n          pT={header.pT}\r\n          pB={header.pB}\r\n          align={header.align}\r\n          verticalAlign={header.verticalAlign}\r\n          isCheckBox={header.isCheckBox}\r\n          orderBy={orderBy}\r\n          order={order}\r\n          sort={header.sort}\r\n          id={header.id}\r\n          onRequestSort={onRequestSort!}\r\n        >\r\n          {header.isCheckBox ? (\r\n            <Checkbox\r\n              key={header.label}\r\n              icon={<CheckBoxOutlineBlankIcon className={classes.checkBoxSize} />}\r\n              checkedIcon={renderCheckBoxIcon()}\r\n              edge='start'\r\n              color='primary'\r\n              className={classes.checkBox}\r\n              checked={countChecked !== 0 ? true : false}\r\n              tabIndex={-1}\r\n              disableRipple\r\n              onChange={header.handleCheckAll}\r\n            />\r\n          ) : (\r\n            header.label\r\n          )}\r\n        </HeaderCell>\r\n      );\r\n    });\r\n  };\r\n  return <TableRow className={classes.tableRow}>{renderContent()}</TableRow>;\r\n};\r\n\r\nexport default HeaderRow;\r\n","import React, { FC, useState, Fragment, useEffect } from 'react';\r\nimport { Table, TableBody, TableHead, TableRow, TableCell, TextField, makeStyles, Select, MenuItem, FormControl } from '@material-ui/core';\r\nimport BodyRow from './components/BodyRow';\r\nimport TablePagination from 'components/TablePagination';\r\nimport HeaderRow from 'components/Table/HeaderRow';\r\nimport TableCellHead from 'components/Table/TableCellHead';\r\n\r\ninterface Props {\r\n  isLoadingData: boolean;\r\n  count: number;\r\n  currentPage: number;\r\n  rowsPerPage: number;\r\n  partners?: PartnerModel[];\r\n  queryString?: string;\r\n  order: 'asc' | 'desc';\r\n  orderBy: string;\r\n  name: string;\r\n  setName: React.Dispatch<React.SetStateAction<string>>;\r\n  address: string;\r\n  setAddress: React.Dispatch<React.SetStateAction<string>>;\r\n  type: string;\r\n  setType: React.Dispatch<React.SetStateAction<string>>;\r\n  email: string;\r\n  setEmail: React.Dispatch<React.SetStateAction<string>>;\r\n  partnerId: string;\r\n  setPartnerId: React.Dispatch<React.SetStateAction<string>>;\r\n  cellPhoneNumber: string;\r\n  setCellPhoneNumber: React.Dispatch<React.SetStateAction<string>>;\r\n  setOrder: React.Dispatch<React.SetStateAction<'asc' | 'desc'>>;\r\n  setOrderBy: React.Dispatch<React.SetStateAction<string>>;\r\n  handleChangeRowsPerPage: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\r\n  handleChangePage: (event: React.MouseEvent<HTMLButtonElement> | null, page: number) => void;\r\n  handleConfirmationDelete: (id: number) => React.MouseEventHandler;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    borderCollapse: 'separate',\r\n    borderSpacing: '0 8px'\r\n  }\r\n});\r\n\r\nconst dummyPartner: PartnerModel = {\r\n  id: 0,\r\n  partnerId: '',\r\n  name: '',\r\n  address: '',\r\n  areaCode: '',\r\n  businessEntity: '',\r\n  cellPhoneNumber: '',\r\n  email: '',\r\n  notes: '',\r\n  phoneNumber: '',\r\n  postalCode: 0,\r\n  regionName: '',\r\n  virtualAccount: '',\r\n  website: '',\r\n  partnerType: 'SUPPLIER'\r\n};\r\n\r\nconst PartnerTable: FC<Props> = props => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    isLoadingData,\r\n    count,\r\n    currentPage,\r\n    rowsPerPage,\r\n    partners,\r\n    order,\r\n    orderBy,\r\n    name,\r\n    setName,\r\n    address,\r\n    setAddress,\r\n    type,\r\n    setType,\r\n    email,\r\n    setEmail,\r\n    partnerId,\r\n    setPartnerId,\r\n    cellPhoneNumber,\r\n    setCellPhoneNumber,\r\n    handleChangePage,\r\n    handleChangeRowsPerPage,\r\n    setOrder,\r\n    setOrderBy,\r\n    queryString,\r\n    handleConfirmationDelete\r\n  } = props;\r\n\r\n  const [showSkeleton, setShowSkeleton] = useState<boolean>(false);\r\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: string) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoadingData) {\r\n      setShowSkeleton(true);\r\n    }\r\n    return () => {\r\n      setShowSkeleton(false);\r\n    };\r\n  }, [isLoadingData]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <HeaderRow\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            headers={[\r\n              { id: 'partnerId', label: 'ID', sort: true },\r\n              { id: 'name', label: 'NAMA MITRA', sort: true },\r\n              { id: 'address', label: 'ALAMAT', sort: true },\r\n              { id: 'partnerType', label: 'TYPE', align: 'center', sort: true },\r\n              { id: 'email', label: 'EMAIL', sort: true },\r\n              { id: 'cellPhoneNumber', label: 'NO. HANDPHONE', sort: true },\r\n              { label: '' }\r\n            ]}\r\n          />\r\n          <TableRow>\r\n            <TableCellHead variant='head'>\r\n              <TextField id='partnerId' value={partnerId} onChange={event => setPartnerId(event.target.value)} />\r\n            </TableCellHead>\r\n            <TableCellHead variant='head'>\r\n              <TextField id='name' value={name} onChange={event => setName(event.target.value)} />\r\n            </TableCellHead>\r\n            <TableCellHead variant='head'>\r\n              <TextField id='address' value={address} onChange={event => setAddress(event.target.value)} />\r\n            </TableCellHead>\r\n            <TableCellHead variant='head'>\r\n              <FormControl fullWidth variant='outlined' size='small'>\r\n                <Select id='type' value={type as string} placeholder='Type' onChange={event => setType(event.target.value as string)}>\r\n                  <MenuItem key={1} value='SUPPLIER'>\r\n                    Supplier\r\n                  </MenuItem>\r\n                  <MenuItem key={2} value='CUSTOMER'>\r\n                    Customer\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </TableCellHead>\r\n            <TableCellHead variant='head'>\r\n              <TextField id='email' variant='outlined' value={email} onChange={event => setEmail(event.target.value)} size='small' />\r\n            </TableCellHead>\r\n            <TableCellHead variant='head'>\r\n              <TextField\r\n                id='cellPhoneNumber'\r\n                variant='outlined'\r\n                value={cellPhoneNumber}\r\n                onChange={event => setCellPhoneNumber(event.target.value)}\r\n                size='small'\r\n              />\r\n            </TableCellHead>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {showSkeleton ? (\r\n            [0, 1, 2, 3].map(index => (\r\n              <BodyRow key={index + 1} isLoading={showSkeleton} partner={dummyPartner} onDelete={handleConfirmationDelete(0)} />\r\n            ))\r\n          ) : partners && partners.length > 0 ? (\r\n            partners.map((value, index) => (\r\n              <BodyRow key={index + 1} isLoading={showSkeleton} partner={value} onDelete={handleConfirmationDelete(value.id)} />\r\n            ))\r\n          ) : (\r\n            <Fragment>\r\n              <TableRow>\r\n                <TableCell colSpan={7} align='center'>\r\n                  {queryString ? 'No matching result' : 'Data Not Available'}\r\n                </TableCell>\r\n              </TableRow>\r\n            </Fragment>\r\n          )}\r\n\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 15]}\r\n            count={count}\r\n            rowsPerPage={rowsPerPage}\r\n            page={currentPage}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </TableBody>\r\n      </Table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PartnerTable;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport {\r\n  makeStyles,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Tabs,\r\n  Tab,\r\n  Button,\r\n  FormControl,\r\n  Typography,\r\n  Grid,\r\n  IconButton,\r\n  FormHelperText,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport {\r\n  PARTNER_BASE_URL,\r\n  PARTNER_LAST_ID_BASE_URL,\r\n  WILAYAH_PROVINSI_BASE_URL,\r\n  WILAYAH_KABUPATEN_BASE_URL,\r\n  WILAYAH_KECAMATAN_BASE_URL,\r\n  ZONE_BASE_URL\r\n} from 'constants/url';\r\nimport { isValidEmail } from 'utils';\r\nimport { GREY } from 'constants/colors';\r\n\r\ninterface Props {\r\n  partners: PartnerModel[];\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setPartners: React.Dispatch<React.SetStateAction<PartnerModel[]>>;\r\n  handleSnackBar: (open: boolean, variant: 'success' | 'error', message: string) => void;\r\n}\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  dir?: string;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  notesGrid: {\r\n    marginTop: 10\r\n  },\r\n  buttonGrid: {\r\n    marginTop: 10\r\n  },\r\n  tabGrid: {\r\n    marginBottom: 10\r\n  },\r\n  gridWrapper: {\r\n    padding: '12px'\r\n  },\r\n  paper: {\r\n    border: '1px solid #E0E0E0',\r\n    boxSizing: 'border-box',\r\n    boxShadow: '0px 5px 12px rgba(0, 0, 0, 0.08)',\r\n    borderRadius: '5px',\r\n    width: '100%'\r\n  },\r\n  select:{  }\r\n});\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div role='tabpanel' hidden={value !== index} id={`full-width-tabpanel-${index}`} aria-labelledby={`full-width-tab-${index}`} {...other}>\r\n      {value === index && <div>{children}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst a11yProps = (index: any) => {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`\r\n  };\r\n};\r\n\r\nconst dummyRegion: RegionModel = {\r\n  code: '',\r\n  name: ''\r\n};\r\n\r\nconst dummyZone: ZoneModel = {\r\n  id: 0,\r\n  name: ''\r\n};\r\n\r\nconst PartnerWizard: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { partners, setPartners, setOpen, handleSnackBar } = props;\r\n  const [partnerId, setPartnerId] = useState<string>('');\r\n  const [name, setName] = useState<string>('');\r\n  const [address, setAddress] = useState<string>('');\r\n  const [type, setType] = useState<string>('');\r\n  const [email, setEmail] = useState<string>('');\r\n  const [cellPhoneNumber, setCellPhoneNumber] = useState<string>('');\r\n  const [phoneNumber, setPhoneNumber] = useState<string>('');\r\n  const [website, setWebsite] = useState<string>('');\r\n  const [virtualAccount, setVirtualAccount] = useState<string>('');\r\n  const [notes, setNotes] = useState<string>('');\r\n  const [value, setValue] = useState(0);\r\n  const [postalCode, setPostalCode] = useState<number>();\r\n  const [partnerType, setPartnerType] = useState<'SUPPLIER' | 'CUSTOMER'>('SUPPLIER');\r\n  const [provinsi, setProvinsi] = useState<RegionModel>(dummyRegion);\r\n  const [kabupaten, setKabupaten] = useState<RegionModel>(dummyRegion);\r\n  const [kecamatan, setKecamatan] = useState<RegionModel>(dummyRegion);\r\n  const [zone, setZone] = useState<ZoneModel>(dummyZone);\r\n  const [route, setRoute] = useState<ZoneModel[]>([dummyZone]);\r\n  const [region, setRegion] = useState<RegionModel[]>([dummyRegion]);\r\n  const [isSubmit, setSubmit] = useState<boolean>(false);\r\n  const [nameMessage, setNameMessage] = useState<string>('');\r\n  const [emailMessage, setEmailMessage] = useState<string>('');\r\n  const [addressMessage, setAddressMessage] = useState<string>('');\r\n  const [businessEntityMessage, setBusinessEntityMessage] = useState<string>('');\r\n  const [provinsiMessage, setProvinsiMessage] = useState<string>('');\r\n  const [kabupatenMessage, setKabupatenMessage] = useState<string>('');\r\n  const [kecamatanMessage, setKecamatanMessage] = useState<string>('');\r\n  const [postalCodeMessage, setPostalCodeMessage] = useState<string>('');\r\n  const [zoneMessage, setZoneMessage] = useState<string>('');\r\n  const [phoneNumberMessage, setPhoneNumberMessage] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n      try {\r\n        const { data } = await axios.get(`${PARTNER_LAST_ID_BASE_URL}`, { cancelToken: cancelTokenSource.token });\r\n        setPartnerId(data.data.partnerId);\r\n      } catch (error) {\r\n        console.log('error :', error);\r\n      }\r\n    };\r\n    fetch();\r\n  }, []);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleSearchProvinsi = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${WILAYAH_PROVINSI_BASE_URL}?${params.toString()}`, { cancelToken: cancelTokenSource.token });\r\n      setRegion(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n\r\n  const handleSearchKabupaten = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${WILAYAH_KABUPATEN_BASE_URL(provinsi.code)}?${params.toString()}`, { cancelToken: cancelTokenSource.token });\r\n      setRegion(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n\r\n  const handleSearchZone = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${ZONE_BASE_URL}?${params.toString()}`, { cancelToken: cancelTokenSource.token });\r\n      setRoute(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n\r\n  const handleSearchKecamatan = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${WILAYAH_KECAMATAN_BASE_URL(kabupaten.code)}?${params.toString()}`, {\r\n        cancelToken: cancelTokenSource.token\r\n      });\r\n      setRegion(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    resetValidation();\r\n\r\n    if (!validation()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSubmit(true);\r\n      const region = provinsi.name + ', ' + kabupaten.name + ', ' + kecamatan.name;\r\n      const { data } = await axios.post(\r\n        `${PARTNER_BASE_URL}`,\r\n        {\r\n          id: 0,\r\n          partnerId,\r\n          name,\r\n          partnerType,\r\n          phoneNumber,\r\n          cellPhoneNumber,\r\n          email,\r\n          address,\r\n          notes,\r\n          website,\r\n          postalCode,\r\n          areaCode: kecamatan.code,\r\n          regionName: region,\r\n          ZoneId: zone.id,\r\n          businessEntity: type,\r\n          virtualAccount\r\n        },\r\n        {\r\n          cancelToken: cancelTokenSource.token\r\n        }\r\n      );\r\n\r\n      setPartners([data.data, ...partners]);\r\n      setOpen(false);\r\n      handleSnackBar(true, 'success', 'Partner berhasil ditambahkan');\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n      handleSnackBar(true, 'error', 'Partner gagal ditambahkan');\r\n    }\r\n    setSubmit(false);\r\n  };\r\n\r\n  const validation = (): boolean => {\r\n    let valid = true;\r\n\r\n    if (name === '' || !name) {\r\n      setNameMessage('Nama tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (!isValidEmail(email)) {\r\n      setEmailMessage('Email tidak valid.');\r\n      valid = false;\r\n    } else if (email === '' || !email) {\r\n      setEmailMessage('Email tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (phoneNumber === '' && !phoneNumber) {\r\n      setPhoneNumberMessage('No telepon tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (address === '' && !addressMessage) {\r\n      setAddressMessage('Alamat tidak boleh kosong,');\r\n      valid = false;\r\n    }\r\n\r\n    if (provinsi.name === '' || provinsi.code === '') {\r\n      setProvinsiMessage('Asal provinsi tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    if (kabupaten.name === '' || kabupaten.code === '') {\r\n      setKabupatenMessage('Asal provinsi tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    if (kecamatan.name === '' || kecamatan.code === '') {\r\n      setKecamatanMessage('Asal provinsi tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    if (!postalCode) {\r\n      setPostalCodeMessage('Kode Pos tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (type === '' || !type) {\r\n      setBusinessEntityMessage('Badan Usaha tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    if (zone.id === 0 || zone.name === '') {\r\n      setZoneMessage('Badan Usaha tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    return valid;\r\n  };\r\n\r\n  const resetValidation = () => {\r\n    setNameMessage('');\r\n    setEmailMessage('');\r\n    setPhoneNumberMessage('');\r\n    setAddressMessage('');\r\n    setProvinsiMessage('');\r\n    setKabupatenMessage('');\r\n    setKecamatanMessage('');\r\n    setPostalCodeMessage('');\r\n    setBusinessEntityMessage('');\r\n  };\r\n\r\n  return (\r\n    <Grid container direction='row' className={classes.gridWrapper}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container direction='row' item lg={12} md={12} sm={12} justify='space-between'>\r\n          <Grid container item lg={6} sm={6} md={6} xs={6} justify='center'>\r\n            <IconButton onClick={() => setPartnerType('SUPPLIER')}>Supllier</IconButton>\r\n          </Grid>\r\n\r\n          <Grid container item lg={6} sm={6} md={6} xs={6} justify='center'>\r\n            <IconButton onClick={() => setPartnerType('CUSTOMER')}>Reseller</IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n      <Grid container direction='row' justify='center' className={classes.tabGrid}>\r\n        <Tabs value={value} indicatorColor='primary' onChange={handleChange} aria-label='disabled tabs example'>\r\n          <Tab label='Informasi' {...a11yProps(0)} />\r\n          <Tab label='Alamat' {...a11yProps(1)} />\r\n        </Tabs>\r\n      </Grid>\r\n\r\n      <TabPanel value={value} index={0}>\r\n        <Grid container direction='row' justify='space-between'>\r\n          <Grid container item lg={6} sm={6} md={6} xs={6} spacing={1}>\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='partnerId'\r\n                required\r\n                fullWidth\r\n                placeholder='ID Mitra'\r\n                value={partnerId}\r\n                onChange={event => setPartnerId(event.target.value)}\r\n                disabled\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='name'\r\n                name='name'\r\n                required\r\n                fullWidth\r\n                placeholder='Nama *'\r\n                value={name}\r\n                onChange={event => setName(event.target.value)}\r\n                error={nameMessage !== ''}\r\n                helperText={nameMessage}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='phoneNumber'\r\n                required\r\n                fullWidth\r\n                placeholder='No Telepon *'\r\n                value={phoneNumber}\r\n                onChange={event => setPhoneNumber(event.target.value)}\r\n                error={phoneNumberMessage !== ''}\r\n                helperText={phoneNumberMessage}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='website'\r\n                required\r\n                fullWidth\r\n                placeholder='Laman Website'\r\n                value={website}\r\n                onChange={event => setWebsite(event.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container item lg={6} sm={6} md={6} xs={6} spacing={1}>\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <FormControl fullWidth variant='outlined' size='small' className={classes.select}>\r\n                <Select\r\n                  id='type'\r\n                  value={type as string}\r\n                  placeholder='Badan Usaha *'\r\n                  onChange={event => setType(event.target.value as string)}\r\n                  error={businessEntityMessage !== ''}\r\n                >\r\n                  <MenuItem key={1} value='PT' disabled>\r\n                    Badan Usaha\r\n                  </MenuItem>\r\n                  <MenuItem key={2} value='PT'>\r\n                    PT\r\n                  </MenuItem>\r\n                  <MenuItem key={3} value='CV'>\r\n                    CV\r\n                  </MenuItem>\r\n                  <MenuItem key={4} value='Firma'>\r\n                    Firma\r\n                  </MenuItem>\r\n                  <MenuItem key={5} value='Koperasi'>\r\n                    Koperasi\r\n                  </MenuItem>\r\n                  <MenuItem key={5} value='Perorangan'>\r\n                    Perorangan\r\n                  </MenuItem>\r\n                </Select>\r\n                {businessEntityMessage !== '' && <FormHelperText>{businessEntityMessage}</FormHelperText>}\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='email'\r\n                name='email'\r\n                required\r\n                fullWidth\r\n                placeholder='Email '\r\n                value={email}\r\n                onChange={event => setEmail(event.target.value)}\r\n                error={emailMessage !== ''}\r\n                helperText={emailMessage}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='cellPhoneNumber'\r\n                required\r\n                fullWidth\r\n                placeholder='No Handphone '\r\n                value={cellPhoneNumber}\r\n                onChange={event => setCellPhoneNumber(event.target.value)}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='virtualAccount'\r\n                required\r\n                fullWidth\r\n                placeholder='No Virtual Account'\r\n                value={virtualAccount}\r\n                onChange={event => setVirtualAccount(event.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={1}>\r\n        <Grid container direction='row' justify='space-between'>\r\n          <Grid container direction='row' item lg={6} sm={6} md={6} xs={6} spacing={1}>\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='address'\r\n                required\r\n                fullWidth\r\n                placeholder='Alamat'\r\n                value={address}\r\n                onChange={event => setAddress(event.target.value)}\r\n                error={addressMessage !== ''}\r\n                helperText={addressMessage}\r\n              />``\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <Autocomplete\r\n                id='kabupaten'\r\n                fullWidth\r\n                value={kabupaten}\r\n                options={region}\r\n                getOptionLabel={option => option.name}\r\n                onChange={(event: any, value: any) => {\r\n                  setKabupaten(value);\r\n                  setRegion([dummyRegion]);\r\n                }}\r\n                renderInput={params => (\r\n                  <TextField\r\n                    {...params}\r\n                    fullWidth\r\n                    placeholder='Kabupaten *'\r\n                    size='small'\r\n                    onChange={handleSearchKabupaten}\r\n                    variant='outlined'\r\n                    error={kabupatenMessage !== ''}\r\n                    helperText={kabupatenMessage}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <Autocomplete\r\n                id='zone'\r\n                fullWidth\r\n                value={zone}\r\n                options={route}\r\n                getOptionLabel={option => option.name}\r\n                onChange={(event: any, value: any) => setZone(value)}\r\n                renderInput={params => (\r\n                  <TextField\r\n                    {...params}\r\n                    placeholder='Route *'\r\n                    size='small'\r\n                    onChange={handleSearchZone}\r\n                    variant='outlined'\r\n                    error={zoneMessage !== ''}\r\n                    helperText={zoneMessage}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container direction='row' item lg={6} sm={6} md={6} xs={6} spacing={1}>\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <Autocomplete\r\n                id='provinsi'\r\n                fullWidth\r\n                value={provinsi}\r\n                options={region}\r\n                getOptionLabel={option => option.name}\r\n                onChange={(event: any, value: any) => {\r\n                  setProvinsi(value);\r\n                  setRegion([dummyRegion]);\r\n                }}\r\n                renderInput={params => (\r\n                  <TextField\r\n                    {...params}\r\n                    placeholder='Provinsi *'\r\n                    size='small'\r\n                    onChange={handleSearchProvinsi}\r\n                    variant='outlined'\r\n                    error={provinsiMessage !== ''}\r\n                    helperText={provinsiMessage}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <Autocomplete\r\n                id='kecamatan'\r\n                fullWidth\r\n                value={kecamatan}\r\n                options={region}\r\n                getOptionLabel={option => option.name}\r\n                onChange={(event: any, value: any) => {\r\n                  setKecamatan(value);\r\n                  setRegion([dummyRegion]);\r\n                }}\r\n                renderInput={params => (\r\n                  <TextField\r\n                    {...params}\r\n                    placeholder='Kecamatan *'\r\n                    size='small'\r\n                    onChange={handleSearchKecamatan}\r\n                    variant='outlined'\r\n                    error={kecamatanMessage !== ''}\r\n                    helperText={kecamatanMessage}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='postalCode'\r\n                required\r\n                fullWidth\r\n                placeholder='Kode Pos '\r\n                type='number'\r\n                value={postalCode}\r\n                onChange={event => setPostalCode(+event.target.value)}\r\n                error={postalCodeMessage !== ''}\r\n                helperText={postalCodeMessage}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </TabPanel>\r\n\r\n      <Grid container direction='row' className={classes.notesGrid}>\r\n        <Grid item lg={12} sm={12} md={12} xs={12}>\r\n          <TextField\r\n            id='notes'\r\n            rows={4}\r\n            multiline\r\n            required\r\n            fullWidth\r\n            placeholder='Keterangan '\r\n            value={notes}\r\n            onChange={event => setNotes(event.target.value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container item lg={12} md={12} sm={12} xs={12} spacing={1} justify='flex-end' className={classes.buttonGrid}>\r\n        <Grid item>\r\n          <Button disabled={isSubmit} color='secondary' onClick={() => setOpen(false)}>\r\n            Batal\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button type='submit' disabled={isSubmit} onClick={handleOnSubmit}>\r\n            Simpan\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PartnerWizard;\r\n","import React, { FC, Fragment } from 'react';\r\nimport { createStyles, makeStyles, Modal, Theme, Typography, IconButton, Paper, WithStyles, withStyles } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport PartnerWizard from './components/PartnerWizard';\r\n\r\ninterface Props {\r\n  partners: PartnerModel[];\r\n  open: boolean;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setPartners: React.Dispatch<React.SetStateAction<PartnerModel[]>>;\r\n  handleSnackBar: (open: boolean, variant: 'success' | 'error', message: string) => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2)\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1)\r\n    }\r\n  });\r\n\r\ninterface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      position: 'absolute',\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2),\r\n      outline: 'none',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      borderRadius: 4\r\n    }\r\n  })\r\n);\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant='h6'>{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label='close' className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}))(MuiDialogContent);\r\n\r\nconst PartnerModal: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { partners, open, setOpen, setPartners, handleSnackBar } = props;\r\n\r\n  const handleClose = (event: {}, reason: 'backdropClick' | 'escapeKeyDown') => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog\r\n        maxWidth={'md'}\r\n        fullWidth={true}\r\n        disableBackdropClick={true}\r\n        onClose={handleClose}\r\n        aria-labelledby='customized-dialog-title'\r\n        open={open}\r\n      >\r\n        <DialogTitle id='customized-dialog-title' onClose={() => setOpen(false)}>\r\n          <Typography id='modal-title' variant='h1' component='h1'>\r\n            Tambah Mitra Baru\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <PartnerWizard partners={partners} setPartners={setPartners} setOpen={setOpen} handleSnackBar={handleSnackBar} />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PartnerModal;\r\n","import React, { FC, useEffect, useCallback, useState } from 'react';\r\nimport { Grid, Container, Typography, makeStyles, Button, Paper } from '@material-ui/core';\r\nimport { AddBox } from '@material-ui/icons';\r\nimport { Page, StandardConfirmationDialog, PaperCustom, Breadcrumb } from 'components';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { PARTNER_BASE_URL } from 'constants/url';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport PartnerTable from './components/PartnerTable';\r\nimport PartnerModal from './components/PartnerModal';\r\n\r\nconst useStyles = makeStyles({\r\n  titleWrapper: {\r\n    marginTop: 24\r\n  }\r\n});\r\n\r\nconst dummyPartner: PartnerModel = {\r\n  id: 0,\r\n  partnerId: '',\r\n  name: '',\r\n  address: '',\r\n  areaCode: '',\r\n  businessEntity: '',\r\n  cellPhoneNumber: '',\r\n  email: '',\r\n  notes: '',\r\n  phoneNumber: '',\r\n  postalCode: 0,\r\n  regionName: '',\r\n  virtualAccount: '',\r\n  website: '',\r\n  partnerType: 'SUPPLIER'\r\n};\r\n\r\nconst PartnerPage: FC = () => {\r\n  const styles = useStyles();\r\n\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [count, setCount] = useState<number>(0);\r\n  const [query, setQuery] = useState<string>('');\r\n  const [queryString, setQueryString] = useState<string>();\r\n  const [isLoadingData, setIsLoadingData] = useState<boolean>(false);\r\n  const [currentPage, setCurrentPage] = useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(10);\r\n  const [partners, setPartners] = useState<PartnerModel[]>([dummyPartner]);\r\n  const [order, setOrder] = useState<'asc' | 'desc'>('asc');\r\n  const [orderBy, setOrderBy] = useState<string>('id');\r\n  const [partnerId, setPartnerId] = useState<string>('');\r\n  const [name, setName] = useState<string>('');\r\n  const [address, setAddress] = useState<string>('');\r\n  const [type, setType] = useState<string>('');\r\n  const [email, setEmail] = useState<string>('');\r\n  const [cellPhoneNumber, setCellPhoneNumber] = useState<string>('');\r\n  const [selectedId, setSelectedId] = useState<number>();\r\n  const [confirmationDelete, setConfirmationDelete] = useState<boolean>(false);\r\n  const [snackbarVariant, setSnackbarVariant] = useState<'success' | 'error'>('success');\r\n  const [message, setMessage] = useState<string>('');\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    setIsLoadingData(true);\r\n\r\n    const getQueryParams = () => {\r\n      const params = new URLSearchParams();\r\n      if (queryString) {\r\n        params.append('keyword', queryString);\r\n      }\r\n\r\n      if (name) {\r\n        params.append('keyword', name);\r\n      }\r\n\r\n      if (address) {\r\n        params.append('keyword', address);\r\n      }\r\n\r\n      if (email) {\r\n        params.append('keyword', email);\r\n      }\r\n\r\n      if (cellPhoneNumber) {\r\n        params.append('keyword', cellPhoneNumber);\r\n      }\r\n\r\n      if (partnerId) {\r\n        params.append('keyword', partnerId);\r\n      }\r\n\r\n      if (type) {\r\n        params.append('keyword', type);\r\n      }\r\n\r\n      if (orderBy || order) {\r\n        params.append('orderBy', orderBy);\r\n        params.append('ordered', order);\r\n      }\r\n\r\n      params.append('perPage', rowsPerPage.toString());\r\n      params.append('page', currentPage.toString());\r\n\r\n      return params.toString();\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`${PARTNER_BASE_URL}?${getQueryParams()}`, { cancelToken: cancelTokenSource.token });\r\n      setPartners(data.data);\r\n      setCount(data.meta.total);\r\n    } catch (error) {}\r\n    setIsLoadingData(false);\r\n    return () => {\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, [queryString, orderBy, order, name, address, email, partnerId, cellPhoneNumber, type, currentPage, rowsPerPage]);\r\n\r\n  const performActionAndRevertPage = (action: React.Dispatch<React.SetStateAction<any>>, actionParam: any) => {\r\n    setCurrentPage(0);\r\n    action(actionParam);\r\n  };\r\n\r\n  const handleSearch = useCallback((searchQuery: string) => {\r\n    performActionAndRevertPage(setQueryString, searchQuery);\r\n  }, []);\r\n\r\n  const debouncedSearchTerm = useDebounce(query, 500);\r\n\r\n  useEffect(() => {\r\n    if (debouncedSearchTerm.length >= 3) {\r\n      handleSearch(debouncedSearchTerm);\r\n    } else if (debouncedSearchTerm.length === 0) {\r\n      handleSearch(debouncedSearchTerm);\r\n    }\r\n  }, [debouncedSearchTerm, handleSearch]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const handleConfirmationDelete = (id: number): React.MouseEventHandler => () => {\r\n    setSelectedId(id);\r\n    setConfirmationDelete(true);\r\n  };\r\n\r\n  const handleCloseConfirmationDelete = () => {\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const deletePartner = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    try {\r\n      await axios.delete(`${PARTNER_BASE_URL}/${selectedId}`, { cancelToken: cancelTokenSource.token });\r\n      setPartners(partners.filter(value => value.id !== selectedId));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const handleSnackBar = (open: boolean, variant: 'success' | 'error', message: string) => {\r\n    setSnackbarVariant(variant);\r\n    setOpenSnackbar(open);\r\n    setMessage(message);\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n    <Page title='Mitra'>\r\n      <Container>\r\n        <Grid container direction='row'>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Typography variant='h1' component='h1'>\r\n              Semua Mitra\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Breadcrumb />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <PaperCustom>\r\n          <Grid container direction='row'>\r\n            <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n              <Grid container direction='row' justify='space-between'>\r\n                <Grid container item lg={6} sm={6} md={6} justify='flex-start' alignItems='center'>\r\n                  <Grid item></Grid>\r\n                </Grid>\r\n\r\n                <Grid container item lg={6} sm={6} md={6} justify='flex-end' alignItems='center'>\r\n                  <Grid item>\r\n                    <Button onClick={() => setOpen(true)}>\r\n                      <AddBox fontSize='small' /> &nbsp; Tambah Mitra\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <PartnerTable\r\n                isLoadingData={isLoadingData}\r\n                count={count}\r\n                currentPage={currentPage}\r\n                rowsPerPage={rowsPerPage}\r\n                partners={partners}\r\n                queryString={queryString}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                name={name}\r\n                setName={setName}\r\n                address={address}\r\n                setAddress={setAddress}\r\n                type={type}\r\n                setType={setType}\r\n                email={email}\r\n                setEmail={setEmail}\r\n                partnerId={partnerId}\r\n                setPartnerId={setPartnerId}\r\n                cellPhoneNumber={cellPhoneNumber}\r\n                setCellPhoneNumber={setCellPhoneNumber}\r\n                setOrder={setOrder}\r\n                setOrderBy={setOrderBy}\r\n                handleChangeRowsPerPage={event => performActionAndRevertPage(setRowsPerPage, +event.target.value)}\r\n                handleChangePage={(event, page) => setCurrentPage(page)}\r\n                handleConfirmationDelete={handleConfirmationDelete}\r\n              />\r\n\r\n              <PartnerModal partners={partners} open={open} setOpen={setOpen} setPartners={setPartners} handleSnackBar={handleSnackBar} />\r\n\r\n              <StandardConfirmationDialog\r\n                variant={snackbarVariant}\r\n                titleMessage={snackbarVariant === 'success' ? 'Success!' : 'Error!'}\r\n                message={message}\r\n                open={openSnackbar}\r\n                handleClose={handleCloseSnackbar}\r\n                onConfirm={handleCloseSnackbar}\r\n                noCancelButton={true}\r\n              />\r\n\r\n              <StandardConfirmationDialog\r\n                variant={'danger'}\r\n                titleMessage={'Delete'}\r\n                message={'Are you sure want to delete this data?'}\r\n                open={confirmationDelete}\r\n                handleClose={handleCloseConfirmationDelete}\r\n                onConfirm={deletePartner}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </PaperCustom>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default PartnerPage;\r\n","import React, { FC } from 'react';\r\nimport { Tooltip, IconButton } from '@material-ui/core';\r\nimport { EditOutlined, DeleteOutline } from '@material-ui/icons';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { TableCellMiddle, TableCellEnd, TableCellStart } from 'components/Table/TableCellCustom';\r\nimport TableRowCustom from 'components/Table/TableRowCustom';\r\n\r\ninterface Props {\r\n  category: CategoryModel;\r\n  isLoading: boolean;\r\n  onDelete: React.MouseEventHandler;\r\n  onUpdate: React.MouseEventHandler;\r\n}\r\n\r\nconst BodyRow: FC<Props> = props => {\r\n  const { category, isLoading, onDelete, onUpdate } = props;\r\n\r\n  return (\r\n    <TableRowCustom>\r\n      <TableCellStart>{isLoading ? <Skeleton variant='text' width={'100%'} height={25} /> : category.name}</TableCellStart>\r\n      <TableCellMiddle>{isLoading ? <Skeleton variant='text' width={'100%'} height={25} /> : ''}</TableCellMiddle>\r\n      <TableCellEnd align='right'>\r\n        {isLoading ? (\r\n          <Skeleton variant='text' width={'100%'} height={25} />\r\n        ) : (\r\n          <>\r\n            <Tooltip title='Hapus Kategori'>\r\n              <IconButton size='small' onClick={onDelete}>\r\n                <DeleteOutline fontSize='small' />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title='Perbaharui Kategori'>\r\n              <IconButton size='small' onClick={onUpdate}>\r\n                <EditOutlined fontSize='small' />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        )}\r\n      </TableCellEnd>\r\n    </TableRowCustom>\r\n  );\r\n};\r\n\r\nexport default BodyRow;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport { Table, TableBody, TableHead, TableRow, TableCell, TextField, makeStyles } from '@material-ui/core';\r\nimport HeaderRow from 'components/Table/HeaderRow';\r\nimport TableCellHead from 'components/Table/TableCellHead';\r\nimport BodyRow from './components/BodyRow';\r\n\r\ninterface Props {\r\n  isLoadingData: boolean;\r\n  categories?: CategoryModel[];\r\n  queryString?: string;\r\n  order: 'asc' | 'desc';\r\n  orderBy: string;\r\n  name: string;\r\n  setName: React.Dispatch<React.SetStateAction<string>>;\r\n  description: string;\r\n  setDescription: React.Dispatch<React.SetStateAction<string>>;\r\n  setOrder: React.Dispatch<React.SetStateAction<'asc' | 'desc'>>;\r\n  setOrderBy: React.Dispatch<React.SetStateAction<string>>;\r\n  handleConfirmationDelete: (id: number) => React.MouseEventHandler;\r\n  handleOnUpdate: (id: number) => React.MouseEventHandler;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  cellStart: {\r\n    width: '20%'\r\n  },\r\n  cellSearch: {},\r\n  table: {\r\n    borderCollapse: 'separate',\r\n    borderSpacing: '0 8px'\r\n  }\r\n});\r\n\r\nconst dummyCategory: CategoryModel = {\r\n  id: 0,\r\n  name: ''\r\n};\r\n\r\nconst CategoryTable: FC<Props> = props => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    isLoadingData,\r\n    categories,\r\n    order,\r\n    orderBy,\r\n    name,\r\n    setName,\r\n    description,\r\n    setDescription,\r\n    setOrder,\r\n    setOrderBy,\r\n    queryString,\r\n    handleConfirmationDelete,\r\n    handleOnUpdate\r\n  } = props;\r\n\r\n  const [showSkeleton, setShowSkeleton] = useState<boolean>(false);\r\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: string) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoadingData) {\r\n      setShowSkeleton(true);\r\n    }\r\n    return () => {\r\n      setShowSkeleton(false);\r\n    };\r\n  }, [isLoadingData]);\r\n\r\n  return (\r\n    <Table className={classes.table}>\r\n      <TableHead>\r\n        <HeaderRow\r\n          order={order}\r\n          orderBy={orderBy}\r\n          onRequestSort={handleRequestSort}\r\n          headers={[{ id: 'name', label: 'Kategori Induk', sort: true }, { id: 'description', label: 'Deskripsi', sort: true }, { label: '' }]}\r\n        />\r\n        <TableRow>\r\n          <TableCellHead variant='head' className={classes.cellStart}>\r\n            <TextField id='name' variant='outlined' value={name} onChange={event => setName(event.target.value)} size='small' margin='dense' />\r\n          </TableCellHead>\r\n          <TableCellHead variant='head' colSpan={2} className={classes.cellSearch}>\r\n            <TextField\r\n              id='description'\r\n              variant='outlined'\r\n              value={description}\r\n              onChange={event => setDescription(event.target.value)}\r\n              size='small'\r\n              margin='dense'\r\n            />\r\n          </TableCellHead>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {showSkeleton ? (\r\n          [0, 1, 2, 3].map(index => (\r\n            <BodyRow\r\n              key={index + 1}\r\n              isLoading={showSkeleton}\r\n              category={dummyCategory}\r\n              onDelete={handleConfirmationDelete(0)}\r\n              onUpdate={handleOnUpdate(0)}\r\n            />\r\n          ))\r\n        ) : categories && categories.length > 0 ? (\r\n          categories.map((value, index) => (\r\n            <BodyRow\r\n              key={index + 1}\r\n              isLoading={showSkeleton}\r\n              category={value}\r\n              onDelete={handleConfirmationDelete(value.id)}\r\n              onUpdate={handleOnUpdate(index)}\r\n            />\r\n          ))\r\n        ) : (\r\n          <TableRow>\r\n            <TableCell colSpan={7} align='center'>\r\n              {queryString ? 'No matching result' : 'Data Not Available'}\r\n            </TableCell>\r\n          </TableRow>\r\n        )}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default CategoryTable;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport { makeStyles, TextField, Button, Grid } from '@material-ui/core';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { CATEGORY_BASE_URL } from 'constants/url';\r\n\r\ninterface Props {\r\n  categories: CategoryModel[];\r\n  category: CategoryModel | null;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setCategories: React.Dispatch<React.SetStateAction<CategoryModel[]>>;\r\n  setCategory: React.Dispatch<React.SetStateAction<CategoryModel | null>>;\r\n  handleSnackBar: (open: boolean, variant: 'success' | 'error', message: string) => void;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  notesGrid: {\r\n    marginTop: 10\r\n  },\r\n  buttonGrid: {\r\n    marginTop: 10\r\n  },\r\n  tabGrid: {\r\n    marginBottom: 10\r\n  }\r\n});\r\n\r\nconst CategoryWizard: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { categories, category, setCategories, setCategory, setOpen, handleSnackBar } = props;\r\n  const [id, setId] = useState<number>(0);\r\n  const [name, setName] = useState<string>('');\r\n  const [description, setDescription] = useState<string>('');\r\n\r\n  const [isSubmit, setSubmit] = useState<boolean>(false);\r\n  const [nameMessage, setNameMessage] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    if (!category) {\r\n      return;\r\n    }\r\n\r\n    setId(category.id);\r\n    setName(category.name);\r\n  }, [category]);\r\n\r\n  const handleOnCancel = (): void => {\r\n    setOpen(false);\r\n    resetForm();\r\n  };\r\n\r\n  const handleOnSubmit = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    resetValidation();\r\n\r\n    if (!validation()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSubmit(true);\r\n      const { data } = await axios.post(\r\n        `${CATEGORY_BASE_URL}`,\r\n        {\r\n          id,\r\n          name,\r\n          description\r\n        },\r\n        {\r\n          cancelToken: cancelTokenSource.token\r\n        }\r\n      );\r\n\r\n      if (category) {\r\n        setCategories(\r\n          categories.map(value => {\r\n            if (value.id === data.data.id) {\r\n              return data.data;\r\n            }\r\n            return value;\r\n          })\r\n        );\r\n        resetForm();\r\n      } else {\r\n        setCategories([data.data, ...categories]);\r\n        resetForm();\r\n      }\r\n\r\n      setOpen(false);\r\n      handleSnackBar(true, 'success', 'Kategori berhasil ditambahkan');\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n      handleSnackBar(true, 'error', 'Kategori gagal ditambahkan');\r\n    }\r\n    setSubmit(false);\r\n  };\r\n\r\n  const validation = (): boolean => {\r\n    let valid = true;\r\n\r\n    if (name === '' || !name) {\r\n      setNameMessage('Nama tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  const resetValidation = () => {\r\n    setNameMessage('');\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setDescription('');\r\n    setId(0);\r\n    setCategory(null);\r\n  };\r\n\r\n  return (\r\n    <Grid container direction='row' spacing={2}>\r\n      <Grid item lg={12} sm={12} md={12} xs={12}>\r\n        <TextField\r\n          id='name'\r\n          name='name'\r\n          required\r\n          fullWidth\r\n          size='small'\r\n          variant='outlined'\r\n          placeholder='Nama *'\r\n          value={name}\r\n          onChange={event => setName(event.target.value)}\r\n          error={nameMessage !== ''}\r\n          helperText={nameMessage}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item lg={12} sm={12} md={12} xs={12}>\r\n        <TextField\r\n          id='Deskripsi'\r\n          rows={4}\r\n          multiline\r\n          required\r\n          fullWidth\r\n          size='small'\r\n          variant='outlined'\r\n          placeholder='Deskripsi '\r\n          value={description}\r\n          onChange={event => setDescription(event.target.value)}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid container item lg={12} md={12} sm={12} xs={12} spacing={2} justify='center' className={classes.buttonGrid}>\r\n        <Grid item>\r\n          <Button disabled={isSubmit} color='secondary' onClick={handleOnCancel}>\r\n            Batal\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button type='submit' disabled={isSubmit} onClick={handleOnSubmit}>\r\n            Simpan\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CategoryWizard;\r\n","import React, { FC, Fragment } from 'react';\r\nimport { createStyles, makeStyles, Modal, Theme, Typography, IconButton, WithStyles, withStyles } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CategoryWizard from './components/CategoryWizard';\r\n\r\ninterface Props {\r\n  categories: CategoryModel[];\r\n  category: CategoryModel | null;\r\n  open: boolean;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setCategories: React.Dispatch<React.SetStateAction<CategoryModel[]>>;\r\n  setCategory: React.Dispatch<React.SetStateAction<CategoryModel | null>>;\r\n  handleSnackBar: (open: boolean, variant: 'success' | 'error', message: string) => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2)\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1)\r\n    }\r\n  });\r\n\r\ninterface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose?: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n   \r\n  })\r\n);\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant='h6'>{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label='close' className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}))(MuiDialogContent);\r\n\r\nconst CategoryModal: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { categories, open, setOpen, category, setCategories, setCategory, handleSnackBar } = props;\r\n\r\n  const handleClose = (event: {}, reason: 'backdropClick' | 'escapeKeyDown') => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog\r\n        maxWidth={'sm'}\r\n        disableBackdropClick={true}\r\n        onClose={handleClose}\r\n        aria-labelledby='customized-dialog-title'\r\n        open={open}\r\n      >\r\n        <DialogTitle id='customized-dialog-title'>\r\n          <Typography id='modal-title' variant='h1' component='h1'>\r\n            {category ? 'Perbaharui Kategori' : 'Tambah Kategori Baru'}\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <CategoryWizard\r\n            category={category}\r\n            categories={categories}\r\n            setCategories={setCategories}\r\n            setCategory={setCategory}\r\n            setOpen={setOpen}\r\n            handleSnackBar={handleSnackBar}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CategoryModal;\r\n","import React, { FC, useEffect, useCallback, useState } from 'react';\r\nimport { Grid, Container, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport { Page, StandardConfirmationDialog, PaperCustom, Breadcrumb } from 'components';\r\nimport { AddBox } from '@material-ui/icons';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { CATEGORY_BASE_URL } from 'constants/url';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport CategoryTable from './components/CategoryTable';\r\nimport CategoryModal from './components/CategoryModal';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles({\r\n  secondGrid: {},\r\n  fourthGrid: {\r\n    marginTop: 20\r\n  },\r\n  iconAddColor: {}\r\n});\r\n\r\nconst dummyCategory: CategoryModel = {\r\n  id: 0,\r\n  name: ''\r\n};\r\n\r\nconst CategoryPage: FC = () => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [count, setCount] = useState<number>(0);\r\n  const [query, setQuery] = useState<string>('');\r\n  const [queryString, setQueryString] = useState<string>();\r\n  const [isLoadingData, setIsLoadingData] = useState<boolean>(false);\r\n  const [currentPage, setCurrentPage] = useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(10);\r\n  const [categories, setCategories] = useState<CategoryModel[]>([dummyCategory]);\r\n  const [category, setCategory] = useState<CategoryModel | null>(null);\r\n  const [order, setOrder] = useState<'asc' | 'desc'>('asc');\r\n  const [orderBy, setOrderBy] = useState<string>('id');\r\n  const [name, setName] = useState<string>('');\r\n  const [description, setDescription] = useState<string>('');\r\n  const [selectedId, setSelectedId] = useState<number>();\r\n  const [confirmationDelete, setConfirmationDelete] = useState<boolean>(false);\r\n  const [snackbarVariant, setSnackbarVariant] = useState<'success' | 'error'>('success');\r\n  const [message, setMessage] = useState<string>('');\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    setIsLoadingData(true);\r\n\r\n    const getQueryParams = () => {\r\n      const params = new URLSearchParams();\r\n      if (queryString) {\r\n        params.append('keyword', queryString);\r\n      }\r\n\r\n      if (name) {\r\n        params.append('keyword', name);\r\n      }\r\n\r\n      if (orderBy || order) {\r\n        params.append('orderBy', orderBy);\r\n        params.append('ordered', order);\r\n      }\r\n\r\n      params.append('page', currentPage.toString());\r\n\r\n      return params.toString();\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`${CATEGORY_BASE_URL}?${getQueryParams()}`, { cancelToken: cancelTokenSource.token });\r\n      setCategories(data.data);\r\n      setCount(data.meta.total);\r\n    } catch (error) {}\r\n    setIsLoadingData(false);\r\n    return () => {\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, [queryString, orderBy, order, name, currentPage, rowsPerPage]);\r\n\r\n  const performActionAndRevertPage = (action: React.Dispatch<React.SetStateAction<any>>, actionParam: any) => {\r\n    setCurrentPage(0);\r\n    action(actionParam);\r\n  };\r\n\r\n  const handleSearch = useCallback((searchQuery: string) => {\r\n    performActionAndRevertPage(setQueryString, searchQuery);\r\n  }, []);\r\n\r\n  const debouncedSearchTerm = useDebounce(query, 500);\r\n\r\n  useEffect(() => {\r\n    if (debouncedSearchTerm.length >= 3) {\r\n      handleSearch(debouncedSearchTerm);\r\n    } else if (debouncedSearchTerm.length === 0) {\r\n      handleSearch(debouncedSearchTerm);\r\n    }\r\n  }, [debouncedSearchTerm, handleSearch]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const handleConfirmationDelete = (id: number): React.MouseEventHandler => () => {\r\n    setSelectedId(id);\r\n    setConfirmationDelete(true);\r\n  };\r\n\r\n  const handleOnUpdate = (id: number): React.MouseEventHandler => () => {\r\n    setOpen(true);\r\n    setCategory(categories[id]);\r\n  };\r\n\r\n  const handleCloseConfirmationDelete = () => {\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const deleteCategory = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    try {\r\n      await axios.delete(`${CATEGORY_BASE_URL}/${selectedId}`, { cancelToken: cancelTokenSource.token });\r\n      setCategories(categories.filter(value => value.id !== selectedId));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const handleSnackBar = (open: boolean, variant: 'success' | 'error', message: string) => {\r\n    setSnackbarVariant(variant);\r\n    setOpenSnackbar(open);\r\n    setMessage(message);\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  const handleOpenForm = (): void => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Page title='Kategori'>\r\n      <Container>\r\n        <Grid container direction='row'>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Typography variant='h1'> Semua Kategori </Typography>\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Breadcrumb />\r\n          </Grid>\r\n        </Grid>\r\n        <PaperCustom>\r\n          <Grid container direction='row' spacing={2} className={classes.secondGrid}>\r\n            <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n              <Grid container direction='row' justify='space-between'>\r\n                <Grid container item lg={8} sm={8} md={8} justify='flex-start' alignItems='center'>\r\n                  <Grid item></Grid>\r\n                </Grid>\r\n\r\n                <Grid container item lg={4} sm={4} md={4} justify='flex-end' alignItems='center'>\r\n                  <Grid item>\r\n                    <Button disabled={isLoadingData} onClick={handleOpenForm}>\r\n                      <AddBox fontSize='small' /> &nbsp; Tambah Kategori\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container justify='center' item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n              <CategoryTable\r\n                isLoadingData={isLoadingData}\r\n                categories={categories}\r\n                queryString={queryString}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                name={name}\r\n                setName={setName}\r\n                description={description}\r\n                setDescription={setDescription}\r\n                setOrder={setOrder}\r\n                setOrderBy={setOrderBy}\r\n                handleConfirmationDelete={handleConfirmationDelete}\r\n                handleOnUpdate={handleOnUpdate}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid container justify='center' item xl={12} md={12} sm={12} className={classes.fourthGrid}>\r\n              <Grid item>\r\n                {categories.length > 0 && (\r\n                  <Pagination\r\n                    count={count}\r\n                    onChange={(event, page) => setCurrentPage(page)}\r\n                    page={currentPage}\r\n                    boundaryCount={2}\r\n                    variant='outlined'\r\n                  />\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <CategoryModal\r\n              category={category}\r\n              categories={categories}\r\n              open={open}\r\n              setOpen={setOpen}\r\n              setCategories={setCategories}\r\n              setCategory={setCategory}\r\n              handleSnackBar={handleSnackBar}\r\n            />\r\n\r\n            <StandardConfirmationDialog\r\n              variant={snackbarVariant}\r\n              titleMessage={snackbarVariant === 'success' ? 'Success!' : 'Error!'}\r\n              message={message}\r\n              open={openSnackbar}\r\n              handleClose={handleCloseSnackbar}\r\n              onConfirm={handleCloseSnackbar}\r\n              noCancelButton={true}\r\n            />\r\n\r\n            <StandardConfirmationDialog\r\n              variant={'danger'}\r\n              titleMessage={'Menghapus Data'}\r\n              message={'Apakah kamu yakin akan menghapus data ini?'}\r\n              open={confirmationDelete}\r\n              handleClose={handleCloseConfirmationDelete}\r\n              onConfirm={deleteCategory}\r\n            />\r\n          </Grid>\r\n        </PaperCustom>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CategoryPage;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { makeStyles, createStyles, Theme, Card, CardMedia, CardContent, Typography } from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport useRouter from 'hooks/useRouter';\r\nimport NumberFormat from 'react-number-format';\r\nimport { GRAY_3, ORANGE, BLACK } from 'constants/colors';\r\n\r\ninterface Props {\r\n  product: ProductModel;\r\n  isLoading: boolean;\r\n  onDelete: React.MouseEventHandler;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      boxShadow: '0px 5px 12px rgba(0, 0, 0, 0.08)'\r\n    },\r\n    media: {\r\n      height: 156\r\n    },\r\n    productImage: {\r\n      position: 'inherit',\r\n      width: '100%',\r\n      heigth: '156'\r\n    },\r\n    title: {\r\n      fontSize: '16px',\r\n      fontStyle: 'normal',\r\n      fontWeight: 500,\r\n      letterSpacing: '0.0075em',\r\n      textAlign: 'left',\r\n      marginBottom: 5,\r\n      color: BLACK\r\n    },\r\n    code: {\r\n      fontSize: '12px',\r\n      lineHeight: '16px',\r\n      fontStyle: 'normal',\r\n      fontWeight: 400,\r\n      letterSpacing: '0.4000000059604645px',\r\n      textAlign: 'left',\r\n      color: GRAY_3,\r\n      marginBottom: '11px'\r\n    },\r\n    price: {\r\n      fontSize: '16px',\r\n      fontStyle: 'normal',\r\n      fontWeight: 700,\r\n      letterSpacing: '0.0075em',\r\n      textAlign: 'left',\r\n      marginBottom: '10px',\r\n      color: ORANGE\r\n    },\r\n    category: {\r\n      fontSize: '12px',\r\n      fontStyle: 'normal',\r\n      fontWeight: 500,\r\n      letterSpacing: '0.1px',\r\n      textAlign: 'left',\r\n      color: GRAY_3\r\n    }\r\n  })\r\n);\r\n\r\nconst dummyProductImage: ProductImageModel = {\r\n  id: 0,\r\n  path: '',\r\n  url: ''\r\n};\r\n\r\nconst dummyCategory: CategoryModel = {\r\n  id: 0,\r\n  name: ''\r\n};\r\n\r\nconst BodyRow: FC<Props> = props => {\r\n  const { product, isLoading, onDelete } = props;\r\n  const { history } = useRouter();\r\n\r\n  const classes = useStyles();\r\n  const [productImage, setProductImage] = useState<ProductImageModel>(dummyProductImage);\r\n  const [category, setCategory] = useState<CategoryModel>(dummyCategory);\r\n\r\n  useEffect(() => {\r\n    if (product.ProductImage) {\r\n      setProductImage(product.ProductImage);\r\n    }\r\n\r\n    if (product.Category) {\r\n      setCategory(product.Category);\r\n    }\r\n  }, [product.ProductImage, product.Category]);\r\n\r\n  const handleLink = () => {\r\n    history.push('/produk/detail', { id: product.id });\r\n  };\r\n\r\n  return (\r\n    <Card onClick={handleLink} elevation={0} className={classes.root}>\r\n      <CardMedia className={classes.media}>\r\n        {isLoading ? <Skeleton variant='rect' width={'100%'} height={156} /> : <img src={productImage.url} className={classes.productImage} />}\r\n      </CardMedia>\r\n      <CardContent>\r\n        <Typography component='p' className={classes.title}>\r\n          {isLoading ? <Skeleton variant='text' width={'100%'} /> : product.productName}\r\n        </Typography>\r\n        <Typography component='p' className={classes.code}>\r\n          {isLoading ? <Skeleton variant='text' width={'100%'} height={20} /> : product.productCode}\r\n        </Typography>\r\n        <Typography component='p' className={classes.price}>\r\n          {isLoading ? (\r\n            <Skeleton variant='text' width={'100%'} height={20} />\r\n          ) : (\r\n            <NumberFormat value={product.sellingPrice} displayType={'text'} thousandSeparator={true} prefix={'Rp'} />\r\n          )}\r\n        </Typography>\r\n        <Typography component='p' className={classes.category}>\r\n          {isLoading ? <Skeleton variant='text' width={'100%'} /> : category.name}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BodyRow;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport { makeStyles, Grid, Typography } from '@material-ui/core';\r\nimport BodyRow from './components/BodyRow';\r\n\r\ninterface Props {\r\n  isLoadingData: boolean;\r\n  count: number;\r\n  currentPage: number;\r\n  rowsPerPage: number;\r\n  products: ProductModel[];\r\n  queryString?: string;\r\n  order: 'asc' | 'desc';\r\n  orderBy: string;\r\n  setOrder: React.Dispatch<React.SetStateAction<'asc' | 'desc'>>;\r\n  setOrderBy: React.Dispatch<React.SetStateAction<string>>;\r\n  handleChangeRowsPerPage: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\r\n  handleChangePage: (event: React.MouseEvent<HTMLButtonElement> | null, page: number) => void;\r\n  handleConfirmationDelete: (id: number) => React.MouseEventHandler;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  thirdGrid: {\r\n    marginTop: 20\r\n  }\r\n});\r\n\r\nconst dummyProduct: ProductModel = {\r\n  id: 0,\r\n  productName: '',\r\n  productCode: '',\r\n  sellingPrice: 0,\r\n  purchasePrice: 0,\r\n  typeUnit: '',\r\n  totalStock: 0,\r\n  description: '',\r\n  isReminder: false,\r\n  minimumStock: 0\r\n};\r\n\r\nconst ProductTable: FC<Props> = props => {\r\n  const classes = useStyles();\r\n\r\n  const { isLoadingData, products, handleConfirmationDelete } = props;\r\n  const [showSkeleton, setShowSkeleton] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (isLoadingData) {\r\n      setShowSkeleton(true);\r\n    }\r\n    return () => {\r\n      setShowSkeleton(false);\r\n    };\r\n  }, [isLoadingData]);\r\n\r\n  return (\r\n    <Grid container direction='row' spacing={2} className={classes.thirdGrid}>\r\n      {showSkeleton ? (\r\n        [0, 1, 2, 3, 4, 5].map(index => (\r\n          <Grid key={index + 1} item lg={2}>\r\n            <BodyRow product={dummyProduct} isLoading={showSkeleton} onDelete={handleConfirmationDelete(0)} />\r\n          </Grid>\r\n        ))\r\n      ) : products && products.length > 0 ? (\r\n        products.map((value, index) => (\r\n          <Grid key={index + 1} item lg={2}>\r\n            <BodyRow product={value} isLoading={showSkeleton} onDelete={handleConfirmationDelete(value.id)} />\r\n          </Grid>\r\n        ))\r\n      ) : (\r\n        <Typography variant='h3'>Produk Belum tersedia</Typography>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductTable;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport {\r\n  makeStyles,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Tabs,\r\n  Tab,\r\n  Button,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Typography,\r\n  Grid,\r\n  FormHelperText,\r\n  LinearProgress\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { PRODUCT_BASE_URL, CATEGORY_BASE_URL } from 'constants/url';\r\nimport { IOSSwitch } from 'components';\r\nimport { useDropzone, FileWithPath } from 'react-dropzone';\r\n\r\ninterface Props {\r\n  products: ProductModel[];\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setProducts: React.Dispatch<React.SetStateAction<ProductModel[]>>;\r\n  handleSnackBar: (open: boolean, variant: 'success' | 'error', message: string) => void;\r\n}\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  dir?: string;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  notesGrid: {\r\n    marginTop: 10\r\n  },\r\n  buttonGrid: {\r\n    marginTop: 10\r\n  },\r\n  tabGrid: {\r\n    marginBottom: 10\r\n  },\r\n  dropZone: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: '#eeeeee',\r\n    borderStyle: 'dashed',\r\n    backgroundColor: '#fafafa',\r\n    color: '#bdbdbd',\r\n    outline: 'none',\r\n    transition: 'border .24s ease-in-out',\r\n    width: '100%'\r\n  },\r\n  thumbsContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    marginTop: 16\r\n  },\r\n  thumb: {\r\n    display: 'inline-flex',\r\n    borderRadius: 2,\r\n    border: '1px solid #eaeaea',\r\n    marginBottom: 8,\r\n    marginRight: 8,\r\n    width: 100,\r\n    height: 100,\r\n    padding: 4,\r\n    boxSizing: 'border-box'\r\n  },\r\n  thumbInner: {\r\n    display: 'flex',\r\n    minWidth: 0,\r\n    overflow: 'hidden'\r\n  },\r\n  img: {\r\n    display: 'block',\r\n    width: 'auto',\r\n    height: '100%'\r\n  },\r\n  inputFile: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div role='tabpanel' hidden={value !== index} id={`full-width-tabpanel-${index}`} aria-labelledby={`full-width-tab-${index}`} {...other}>\r\n      {value === index && <div>{children}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst a11yProps = (index: any) => {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`\r\n  };\r\n};\r\n\r\nconst dummyCategory: CategoryModel = {\r\n  id: 0,\r\n  name: ''\r\n};\r\n\r\nconst ProductWizard: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { products, setProducts, setOpen, handleSnackBar } = props;\r\n  const [productName, setProductName] = useState<string>('');\r\n  const [productCode, setProductCode] = useState<string>('');\r\n  const [sellingPrice, setSellingPrice] = useState<number>();\r\n  const [purchasePrice, setPurchasePrice] = useState<number>();\r\n  const [typeUnit, setTypeUnit] = useState<string>('');\r\n  const [description, setDescription] = useState<string>('');\r\n  const [isReminder, setReminder] = useState<boolean>(false);\r\n  const [minimumStock, setMinimumStock] = useState<number>();\r\n  const [category, setCategory] = useState<CategoryModel>();\r\n  const [categories, setCategories] = useState<CategoryModel[]>([dummyCategory]);\r\n  const [value, setValue] = useState(0);\r\n  const [isSubmit, setSubmit] = useState<boolean>(false);\r\n  const [productNameMessage, setProductNameMessage] = useState<string>('');\r\n  const [productCodeMessage, setProductCodeMessage] = useState<string>('');\r\n  const [typeUnitMessage, setTypeUnitMessage] = useState<string>('');\r\n  const [minimumStockMessage, setMinimumStockMessage] = useState<string>('');\r\n  const [sellingPriceMessage, setSellingPriceMessage] = useState<string>('');\r\n  const [purchasePriceMessage, setPurchasePriceMessage] = useState<string>('');\r\n  const [categoryMessage, setCategoryMessage] = useState<string>('');\r\n  const [files, setFiles] = useState<FileWithPath[]>([]);\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [image, setImage] = useState<[{ path: string; url: string }] | null>(null);\r\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\r\n    accept: ['image/jpeg', 'image/png'],\r\n    maxFiles: 5,\r\n    onDrop: acceptedFiles => {\r\n      setImage(null);\r\n      uploadImage(acceptedFiles);\r\n    }\r\n  });\r\n\r\n  const uploadImage = async (files: FileWithPath[]) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const formData = new FormData();\r\n    files.map((file: any) => formData.append(`image[]`, file));\r\n\r\n    setFiles(\r\n      files.map(file =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file)\r\n        })\r\n      )\r\n    );\r\n\r\n    try {\r\n      const { data } = await axios.post(`${PRODUCT_BASE_URL}/upload`, formData, {\r\n        cancelToken: cancelTokenSource.token,\r\n        onUploadProgress: (progressEvent: any) => {\r\n          const totalLength = progressEvent.lengthComputable\r\n            ? progressEvent.total\r\n            : progressEvent.target.getResponseHeader('content-length') || progressEvent.target.getResponseHeader('x-decompressed-content-length');\r\n          console.log('onUploadProgress', totalLength);\r\n          if (totalLength !== null) {\r\n            setProgress(Math.round((progressEvent.loaded * 100) / totalLength));\r\n          }\r\n        }\r\n      });\r\n      setImage(data.data);\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n    }\r\n    setProgress(0);\r\n  };\r\n\r\n  const thumbs = files.map((file: any) => (\r\n    <div className={classes.thumb} key={file.name}>\r\n      <div className={classes.thumbInner}>\r\n        <img src={file.preview} className={classes.img} />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  useEffect(\r\n    () => () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleSearchCategory = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${CATEGORY_BASE_URL}?${params.toString()}`, { cancelToken: cancelTokenSource.token });\r\n      setCategories(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n  const handleOnSubmit = async () => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    resetValidation();\r\n\r\n    if (!validation()) {\r\n      setValue(0);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSubmit(true);\r\n      const { data } = await axios.post(\r\n        `${PRODUCT_BASE_URL}`,\r\n        {\r\n          productName,\r\n          productCode,\r\n          sellingPrice,\r\n          purchasePrice,\r\n          minimumStock,\r\n          isReminder,\r\n          description,\r\n          typeUnit,\r\n          CategoryId: category!.id,\r\n          image: image || []\r\n        },\r\n        {\r\n          cancelToken: cancelTokenSource.token\r\n        }\r\n      );\r\n\r\n      setProducts([data.data, ...products]);\r\n      setOpen(false);\r\n      handleSnackBar(true, 'success', 'Product berhasil ditambahkan');\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n      handleSnackBar(true, 'error', 'Product gagal ditambahkan');\r\n    }\r\n    setSubmit(false);\r\n  };\r\n\r\n  const validation = (): boolean => {\r\n    let valid = true;\r\n\r\n    if (productName === '' || !productName) {\r\n      setProductNameMessage('Nama Produk tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (productCode === '' || !productCode) {\r\n      setProductCodeMessage('Kode Produk tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (typeUnit === '' && !typeUnit) {\r\n      setTypeUnitMessage('Satuan Produk tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (isReminder) {\r\n      if (minimumStock === 0 || !minimumStock) {\r\n        setMinimumStockMessage('Minimum Stock tidak boleh kosong,');\r\n        valid = false;\r\n      }\r\n    }\r\n\r\n    if (sellingPrice === 0 || !sellingPrice) {\r\n      setSellingPriceMessage('Harga jual tidak boleh kosong,');\r\n      valid = false;\r\n    }\r\n\r\n    if (purchasePrice === 0 || !purchasePrice) {\r\n      setPurchasePriceMessage('Harga beli tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    if (!category) {\r\n      setCategoryMessage('Kategori tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  const resetValidation = () => {\r\n    setProductNameMessage('');\r\n    setProductCodeMessage('');\r\n    setTypeUnitMessage('');\r\n    setMinimumStockMessage('');\r\n    setSellingPriceMessage('');\r\n    setPurchasePriceMessage('');\r\n    setCategoryMessage('');\r\n  };\r\n\r\n  return (\r\n    <Grid container direction='row'>\r\n      <Grid container direction='row' justify='center' className={classes.tabGrid}>\r\n        <Tabs value={value} indicatorColor='primary' textColor='inherit' onChange={handleChange}>\r\n          <Tab label='Informasi' {...a11yProps(0)} />\r\n          <Tab label='Upload Gambar' {...a11yProps(1)} />\r\n        </Tabs>\r\n      </Grid>\r\n\r\n      <Grid container direction='row' justify='space-between'>\r\n        <TabPanel value={value} index={0}>\r\n          <Grid container direction='row' spacing={1}>\r\n            <Grid container item lg={6} sm={6} md={6} xs={6} spacing={1}>\r\n              <Grid item lg={12} sm={12} md={12} xs={12}>\r\n                <Autocomplete\r\n                  id='category'\r\n                  fullWidth\r\n                  value={category}\r\n                  options={categories}\r\n                  getOptionLabel={option => option.name}\r\n                  getOptionSelected={(option, value) => option.id === value.id}\r\n                  onChange={(event: any, value: any) => setCategory(value)}\r\n                  renderInput={params => (\r\n                    <TextField\r\n                      {...params}\r\n                      placeholder='Pilih Kategori Produk *'\r\n                      size='small'\r\n                      onChange={handleSearchCategory}\r\n                      variant='outlined'\r\n                      error={categoryMessage !== ''}\r\n                      helperText={categoryMessage}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={12} sm={12} md={12} xs={12}>\r\n                <TextField\r\n                  id='productName'\r\n                  required\r\n                  fullWidth\r\n                  placeholder='Nama Product *'\r\n                  value={productName}\r\n                  onChange={event => setProductName(event.target.value)}\r\n                  error={productNameMessage !== ''}\r\n                  helperText={productNameMessage}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={12} sm={12} md={12} xs={12}>\r\n                <TextField\r\n                  id='productCode'\r\n                  required\r\n                  fullWidth\r\n                  placeholder='Kode Produk *'\r\n                  value={productCode}\r\n                  onChange={event => setProductCode(event.target.value)}\r\n                  error={productCodeMessage !== ''}\r\n                  helperText={productCodeMessage}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={12} sm={12} md={12} xs={12}>\r\n                <FormControl fullWidth variant='outlined' size='small'>\r\n                  <Select\r\n                    id='type'\r\n                    value={typeUnit as string}\r\n                    placeholder='Pilih Satuan Barang *'\r\n                    onChange={event => setTypeUnit(event.target.value as string)}\r\n                    error={typeUnitMessage !== ''}\r\n                  >\r\n                    <MenuItem key={1} value='PCS'>\r\n                      Pcs\r\n                    </MenuItem>\r\n                  </Select>\r\n                  <FormHelperText error={typeUnitMessage !== ''}>{typeUnitMessage}</FormHelperText>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container item lg={6} sm={6} md={6} xs={6} spacing={1} justify='flex-end'>\r\n              <Grid item lg={6} sm={6} md={6} xs={6}>\r\n                <TextField\r\n                  id='purchasePrice'\r\n                  type='number'\r\n                  required\r\n                  fullWidth\r\n                  placeholder='Masukkan Harga Beli '\r\n                  value={purchasePrice}\r\n                  onChange={event => setPurchasePrice(+event.target.value)}\r\n                  error={purchasePriceMessage !== ''}\r\n                  helperText={purchasePriceMessage}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={6} sm={6} md={6} xs={6}>\r\n                <TextField\r\n                  id='sellingPrice'\r\n                  required\r\n                  fullWidth\r\n                  type='number'\r\n                  placeholder='Masukkan Harga Jual '\r\n                  value={sellingPrice}\r\n                  onChange={event => setSellingPrice(+event.target.value)}\r\n                  error={sellingPriceMessage !== ''}\r\n                  helperText={sellingPriceMessage}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={6} sm={6} md={6} xs={6}>\r\n                <TextField\r\n                  id='minimumStock'\r\n                  required\r\n                  fullWidth\r\n                  placeholder='Minimum Stock'\r\n                  value={minimumStock}\r\n                  onChange={event => setMinimumStock(+event.target.value)}\r\n                  error={minimumStockMessage !== ''}\r\n                  helperText={minimumStockMessage}\r\n                  disabled={!isReminder}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={6} sm={6} md={6} xs={6}>\r\n                <FormControlLabel\r\n                  control={<IOSSwitch color='primary' value={isReminder} checked={isReminder} onChange={() => setReminder(!isReminder)} />}\r\n                  label='Pengingat Stock'\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='description'\r\n                rows={4}\r\n                multiline\r\n                required\r\n                fullWidth\r\n                size='small'\r\n                variant='outlined'\r\n                placeholder='Deskripsi Produck '\r\n                value={description}\r\n                onChange={event => setDescription(event.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={1}>\r\n          <div {...getRootProps()} className={classes.dropZone}>\r\n            <input {...getInputProps()} className={classes.inputFile} />\r\n            <p>Drag 'n' drop some files here, or click to select files</p>\r\n          </div>\r\n          <aside className={classes.thumbsContainer}>{thumbs}</aside>\r\n          {progress > 0 && <LinearProgress color='secondary' variant='determinate' value={progress} />}\r\n        </TabPanel>\r\n      </Grid>\r\n\r\n      <Grid container item lg={12} md={12} sm={12} xs={12} justify='flex-end' className={classes.buttonGrid}>\r\n        <Button color='secondary' disabled={isSubmit} onClick={() => setOpen(false)}>\r\n          Batal\r\n        </Button>\r\n        &nbsp; &nbsp;\r\n        <Button onClick={handleOnSubmit}>{value === 0 ? 'Selanjutnya' : 'Simpan'}</Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductWizard;\r\n","import React, { FC, Fragment } from 'react';\r\nimport { createStyles, makeStyles, Theme, Typography, IconButton, Paper, WithStyles, withStyles } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ProductWizard from './components/ProductWizard';\r\n\r\ninterface Props {\r\n  products: ProductModel[];\r\n  open: boolean;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setProducts: React.Dispatch<React.SetStateAction<ProductModel[]>>;\r\n  handleSnackBar: (open: boolean, variant: 'success' | 'error', message: string) => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1)\r\n    }\r\n  });\r\n\r\ninterface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose?: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n  root:{\r\n    padding: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant='h1' component='h1'>{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label='close' className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n  root: {\r\n   paddingLeft:theme.spacing(3),\r\n   paddingRight: theme.spacing(3),\r\n   paddingBottom:theme.spacing(3)\r\n  }\r\n}))(MuiDialogContent);\r\n\r\nconst ProductModal: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { products, open, setOpen, setProducts, handleSnackBar } = props;\r\n\r\n  const handleClose = (event: {}, reason: 'backdropClick' | 'escapeKeyDown') => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog\r\n        maxWidth={'md'}\r\n        disableBackdropClick={true}\r\n        onClose={handleClose}\r\n        aria-labelledby='customized-dialog-title'\r\n        open={open}\r\n      >\r\n        <DialogTitle id='customized-dialog-title'>\r\n          <Typography id='modal-title' variant='h1' component='h1'>\r\n            Tambah Produk Baru\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <ProductWizard products={products} setProducts={setProducts} setOpen={setOpen} handleSnackBar={handleSnackBar} />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductModal;\r\n","import React, { FC, useEffect, useCallback, useState } from 'react';\r\nimport { Grid, Container, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport { AddBox } from '@material-ui/icons';\r\nimport { Page, StandardConfirmationDialog, PaperCustom, Breadcrumb } from 'components';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { PRODUCT_BASE_URL } from 'constants/url';\r\nimport SearchInput from 'components/SearchInput';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport ProductTable from './components/ProductTable';\r\nimport ProductModal from './components/ProductModal';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport useRouter from 'hooks/useRouter';\r\n\r\nconst useStyles = makeStyles({\r\n  secondGrid: {},\r\n  fourthGrid: {\r\n    marginTop: 20\r\n  },\r\n});\r\n\r\nconst dummyProduct: ProductModel = {\r\n  id: 0,\r\n  productName: '',\r\n  productCode: '',\r\n  sellingPrice: 0,\r\n  purchasePrice: 0,\r\n  typeUnit: '',\r\n  totalStock: 0,\r\n  description: '',\r\n  isReminder: false,\r\n  minimumStock: 0\r\n};\r\n\r\nconst ProductPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { location } = useRouter();\r\n\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [count, setCount] = useState<number>(0);\r\n  const [query, setQuery] = useState<string>('');\r\n  const [queryString, setQueryString] = useState<string>();\r\n  const [isLoadingData, setIsLoadingData] = useState<boolean>(true);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(10);\r\n  const [products, setProducts] = useState<ProductModel[]>([dummyProduct]);\r\n  const [order, setOrder] = useState<'asc' | 'desc'>('asc');\r\n  const [orderBy, setOrderBy] = useState<string>('id');\r\n  const [selectedId, setSelectedId] = useState<number>();\r\n  const [confirmationDelete, setConfirmationDelete] = useState<boolean>(false);\r\n  const [snackbarVariant, setSnackbarVariant] = useState<'success' | 'error'>('success');\r\n  const [message, setMessage] = useState<string>('');\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n  \r\n  const fetchData = useCallback(async () => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    setIsLoadingData(true);\r\n\r\n    const getQueryParams = () => {\r\n      const params = new URLSearchParams();\r\n      if (queryString) {\r\n        params.append('keyword', queryString);\r\n      }\r\n\r\n      if (orderBy || order) {\r\n        params.append('orderBy', orderBy);\r\n        params.append('ordered', order);\r\n      }\r\n\r\n      params.append('page', currentPage.toString());\r\n\r\n      return params.toString();\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`${PRODUCT_BASE_URL}?${getQueryParams()}`, { cancelToken: cancelTokenSource.token });\r\n      setProducts(data.data);\r\n      setCount(data.meta.last_page);\r\n      setCurrentPage(data.meta.current_page);\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n    }\r\n    setIsLoadingData(false);\r\n    return () => {\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, [queryString, orderBy, order, currentPage, rowsPerPage]);\r\n\r\n  const performActionAndRevertPage = (action: React.Dispatch<React.SetStateAction<any>>, actionParam: any) => {\r\n    setCurrentPage(1);\r\n    action(actionParam);\r\n  };\r\n\r\n  const handleSearch = useCallback((searchQuery: string) => {\r\n    performActionAndRevertPage(setQueryString, searchQuery);\r\n  }, []);\r\n\r\n  const debouncedSearchTerm = useDebounce(query, 500);\r\n\r\n  useEffect(() => {\r\n    if (debouncedSearchTerm.length >= 3) {\r\n      handleSearch(debouncedSearchTerm);\r\n    } else if (debouncedSearchTerm.length === 0) {\r\n      handleSearch(debouncedSearchTerm);\r\n    }\r\n  }, [debouncedSearchTerm, handleSearch]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const handleConfirmationDelete = (id: number): React.MouseEventHandler => () => {\r\n    setSelectedId(id);\r\n    setConfirmationDelete(true);\r\n  };\r\n\r\n  const handleCloseConfirmationDelete = () => {\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const deleteProduct = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    try {\r\n      await axios.delete(`${PRODUCT_BASE_URL}/${selectedId}`, { cancelToken: cancelTokenSource.token });\r\n      setProducts(products.filter(value => value.id !== selectedId));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const handleSnackBar = (open: boolean, variant: 'success' | 'error', message: string) => {\r\n    setSnackbarVariant(variant);\r\n    setOpenSnackbar(open);\r\n    setMessage(message);\r\n  };\r\n\r\n  const handleCloseSnackbar = (): void => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  const handleOpenForm = (): void => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Page title='Produk'>\r\n      <Container>\r\n        <Grid container direction='row'>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Typography variant='h1' component='h1'> Semua Produk </Typography>\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Breadcrumb/>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <PaperCustom>\r\n          <Grid container direction='row' className={classes.secondGrid}>\r\n            <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n              <Grid container direction='row' justify='space-between'>\r\n                <Grid container item lg={6} sm={6} md={6} justify='flex-start' alignItems='center'>\r\n                  <Grid item>\r\n                    <SearchInput\r\n                      withBorder\r\n                      withTransition={false}\r\n                      width={150}\r\n                      placeHolder='Cari produk disini'\r\n                      iconColor='#989898'\r\n                      tableSearchValue={query}\r\n                      setTableSearchValue={setQuery}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid container item lg={6} sm={6} md={6} justify='flex-end' alignItems='center'>\r\n                  <Grid item>\r\n                    <Button disabled={isLoadingData} onClick={handleOpenForm}>\r\n                      <AddBox fontSize='small' /> &nbsp; Tambah Produk\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {products.length === 0 ? (\r\n                <Grid container item lg={12} md={12} sm={12} justify='center'>\r\n                  <Typography component='p'>Produk saat ini belum tersedia</Typography>\r\n                </Grid>\r\n              ) : (\r\n                <ProductTable\r\n                  isLoadingData={isLoadingData}\r\n                  count={count}\r\n                  currentPage={currentPage}\r\n                  rowsPerPage={rowsPerPage}\r\n                  products={products}\r\n                  queryString={queryString}\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  setOrder={setOrder}\r\n                  setOrderBy={setOrderBy}\r\n                  handleChangeRowsPerPage={event => performActionAndRevertPage(setRowsPerPage, +event.target.value)}\r\n                  handleChangePage={(event, page) => setCurrentPage(page)}\r\n                  handleConfirmationDelete={handleConfirmationDelete}\r\n                />\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid container justify='center' item xl={12} md={12} sm={12} className={classes.fourthGrid}>\r\n              <Grid item>\r\n                {products.length > 0 && (\r\n                  <Pagination\r\n                    count={count}\r\n                    onChange={(event, page) => setCurrentPage(page)}\r\n                    page={currentPage}\r\n                    boundaryCount={2}\r\n                    variant='outlined'\r\n                  />\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </PaperCustom>\r\n\r\n        <ProductModal products={products} open={open} setOpen={setOpen} setProducts={setProducts} handleSnackBar={handleSnackBar} />\r\n\r\n        <StandardConfirmationDialog\r\n          variant={snackbarVariant}\r\n          titleMessage={snackbarVariant === 'success' ? 'Success!' : 'Error!'}\r\n          message={message}\r\n          open={openSnackbar}\r\n          handleClose={handleCloseSnackbar}\r\n          onConfirm={handleCloseSnackbar}\r\n          noCancelButton={true}\r\n        />\r\n\r\n        <StandardConfirmationDialog\r\n          variant={'danger'}\r\n          titleMessage={'Delete'}\r\n          message={'Are you sure want to delete this data?'}\r\n          open={confirmationDelete}\r\n          handleClose={handleCloseConfirmationDelete}\r\n          onConfirm={deleteProduct}\r\n        />\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n","import React, { FC } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\ninterface Props {\r\n  productImages: ProductImageModel[];\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  thumb: {\r\n    width: '86,25px',\r\n    height: '86,25px',\r\n    borderRadius: 4\r\n  }\r\n});\r\n\r\nconst ImageSlider: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { productImages } = props;\r\n  return (\r\n    <Carousel showArrows={true}>\r\n      {productImages.map((value, index) => (\r\n        <div>\r\n          <img src={value.url} className={classes.thumb} />\r\n        </div>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default ImageSlider;\r\n","import React, { FC, Fragment } from 'react';\r\nimport { makeStyles, Table, TableBody, TableRow, withStyles, Typography, Divider } from '@material-ui/core';\r\nimport MuiTableCell from '@material-ui/core/TableCell';\r\nimport NumberFormat from 'react-number-format';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\ninterface Props {\r\n  product: ProductModel;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  cell: {\r\n    width: '40%'\r\n  },\r\n  label: {\r\n    color: '#828282',\r\n    fontWeight: 400,\r\n    fontSize: 15,\r\n    marginBottom: 4\r\n  },\r\n  text: {\r\n    fontWeight: 700,\r\n    color: '#000000',\r\n    fontSize: 15\r\n  },\r\n  price: {\r\n    fontWeight: 700,\r\n    color: '#F2994A',\r\n    fontSize: 15\r\n  },\r\n  tableDetail: {\r\n    marginTop: 15\r\n  }\r\n});\r\n\r\nconst TableCell = withStyles({\r\n  root: {\r\n    borderBottom: 'none'\r\n  }\r\n})(MuiTableCell);\r\n\r\nconst ProductDetail: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { product, isLoading } = props;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Table size='small'>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell size='small' className={classes.cell}>\r\n              <Typography component='p' className={classes.label}>\r\n                Nama Produk\r\n              </Typography>\r\n              <Typography component='p' className={classes.text}>\r\n                {isLoading ? <Skeleton variant='text' width='100%' /> : product.productName}\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell size='small'>\r\n              <Typography component='p' className={classes.label}>\r\n                Satuan\r\n              </Typography>\r\n              <Typography component='p' className={classes.text}>\r\n                {isLoading ? <Skeleton variant='text' width='100%' /> : product.typeUnit}\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n\r\n          <TableRow>\r\n            <TableCell size='small' className={classes.cell}>\r\n              <Typography component='p' className={classes.label}>\r\n                Kode Produk\r\n              </Typography>\r\n              <Typography component='p' className={classes.text}>\r\n                {isLoading ? <Skeleton variant='text' width='100%' /> : product.productCode}\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell size='small'>\r\n              <Typography component='p' className={classes.label}>\r\n                Harga Beli\r\n              </Typography>\r\n              <Typography component='p' className={classes.price}>\r\n                {isLoading ? (\r\n                  <Skeleton variant='text' width='100%' />\r\n                ) : (\r\n                  <NumberFormat value={product.purchasePrice} prefix={'Rp'} thousandSeparator={true} displayType='text' />\r\n                )}\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n\r\n          <TableRow>\r\n            <TableCell size='small' className={classes.cell}>\r\n              <Typography component='p' className={classes.label}>\r\n                Kategori Produk\r\n              </Typography>\r\n              <Typography component='p' className={classes.text}>\r\n                {product.Category ? product.Category.name : '-'}\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell size='small'>\r\n              <Typography component='p' className={classes.label}>\r\n                Harga Jual\r\n              </Typography>\r\n              <Typography component='p' className={classes.price}>\r\n                {isLoading ? (\r\n                  <Skeleton variant='text' width='100%' />\r\n                ) : (\r\n                  <NumberFormat value={product.sellingPrice} prefix={'Rp'} thousandSeparator={true} displayType='text' />\r\n                )}\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n\r\n          <TableRow>\r\n            <TableCell size='small' className={classes.cell}>\r\n              <Typography component='p' className={classes.label}>\r\n                Rute\r\n              </Typography>\r\n              <Typography component='p' className={classes.text}>\r\n                -\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell size='small'>\r\n              <Typography component='p' className={classes.label}>\r\n                Deskripsi\r\n              </Typography>\r\n              <Typography component='p' className={classes.text}>\r\n                {isLoading ? <Skeleton variant='text' width='100%' /> : product.description}\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n      <Divider />\r\n      <Table size='small' className={classes.tableDetail}>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell size='small' colSpan={2}>\r\n              <Typography component='p' variant='h4'>\r\n                Details Lokasi Stok\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductDetail;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport {\r\n  makeStyles,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Tabs,\r\n  Tab,\r\n  Button,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Typography,\r\n  Grid,\r\n  FormHelperText,\r\n  LinearProgress\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { PRODUCT_BASE_URL, CATEGORY_BASE_URL } from 'constants/url';\r\nimport { IOSSwitch } from 'components';\r\nimport { useDropzone, FileWithPath } from 'react-dropzone';\r\n\r\ninterface Props {\r\n  product: ProductModel;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setProduct: React.Dispatch<React.SetStateAction<ProductModel>>;\r\n  handleSnackBar: (open: boolean, variant: 'success' | 'error', message: string) => void;\r\n}\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  dir?: string;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  dropZone: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: '#eeeeee',\r\n    borderStyle: 'dashed',\r\n    backgroundColor: '#fafafa',\r\n    color: '#bdbdbd',\r\n    outline: 'none',\r\n    transition: 'border .24s ease-in-out',\r\n    width: '100%'\r\n  },\r\n  thumbsContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    marginTop: 16\r\n  },\r\n  thumb: {\r\n    display: 'inline-flex',\r\n    borderRadius: 2,\r\n    border: '1px solid #eaeaea',\r\n    marginBottom: 8,\r\n    marginRight: 8,\r\n    width: 100,\r\n    height: 100,\r\n    padding: 4,\r\n    boxSizing: 'border-box'\r\n  },\r\n  thumbInner: {\r\n    display: 'flex',\r\n    minWidth: 0,\r\n    overflow: 'hidden'\r\n  },\r\n  img: {\r\n    display: 'block',\r\n    width: 'auto',\r\n    height: '100%'\r\n  },\r\n  inputFile: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div role='tabpanel' hidden={value !== index} id={`full-width-tabpanel-${index}`} aria-labelledby={`full-width-tab-${index}`} {...other}>\r\n      {value === index && <div>{children}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst a11yProps = (index: any) => {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`\r\n  };\r\n};\r\n\r\nconst dummyCategory: CategoryModel = {\r\n  id: 0,\r\n  name: ''\r\n};\r\n\r\nconst ProductWizard: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { product, setProduct, setOpen, handleSnackBar } = props;\r\n  const [productName, setProductName] = useState<string>('');\r\n  const [productCode, setProductCode] = useState<string>('');\r\n  const [sellingPrice, setSellingPrice] = useState<number>();\r\n  const [purchasePrice, setPurchasePrice] = useState<number>();\r\n  const [typeUnit, setTypeUnit] = useState<string>('');\r\n  const [description, setDescription] = useState<string>('');\r\n  const [isReminder, setReminder] = useState<boolean>(false);\r\n  const [minimumStock, setMinimumStock] = useState<number>();\r\n  const [category, setCategory] = useState<CategoryModel>(dummyCategory);\r\n  const [categories, setCategories] = useState<CategoryModel[]>([dummyCategory]);\r\n  const [value, setValue] = useState(0);\r\n  const [isSubmit, setSubmit] = useState<boolean>(false);\r\n  const [productNameMessage, setProductNameMessage] = useState<string>('');\r\n  const [productCodeMessage, setProductCodeMessage] = useState<string>('');\r\n  const [typeUnitMessage, setTypeUnitMessage] = useState<string>('');\r\n  const [minimumStockMessage, setMinimumStockMessage] = useState<string>('');\r\n  const [sellingPriceMessage, setSellingPriceMessage] = useState<string>('');\r\n  const [purchasePriceMessage, setPurchasePriceMessage] = useState<string>('');\r\n  const [categoryMessage, setCategoryMessage] = useState<string>('');\r\n  const [files, setFiles] = useState<FileWithPath[]>([]);\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [image, setImage] = useState<[{ path: string; url: string }] | null>(null);\r\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\r\n    accept: ['image/jpeg', 'image/png'],\r\n    maxFiles: 5,\r\n    onDrop: acceptedFiles => {\r\n      setImage(null);\r\n      uploadImage(acceptedFiles);\r\n    }\r\n  });\r\n\r\n  const uploadImage = async (files: FileWithPath[]) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const formData = new FormData();\r\n    files.map((file: any) => formData.append(`image[]`, file));\r\n\r\n    setFiles(\r\n      files.map(file =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file)\r\n        })\r\n      )\r\n    );\r\n\r\n    try {\r\n      const { data } = await axios.post(`${PRODUCT_BASE_URL}/upload`, formData, {\r\n        cancelToken: cancelTokenSource.token,\r\n        onUploadProgress: (progressEvent: any) => {\r\n          const totalLength = progressEvent.lengthComputable\r\n            ? progressEvent.total\r\n            : progressEvent.target.getResponseHeader('content-length') || progressEvent.target.getResponseHeader('x-decompressed-content-length');\r\n          console.log('onUploadProgress', totalLength);\r\n          if (totalLength !== null) {\r\n            setProgress(Math.round((progressEvent.loaded * 100) / totalLength));\r\n          }\r\n        }\r\n      });\r\n      setImage(data.data);\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n    }\r\n    setProgress(0);\r\n  };\r\n\r\n  const thumbs = files.map((file: any) => (\r\n    <div className={classes.thumb} key={file.name}>\r\n      <div className={classes.thumbInner}>\r\n        <img src={file.preview} className={classes.img} />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  useEffect(\r\n    () => () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setProductName(product.productName);\r\n    setProductCode(product.productCode);\r\n    setSellingPrice(product.sellingPrice);\r\n    setPurchasePrice(product.purchasePrice);\r\n    setTypeUnit(product.typeUnit);\r\n    setDescription(product.description);\r\n    setMinimumStock(product.minimumStock);\r\n    setCategory(product.Category ? product.Category : dummyCategory);\r\n    setReminder(product.isReminder);\r\n  }, [product, product.Category]);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleSearchCategory = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${CATEGORY_BASE_URL}?${params.toString()}`, { cancelToken: cancelTokenSource.token });\r\n      setCategories(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n  const handleOnSubmit = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    resetValidation();\r\n\r\n    if (!validation()) {\r\n      setValue(0);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSubmit(true);\r\n      const { data } = await axios.post(\r\n        `${PRODUCT_BASE_URL}`,\r\n        {\r\n          id: product.id,\r\n          productName,\r\n          productCode,\r\n          sellingPrice,\r\n          purchasePrice,\r\n          minimumStock,\r\n          isReminder,\r\n          description,\r\n          typeUnit,\r\n          CategoryId: category!.id,\r\n          image: image || []\r\n        },\r\n        {\r\n          cancelToken: cancelTokenSource.token\r\n        }\r\n      );\r\n\r\n      setProduct(data.data);\r\n      setOpen(false);\r\n      handleSnackBar(true, 'success', 'Product berhasil diperbaharui');\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n      handleSnackBar(true, 'error', 'Product gagal diperbaharui');\r\n    }\r\n    setSubmit(false);\r\n  };\r\n\r\n  const validation = (): boolean => {\r\n    let valid = true;\r\n\r\n    if (productName === '' || !productName) {\r\n      setProductNameMessage('Nama Produk tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (productCode === '' || !productCode) {\r\n      setProductCodeMessage('Kode Produk tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (typeUnit === '' && !typeUnit) {\r\n      setTypeUnitMessage('Satuan Produk tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (isReminder) {\r\n      if (minimumStock === 0 || !minimumStock) {\r\n        setMinimumStockMessage('Minimum Stock tidak boleh kosong,');\r\n        valid = false;\r\n      }\r\n    }\r\n\r\n    if (sellingPrice === 0 || !sellingPrice) {\r\n      setSellingPriceMessage('Harga jual tidak boleh kosong,');\r\n      valid = false;\r\n    }\r\n\r\n    if (purchasePrice === 0 || !purchasePrice) {\r\n      setPurchasePriceMessage('Harga beli tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    if (!category) {\r\n      setCategoryMessage('Kategori tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  const resetValidation = () => {\r\n    setProductNameMessage('');\r\n    setProductCodeMessage('');\r\n    setTypeUnitMessage('');\r\n    setMinimumStockMessage('');\r\n    setSellingPriceMessage('');\r\n    setPurchasePriceMessage('');\r\n    setCategoryMessage('');\r\n  };\r\n\r\n  return (\r\n    <Grid container direction='row' spacing={1}>\r\n      <Grid container direction='row' justify='center'>\r\n        <Tabs value={value} indicatorColor='primary' onChange={handleChange}>\r\n          <Tab label='Informasi' {...a11yProps(0)} />\r\n          <Tab label='Upload Gambar' {...a11yProps(1)} />\r\n        </Tabs>\r\n      </Grid>\r\n\r\n      <Grid container direction='row' justify='space-between'>\r\n        <TabPanel value={value} index={0}>\r\n          <Grid container direction='row' spacing={2}>\r\n            <Grid container item lg={6} sm={6} md={6} xs={6} spacing={2}>\r\n              <Grid item lg={12} sm={12} md={12} xs={12}>\r\n                <Autocomplete\r\n                  id='category'\r\n                  fullWidth\r\n                  value={category}\r\n                  options={categories}\r\n                  getOptionLabel={option => option.name}\r\n                  onChange={(event: any, value: any) => setCategory(value)}\r\n                  renderInput={params => (\r\n                    <TextField\r\n                      {...params}\r\n                      placeholder='Pilih Kategori Produk *'\r\n                      size='small'\r\n                      onChange={handleSearchCategory}\r\n                      variant='outlined'\r\n                      error={categoryMessage !== ''}\r\n                      helperText={categoryMessage}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={12} sm={12} md={12} xs={12}>\r\n                <TextField\r\n                  id='productName'\r\n                  required\r\n                  fullWidth\r\n                  size='small'\r\n                  variant='outlined'\r\n                  placeholder='Nama Product *'\r\n                  value={productName}\r\n                  onChange={event => setProductName(event.target.value)}\r\n                  error={productNameMessage !== ''}\r\n                  helperText={productNameMessage}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={12} sm={12} md={12} xs={12}>\r\n                <TextField\r\n                  id='productCode'\r\n                  required\r\n                  fullWidth\r\n                  size='small'\r\n                  variant='outlined'\r\n                  placeholder='Kode Produk *'\r\n                  value={productCode}\r\n                  onChange={event => setProductCode(event.target.value)}\r\n                  error={productCodeMessage !== ''}\r\n                  helperText={productCodeMessage}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={12} sm={12} md={12} xs={12}>\r\n                <FormControl fullWidth variant='outlined' size='small'>\r\n                  <Select\r\n                    id='type'\r\n                    value={typeUnit as string}\r\n                    placeholder='Pilih Satuan Barang *'\r\n                    onChange={event => setTypeUnit(event.target.value as string)}\r\n                    error={typeUnitMessage !== ''}\r\n                  >\r\n                    <MenuItem key={1} value='PCS'>\r\n                      Pcs\r\n                    </MenuItem>\r\n                  </Select>\r\n                  <FormHelperText error={typeUnitMessage !== ''}>{typeUnitMessage}</FormHelperText>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container item lg={6} sm={6} md={6} xs={6} spacing={2} justify='flex-end'>\r\n              <Grid item lg={6} sm={6} md={6} xs={6}>\r\n                <TextField\r\n                  id='purchasePrice'\r\n                  type='number'\r\n                  required\r\n                  fullWidth\r\n                  size='small'\r\n                  variant='outlined'\r\n                  placeholder='Masukkan Harga Beli '\r\n                  value={purchasePrice}\r\n                  onChange={event => setPurchasePrice(+event.target.value)}\r\n                  error={purchasePriceMessage !== ''}\r\n                  helperText={purchasePriceMessage}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={6} sm={6} md={6} xs={6}>\r\n                <TextField\r\n                  id='sellingPrice'\r\n                  required\r\n                  fullWidth\r\n                  size='small'\r\n                  variant='outlined'\r\n                  placeholder='Masukkan Harga Jual '\r\n                  value={sellingPrice}\r\n                  onChange={event => setSellingPrice(+event.target.value)}\r\n                  error={sellingPriceMessage !== ''}\r\n                  helperText={sellingPriceMessage}\r\n                  type='number'\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={6} sm={6} md={6} xs={6}>\r\n                <TextField\r\n                  id='minimumStock'\r\n                  required\r\n                  fullWidth\r\n                  size='small'\r\n                  variant='outlined'\r\n                  placeholder='Minimum Stock'\r\n                  value={minimumStock}\r\n                  onChange={event => setMinimumStock(+event.target.value)}\r\n                  error={minimumStockMessage !== ''}\r\n                  helperText={minimumStockMessage}\r\n                  disabled={!isReminder}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={6} sm={6} md={6} xs={6}>\r\n                <FormControlLabel\r\n                  control={<IOSSwitch color='secondary' value={isReminder} checked={isReminder} onChange={() => setReminder(!isReminder)} />}\r\n                  label='Pengingat Stock'\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item lg={12} sm={12} md={12} xs={12}>\r\n              <TextField\r\n                id='description'\r\n                rows={4}\r\n                multiline\r\n                required\r\n                fullWidth\r\n                size='small'\r\n                variant='outlined'\r\n                placeholder='Deskripsi Produck '\r\n                value={description}\r\n                onChange={event => setDescription(event.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={1}>\r\n          <div {...getRootProps()} className={classes.dropZone}>\r\n            <input {...getInputProps()} className={classes.inputFile} />\r\n            <p>Drag 'n' drop some files here, or click to select files</p>\r\n          </div>\r\n          <aside className={classes.thumbsContainer}>{thumbs}</aside>\r\n          {progress > 0 && <LinearProgress color='secondary' variant='determinate' value={progress} />}\r\n        </TabPanel>\r\n      </Grid>\r\n\r\n      <Grid container item lg={12} md={12} sm={12} xs={12} justify='flex-end' spacing={2}>\r\n        <Grid item>\r\n          <Button color='secondary' disabled={isSubmit} onClick={() => setOpen(false)}>\r\n            Batal\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button disabled={isSubmit || value === 0} onClick={handleOnSubmit}>\r\n            Simpan\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductWizard;\r\n","import React, { FC, Fragment } from 'react';\r\nimport { createStyles, makeStyles, Theme, Typography, IconButton, Paper, WithStyles, withStyles } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ProductWizard from './ProductWizard';\r\n\r\ninterface Props {\r\n  product: ProductModel;\r\n  open: boolean;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setProduct: React.Dispatch<React.SetStateAction<ProductModel>>;\r\n  handleSnackBar: (open: boolean, variant: 'success' | 'error', message: string) => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2)\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1)\r\n    }\r\n  });\r\n\r\ninterface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose?: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant='h6'>{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label='close' className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}))(MuiDialogContent);\r\n\r\nconst ProductModal: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { product, open, setOpen, setProduct, handleSnackBar } = props;\r\n\r\n  const handleClose = (event: {}, reason: 'backdropClick' | 'escapeKeyDown') => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog\r\n        maxWidth={'md'}\r\n        fullWidth={true}\r\n        disableBackdropClick={true}\r\n        onClose={handleClose}\r\n        aria-labelledby='customized-dialog-title'\r\n        open={open}\r\n      >\r\n        <DialogTitle id='customized-dialog-title'>\r\n          <Typography id='modal-title' variant='h1' component='h1'>\r\n            Edit Produk\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <ProductWizard product={product} setProduct={setProduct} setOpen={setOpen} handleSnackBar={handleSnackBar} />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductModal;\r\n","import React, { FC, useEffect, useState, Fragment } from 'react';\r\nimport { Grid, Container, Typography, makeStyles, Button, Paper } from '@material-ui/core';\r\nimport { DeleteRounded, EditRounded } from '@material-ui/icons';\r\nimport { Page, StandardConfirmationDialog, Breadcrumb } from 'components';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { PRODUCT_BASE_URL } from 'constants/url';\r\nimport ImageSlider from './components/ImageSlider';\r\nimport ProductDetail from './components/ProductDetail';\r\nimport ProductModal from './components/ProductModal';\r\nimport useRouter from 'hooks/useRouter';\r\n\r\nconst useStyles = makeStyles({\r\n  secondGrid: {},\r\n  paper: {\r\n    padding: 15,\r\n    marginTop: 15,\r\n    marginBottom: 20\r\n  },\r\n  upload: {\r\n    borderStyle: 'dashed',\r\n    border: '2px solid #028bc1',\r\n    backgroundColor: 'transparent',\r\n    '&:hover': {\r\n      background: 'none'\r\n    }\r\n  }\r\n});\r\n\r\nconst dummyProduct: ProductModel = {\r\n  id: 0,\r\n  productName: '',\r\n  productCode: '',\r\n  sellingPrice: 0,\r\n  purchasePrice: 0,\r\n  typeUnit: '',\r\n  totalStock: 0,\r\n  description: '',\r\n  isReminder: false,\r\n  minimumStock: 0\r\n};\r\n\r\nconst dummyProductImage: ProductImageModel = {\r\n  id: 0,\r\n  path: '',\r\n  url: ''\r\n};\r\nconst ProductDetailPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { location } = useRouter();\r\n  // eslint-disable-next-line\r\n  const params: any = location.state;\r\n\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [isLoadingData, setIsLoadingData] = useState<boolean>(true);\r\n  const [id, setId] = useState<number>();\r\n  const [product, setProduct] = useState<ProductModel>(dummyProduct);\r\n  const [productImages, setProductImages] = useState<ProductImageModel[]>([dummyProductImage]);\r\n  const [confirmationDelete, setConfirmationDelete] = useState<boolean>(false);\r\n  const [snackbarVariant, setSnackbarVariant] = useState<'success' | 'error'>('success');\r\n  const [message, setMessage] = useState<string>('');\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n \r\n\r\n    const fetchData = async () => {\r\n      const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n      setIsLoadingData(true);\r\n      try {\r\n        const { data } = await axios.get(`${PRODUCT_BASE_URL}/${params.id}`, { cancelToken: cancelTokenSource.token });\r\n        setProduct(data.data);\r\n        setProductImages(data.data.ProductImages);\r\n        setId(data.data.id);\r\n      } catch (error) {\r\n        console.log('error', error);\r\n      }\r\n      setIsLoadingData(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleConfirmationDelete = (): void => {\r\n    setConfirmationDelete(true);\r\n  };\r\n\r\n  const handleCloseConfirmationDelete = (): void => {\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const deleteProduct = async () => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    try {\r\n      await axios.delete(`${PRODUCT_BASE_URL}/${id}`, { cancelToken: cancelTokenSource.token });\r\n      handleSnackBar(true, 'success', 'Produk berhasil dihapus.');\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleSnackBar(true, 'error', 'Produk gagal dihapus.');\r\n    }\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const handleSnackBar = (open: boolean, variant: 'success' | 'error', message: string): void => {\r\n    setSnackbarVariant(variant);\r\n    setOpenSnackbar(open);\r\n    setMessage(message);\r\n  };\r\n\r\n  const handleCloseSnackbar = (): void => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  const handleOpenForm = (): void => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Page title='Produk'>\r\n      <Container>\r\n        <Grid container direction='row'>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Typography variant='h1' component='h1'> Semua Produk </Typography>\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Breadcrumb/>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container direction='row' justify='space-between' spacing={3}>\r\n          <Grid container item lg={8} sm={8} md={8} justify='flex-start'></Grid>\r\n\r\n          <Grid container item lg={4} sm={4} md={4} spacing={2} justify='flex-end'>\r\n            <Grid item>\r\n              <Button disabled={isLoadingData} color='secondary' onClick={handleConfirmationDelete}>\r\n                <DeleteRounded fontSize='small' /> &nbsp; Hapus\r\n              </Button>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Button disabled={isLoadingData} onClick={handleOpenForm}>\r\n                <EditRounded fontSize='small' /> &nbsp; Edit Produk\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Paper elevation={2} className={classes.paper}>\r\n          <Grid container direction='row' spacing={2} justify='space-between' className={classes.secondGrid}>\r\n            <Grid container justify='center' item xl={6} lg={6} md={6} sm={12} xs={12}>\r\n              {isLoadingData ? (\r\n                <Typography>Menunggu data...</Typography>\r\n              ) : product.ProductImages && product.ProductImages.length > 0 ? (\r\n                <ImageSlider productImages={productImages} />\r\n              ) : (\r\n                <Button\r\n                  fullWidth\r\n                  disableFocusRipple\r\n                  disableTouchRipple\r\n                  size='small'\r\n                  variant='text'\r\n                  onClick={handleOpenForm}\r\n                  color='secondary'\r\n                  className={classes.upload}\r\n                >\r\n                  Upload Gambar\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n            <Grid item xl={6} lg={6} md={6} sm={12} xs={12}>\r\n              <ProductDetail product={product} isLoading={isLoadingData} />\r\n            </Grid>\r\n\r\n            <ProductModal open={open} setOpen={setOpen} product={product} setProduct={setProduct} handleSnackBar={handleSnackBar} />\r\n\r\n            <StandardConfirmationDialog\r\n              variant={snackbarVariant}\r\n              titleMessage={snackbarVariant === 'success' ? 'Success!' : 'Error!'}\r\n              message={message}\r\n              open={openSnackbar}\r\n              handleClose={handleCloseSnackbar}\r\n              onConfirm={handleCloseSnackbar}\r\n              noCancelButton={true}\r\n            />\r\n\r\n            <StandardConfirmationDialog\r\n              variant={'danger'}\r\n              titleMessage={'Delete'}\r\n              message={'Are you sure want to delete this data?'}\r\n              open={confirmationDelete}\r\n              handleClose={handleCloseConfirmationDelete}\r\n              onConfirm={deleteProduct}\r\n            />\r\n          </Grid>\r\n        </Paper>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ProductDetailPage;\r\n","import React, { FC } from 'react';\r\nimport { makeStyles, Typography, Grid, Table, TableRow, TableCell, TableBody } from '@material-ui/core';\r\nimport { PaperCustom } from 'components';\r\n\r\ninterface Props {\r\n  partner: PartnerModel;\r\n}\r\n\r\nconst useStyles = makeStyles({});\r\nconst PartnerDetail: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { partner } = props;\r\n\r\n  return (\r\n    <Grid container direction='row' justify='space-between'>\r\n      <Grid item container direction='row' justify='space-between' spacing={2}>\r\n        <Grid item lg={6} sm={6} md={6} xs={6}>\r\n          <PaperCustom>\r\n            <Typography variant='h5'>Informasi</Typography>\r\n\r\n            <Table>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell>Nama</TableCell>\r\n                  <TableCell align='right'>{partner.name}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>ID Mitra</TableCell>\r\n                  <TableCell align='right'>{partner.partnerId}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Email</TableCell>\r\n                  <TableCell align='right'>{partner.email}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>No. Telepon</TableCell>\r\n                  <TableCell align='right'>{partner.phoneNumber}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>No. Handphone</TableCell>\r\n                  <TableCell align='right'>{partner.cellPhoneNumber}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Laman Website</TableCell>\r\n                  <TableCell align='right'>{partner.website}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>No. Akun Virtual</TableCell>\r\n                  <TableCell align='right'>{partner.virtualAccount}</TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </PaperCustom>\r\n        </Grid>\r\n\r\n        <Grid item lg={6} sm={6} md={6} xs={6}>\r\n          <PaperCustom>\r\n            <Typography variant='h5'>Detail Alamat</Typography>\r\n\r\n            <Table>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell>Alamat</TableCell>\r\n                  <TableCell align='right'>{partner.address}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Provinsi</TableCell>\r\n                  <TableCell align='right'>{partner.Provinsi ? partner.Provinsi.name : ''}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Kabupaten</TableCell>\r\n                  <TableCell align='right'>{partner.Kabupaten ? partner.Kabupaten.name : ''}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Kecamatan</TableCell>\r\n                  <TableCell align='right'>{partner.Kecamatan ? partner.Kecamatan.name : ''}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Route</TableCell>\r\n                  <TableCell align='right'>{partner.Zone ? partner.Zone.name : ''}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Kode Pos</TableCell>\r\n                  <TableCell align='right'>{partner.postalCode}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>Catatan</TableCell>\r\n                  <TableCell align='right'>{partner.notes}</TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </PaperCustom>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PartnerDetail;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport { makeStyles, TextField, Typography, Grid } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { PARTNER_BASE_URL, WILAYAH_PROVINSI_BASE_URL, WILAYAH_KABUPATEN_BASE_URL, WILAYAH_KECAMATAN_BASE_URL, ZONE_BASE_URL } from 'constants/url';\r\nimport { isValidEmail } from 'utils';\r\nimport { PaperCustom } from 'components';\r\n\r\ninterface Props {\r\n  partner: PartnerModel;\r\n  setPartner: React.Dispatch<React.SetStateAction<PartnerModel>>;\r\n  isSubmit: boolean;\r\n  setSubmit: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setUpdate: React.Dispatch<React.SetStateAction<boolean>>;\r\n  handleSnackBar: (open: boolean, variant: 'success' | 'error', message: string) => void;\r\n}\r\n\r\nconst useStyles = makeStyles({});\r\n\r\nconst dummyRegion: RegionModel = {\r\n  code: '',\r\n  name: ''\r\n};\r\n\r\nconst dummyZone: ZoneModel = {\r\n  id: 0,\r\n  name: ''\r\n};\r\n\r\nconst PartnerWizard: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { partner, setPartner, isSubmit, setSubmit, setUpdate, handleSnackBar } = props;\r\n  const [partnerId, setPartnerId] = useState<string>('');\r\n  const [name, setName] = useState<string>('');\r\n  const [address, setAddress] = useState<string>('');\r\n  const [email, setEmail] = useState<string>('');\r\n  const [cellPhoneNumber, setCellPhoneNumber] = useState<string>('');\r\n  const [phoneNumber, setPhoneNumber] = useState<string>('');\r\n  const [website, setWebsite] = useState<string>('');\r\n  const [virtualAccount, setVirtualAccount] = useState<string>('');\r\n  const [notes, setNotes] = useState<string>('');\r\n  const [postalCode, setPostalCode] = useState<number>();\r\n  const [partnerType, setPartnerType] = useState<'SUPPLIER' | 'CUSTOMER'>('SUPPLIER');\r\n  const [businessEntity, setBusinessEntity] = useState<string>('');\r\n  const [provinsi, setProvinsi] = useState<RegionModel>(dummyRegion);\r\n  const [kabupaten, setKabupaten] = useState<RegionModel>(dummyRegion);\r\n  const [kecamatan, setKecamatan] = useState<RegionModel>(dummyRegion);\r\n  const [zone, setZone] = useState<ZoneModel>(dummyZone);\r\n  const [route, setRoute] = useState<ZoneModel[]>([dummyZone]);\r\n  const [region, setRegion] = useState<RegionModel[]>([dummyRegion]);\r\n  const [nameMessage, setNameMessage] = useState<string>('');\r\n  const [phoneNumberMessage, setPhoneNumberMessage] = useState<string>('');\r\n  const [emailMessage, setEmailMessage] = useState<string>('');\r\n  const [addressMessage, setAddressMessage] = useState<string>('');\r\n  const [provinsiMessage, setProvinsiMessage] = useState<string>('');\r\n  const [kabupatenMessage, setKabupatenMessage] = useState<string>('');\r\n  const [kecamatanMessage, setKecamatanMessage] = useState<string>('');\r\n  const [postalCodeMessage, setPostalCodeMessage] = useState<string>('');\r\n  const [zoneMessage, setZoneMessage] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    if (!partner) {\r\n      return;\r\n    }\r\n\r\n    setName(partner.name);\r\n    setPartnerId(partner.partnerId);\r\n    setPhoneNumber(partner.phoneNumber);\r\n    setCellPhoneNumber(partner.cellPhoneNumber);\r\n    setPartnerType(partner.partnerType);\r\n    setZone(partner.Zone!);\r\n    setAddress(partner.address);\r\n    setEmail(partner.email);\r\n    setWebsite(partner.website);\r\n    setBusinessEntity(partner.businessEntity);\r\n    setVirtualAccount(partner.virtualAccount);\r\n    setNotes(partner.notes);\r\n    setPostalCode(partner.postalCode);\r\n    setProvinsi(partner.Provinsi!);\r\n    setKabupaten(partner.Kabupaten!);\r\n    setKecamatan(partner.Kecamatan!);\r\n  }, [partner]);\r\n\r\n  useEffect(() => {\r\n    if (isSubmit) {\r\n      resetValidation();\r\n      if (!validation()) {\r\n        setSubmit(false);\r\n        return;\r\n      }\r\n      onSubmit();\r\n    }\r\n  }, [isSubmit, setSubmit]);\r\n\r\n  const handleSearchProvinsi = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${WILAYAH_PROVINSI_BASE_URL}?${params.toString()}`, { cancelToken: cancelTokenSource.token });\r\n      setRegion(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n\r\n  const handleSearchKabupaten = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${WILAYAH_KABUPATEN_BASE_URL(provinsi.code)}?${params.toString()}`, { cancelToken: cancelTokenSource.token });\r\n      setRegion(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n\r\n  const handleSearchZone = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${ZONE_BASE_URL}?${params.toString()}`, { cancelToken: cancelTokenSource.token });\r\n      setRoute(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n\r\n  const handleSearchKecamatan = async (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    const params = new URLSearchParams();\r\n    params.append('keyword', event.target.value);\r\n\r\n    try {\r\n      const { data } = await axios.get(`${WILAYAH_KECAMATAN_BASE_URL(kabupaten.code)}?${params.toString()}`, {\r\n        cancelToken: cancelTokenSource.token\r\n      });\r\n      setRegion(data.data);\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n\r\n    try {\r\n      setSubmit(true);\r\n      const region = provinsi.name + ', ' + kabupaten.name + ', ' + kecamatan.name;\r\n      const { data } = await axios.post(\r\n        `${PARTNER_BASE_URL}`,\r\n        {\r\n          id: partner.id,\r\n          partnerId,\r\n          name,\r\n          partnerType,\r\n          phoneNumber,\r\n          cellPhoneNumber,\r\n          email,\r\n          address,\r\n          notes,\r\n          website,\r\n          postalCode,\r\n          areaCode: kecamatan.code,\r\n          regionName: region,\r\n          ZoneId: zone.id,\r\n          businessEntity,\r\n          virtualAccount\r\n        },\r\n        {\r\n          cancelToken: cancelTokenSource.token\r\n        }\r\n      );\r\n      setPartner(data.data);\r\n      setUpdate(false);\r\n      handleSnackBar(true, 'success', 'Partner berhasil ditambahkan');\r\n    } catch (error) {\r\n      console.log('error :', error);\r\n      handleSnackBar(true, 'error', 'Partner gagal ditambahkan');\r\n    }\r\n    setSubmit(false);\r\n  };\r\n\r\n  const validation = (): boolean => {\r\n    let valid = true;\r\n\r\n    if (name === '' || !name) {\r\n      setNameMessage('Nama tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (!isValidEmail(email)) {\r\n      setEmailMessage('Email tidak valid.');\r\n      valid = false;\r\n    } else if (email === '' || !email) {\r\n      setEmailMessage('Email tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (phoneNumber === '' && !phoneNumber) {\r\n      setPhoneNumberMessage('No telepon tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (address === '' && !addressMessage) {\r\n      setAddressMessage('Alamat tidak boleh kosong,');\r\n      valid = false;\r\n    }\r\n\r\n    if (provinsi.name === '' || provinsi.code === '') {\r\n      setProvinsiMessage('Asal provinsi tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    if (kabupaten.name === '' || kabupaten.code === '') {\r\n      setKabupatenMessage('Asal provinsi tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    if (kecamatan.name === '' || kecamatan.code === '') {\r\n      setKecamatanMessage('Asal provinsi tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    if (!postalCode) {\r\n      setPostalCodeMessage('Kode Pos tidak boleh kosong.');\r\n      valid = false;\r\n    }\r\n\r\n    if (zone.id === 0 || zone.name === '') {\r\n      setZoneMessage('Badan Usaha tidak boleh kosong');\r\n      valid = false;\r\n    }\r\n\r\n    return valid;\r\n  };\r\n\r\n  const resetValidation = () => {\r\n    setNameMessage('');\r\n    setEmailMessage('');\r\n    setPhoneNumberMessage('');\r\n    setAddressMessage('');\r\n    setProvinsiMessage('');\r\n    setKabupatenMessage('');\r\n    setKecamatanMessage('');\r\n    setPostalCodeMessage('');\r\n  };\r\n\r\n  return (\r\n    <Grid container direction='row' justify='space-between'>\r\n      <Grid container item lg={6} sm={6} md={6} xs={6} spacing={2}>\r\n        <PaperCustom>\r\n          <Typography variant='h5'>Informasi</Typography>\r\n\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='name'\r\n              name='name'\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='Nama *'\r\n              value={name}\r\n              onChange={event => setName(event.target.value)}\r\n              error={nameMessage !== ''}\r\n              helperText={nameMessage}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='partnerId'\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='ID Mitra'\r\n              value={partnerId}\r\n              onChange={event => setPartnerId(event.target.value)}\r\n              disabled\r\n            />\r\n          </Grid>\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='email'\r\n              name='email'\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='Email '\r\n              value={email}\r\n              onChange={event => setEmail(event.target.value)}\r\n              error={emailMessage !== ''}\r\n              helperText={emailMessage}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='phoneNumber'\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='No Telepon *'\r\n              value={phoneNumber}\r\n              onChange={event => setPhoneNumber(event.target.value)}\r\n              inputProps={{\r\n                maxLength: 13\r\n              }}\r\n              error={phoneNumberMessage !== ''}\r\n              helperText={phoneNumberMessage}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='cellPhoneNumber'\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='No Handphone '\r\n              value={cellPhoneNumber}\r\n              onChange={event => setCellPhoneNumber(event.target.value)}\r\n              inputProps={{\r\n                maxLength: 13\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='website'\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='Laman Website'\r\n              value={website}\r\n              onChange={event => setWebsite(event.target.value)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='virtualAccount'\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='No Virtual Account'\r\n              value={virtualAccount}\r\n              onChange={event => setVirtualAccount(event.target.value)}\r\n            />\r\n          </Grid>\r\n        </PaperCustom>\r\n      </Grid>\r\n\r\n      <Grid container item lg={6} sm={6} md={6} xs={6} spacing={2}>\r\n        <PaperCustom>\r\n          <Typography variant='h5'>Detail Alamat</Typography>\r\n\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='address'\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='Alamat'\r\n              value={address}\r\n              onChange={event => setAddress(event.target.value)}\r\n              error={addressMessage !== ''}\r\n              helperText={addressMessage}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <Autocomplete\r\n              id='provinsi'\r\n              fullWidth\r\n              value={provinsi}\r\n              options={region}\r\n              getOptionLabel={option => option.name}\r\n              onChange={(event: any, value: any) => {\r\n                setProvinsi(value);\r\n                setRegion([dummyRegion]);\r\n              }}\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  placeholder='Provinsi *'\r\n                  size='small'\r\n                  onChange={handleSearchProvinsi}\r\n                  variant='outlined'\r\n                  error={provinsiMessage !== ''}\r\n                  helperText={provinsiMessage}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <Autocomplete\r\n              id='kabupaten'\r\n              fullWidth\r\n              value={kabupaten}\r\n              options={region}\r\n              getOptionLabel={option => option.name}\r\n              onChange={(event: any, value: any) => {\r\n                setKabupaten(value);\r\n                setRegion([dummyRegion]);\r\n              }}\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  fullWidth\r\n                  placeholder='Kabupaten *'\r\n                  size='small'\r\n                  onChange={handleSearchKabupaten}\r\n                  variant='outlined'\r\n                  error={kabupatenMessage !== ''}\r\n                  helperText={kabupatenMessage}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <Autocomplete\r\n              id='kecamatan'\r\n              fullWidth\r\n              value={kecamatan}\r\n              options={region}\r\n              getOptionLabel={option => option.name}\r\n              onChange={(event: any, value: any) => {\r\n                setKecamatan(value);\r\n                setRegion([dummyRegion]);\r\n              }}\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  placeholder='Kecamatan *'\r\n                  size='small'\r\n                  onChange={handleSearchKecamatan}\r\n                  variant='outlined'\r\n                  error={kecamatanMessage !== ''}\r\n                  helperText={kecamatanMessage}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <Autocomplete\r\n              id='zone'\r\n              fullWidth\r\n              value={zone}\r\n              options={route}\r\n              getOptionLabel={option => option.name}\r\n              onChange={(event: any, value: any) => setZone(value)}\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  placeholder='Route *'\r\n                  size='small'\r\n                  onChange={handleSearchZone}\r\n                  variant='outlined'\r\n                  error={zoneMessage !== ''}\r\n                  helperText={zoneMessage}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='postalCode'\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='Kode Pos '\r\n              type='number'\r\n              value={postalCode}\r\n              onChange={event => setPostalCode(+event.target.value)}\r\n              error={postalCodeMessage !== ''}\r\n              helperText={postalCodeMessage}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <TextField\r\n              id='notes'\r\n              rows={4}\r\n              required\r\n              fullWidth\r\n              size='small'\r\n              variant='outlined'\r\n              placeholder='Keterangan '\r\n              value={notes}\r\n              onChange={event => setNotes(event.target.value)}\r\n            />\r\n          </Grid>\r\n        </PaperCustom>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PartnerWizard;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { Container, makeStyles, Typography, Grid, Button } from '@material-ui/core';\r\nimport { Page, StandardConfirmationDialog, Breadcrumb } from 'components';\r\nimport { PARTNER_BASE_URL } from 'constants/url';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport useRouter from 'hooks/useRouter';\r\nimport PartnerDetail from './components/PartnerDetail';\r\nimport PartnerWizard from './components/PartnerWizard';\r\n\r\nconst useStyles = makeStyles({\r\n  secondGrid: {\r\n    marginTop: 10\r\n  }\r\n});\r\n\r\nconst dummyPartner: PartnerModel = {\r\n  id: 0,\r\n  partnerId: '',\r\n  name: '',\r\n  address: '',\r\n  areaCode: '',\r\n  businessEntity: '',\r\n  cellPhoneNumber: '',\r\n  email: '',\r\n  notes: '',\r\n  phoneNumber: '',\r\n  postalCode: 0,\r\n  regionName: '',\r\n  virtualAccount: '',\r\n  website: '',\r\n  partnerType: 'SUPPLIER'\r\n};\r\n\r\nconst PartnerDetailPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { location } = useRouter();\r\n  // eslint-disable-next-line\r\n  const params: any = location.state;\r\n\r\n  const [isLoadingData, setIsLoadingData] = useState<boolean>(false);\r\n  const [partner, setPartner] = useState<PartnerModel>(dummyPartner);\r\n  const [id, setId] = useState<number>();\r\n  const [confirmationDelete, setConfirmationDelete] = useState<boolean>(false);\r\n  const [snackbarVariant, setSnackbarVariant] = useState<'success' | 'error'>('success');\r\n  const [message, setMessage] = useState<string>('');\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n  const [isSubmit, setSubmit] = useState<boolean>(false);\r\n  const [isUpdate, setUpdate] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoadingData(true);\r\n\r\n    const fetchData = async () => {\r\n      const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n      try {\r\n        const { data } = await axios.get(`${PARTNER_BASE_URL}/${params.id}`, { cancelToken: cancelTokenSource.token });\r\n        setPartner(data.data);\r\n        setId(data.data.id);\r\n      } catch (error) {\r\n        console.log('error:', error);\r\n      }\r\n      setIsLoadingData(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleConfirmationDelete = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    setConfirmationDelete(true);\r\n  };\r\n\r\n  const handleCloseConfirmationDelete = () => {\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const deletePartner = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    try {\r\n      await axios.delete(`${PARTNER_BASE_URL}/${id}`, { cancelToken: cancelTokenSource.token });\r\n      handleSnackBar(true, 'success', 'Partner berhasil dihapus.');\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleSnackBar(true, 'error', 'Partner gagal dihapus.');\r\n    }\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const handleSnackBar = (open: boolean, variant: 'success' | 'error', message: string) => {\r\n    setSnackbarVariant(variant);\r\n    setOpenSnackbar(open);\r\n    setMessage(message);\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  const handleOnSubmit = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    setSubmit(true);\r\n  };\r\n\r\n  const handleSetUpdate = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    setUpdate(true);\r\n  };\r\n\r\n  const handleCancelUpdate = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    setUpdate(false);\r\n  };\r\n\r\n  return (\r\n    <Page title='Mitra'>\r\n      <Container>\r\n        <Grid container direction='row'>\r\n          <Grid item lg={12} sm={12} md={12} xs={12}>\r\n            <Typography variant='h1'> Semua Mitra </Typography>\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Breadcrumb />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction='row' justify='space-between'>\r\n          <Grid item lg={6} sm={6} md={6} xs={6}></Grid>\r\n          <Grid container item lg={6} sm={6} md={6} xs={6} justify='flex-end' spacing={2}>\r\n            <Grid item>\r\n              <Button color='secondary' onClick={isUpdate ? handleCancelUpdate : handleConfirmationDelete}>\r\n                <Typography>{isUpdate ? 'Batal' : 'Hapus'}</Typography>\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button onClick={isUpdate ? handleOnSubmit : handleSetUpdate}>\r\n                <Typography>{isUpdate ? 'Simpan' : 'Edit Data'}</Typography>\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {isUpdate ? (\r\n          <PartnerWizard\r\n            partner={partner}\r\n            setPartner={setPartner}\r\n            isSubmit={isSubmit}\r\n            setUpdate={setUpdate}\r\n            setSubmit={setSubmit}\r\n            handleSnackBar={handleSnackBar}\r\n          />\r\n        ) : (\r\n          <PartnerDetail partner={partner} />\r\n        )}\r\n\r\n        <Grid item container direction='row' justify='center' spacing={2} className={classes.secondGrid}>\r\n          <Grid item lg={4} sm={4} md={4} xs={4}>\r\n            Rating\r\n          </Grid>\r\n          <Grid item lg={4} sm={4} md={4} xs={4}>\r\n            {partner.partnerType}\r\n          </Grid>\r\n          <Grid item lg={4} sm={4} md={4} xs={4}>\r\n            Terhutang\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <StandardConfirmationDialog\r\n          variant={snackbarVariant}\r\n          titleMessage={snackbarVariant === 'success' ? 'Success!' : 'Error!'}\r\n          message={message}\r\n          open={openSnackbar}\r\n          handleClose={handleCloseSnackbar}\r\n          onConfirm={handleCloseSnackbar}\r\n          noCancelButton={true}\r\n        />\r\n\r\n        <StandardConfirmationDialog\r\n          variant={'danger'}\r\n          titleMessage={'Delete'}\r\n          message={'Are you sure want to delete this data?'}\r\n          open={confirmationDelete}\r\n          handleClose={handleCloseConfirmationDelete}\r\n          onConfirm={deletePartner}\r\n        />\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default PartnerDetailPage;\r\n","import React, { FC, Fragment } from 'react';\r\nimport { TableCell, TableRow, withStyles, createStyles, Theme, Button } from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport useRouter from 'hooks/useRouter';\r\n\r\ninterface Props {\r\n  salesCommission: SalesModel;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      height: '75px',\r\n      borderRadius: 20\r\n    }\r\n  })\r\n)(TableRow);\r\n\r\nconst BodyRow: FC<Props> = props => {\r\n  const { salesCommission, isLoading } = props;\r\n  const { history } = useRouter();\r\n\r\n  const handleLink = () => {\r\n    history.push('/commission/detail', { id: salesCommission.id });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <StyledTableRow hover onClick={handleLink}>\r\n        <TableCell>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : salesCommission.salesId}</TableCell>\r\n        <TableCell>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : salesCommission.name}</TableCell>\r\n        <TableCell>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : salesCommission.email}</TableCell>\r\n        <TableCell>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : salesCommission.phoneNumber}</TableCell>\r\n        <TableCell>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : salesCommission.address}</TableCell>\r\n      </StyledTableRow>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BodyRow;\r\n","import React, { FC, useState, Fragment, useEffect } from 'react';\r\nimport { Table, TableBody, TableHead, TableRow, TableCell, TextField, makeStyles, Select, MenuItem, FormControl, Paper } from '@material-ui/core';\r\nimport HeaderRow from 'components/Table/HeaderRow';\r\nimport BodyRow from './components/BodyRow';\r\nimport TablePagination from 'components/TablePagination';\r\n\r\ninterface Props {\r\n  isLoadingData: boolean;\r\n  count: number;\r\n  currentPage: number;\r\n  rowsPerPage: number;\r\n  salesCommissions?: SalesModel[];\r\n  queryString?: string;\r\n  order: 'asc' | 'desc';\r\n  orderBy: string;\r\n  name: string;\r\n  setName: React.Dispatch<React.SetStateAction<string>>;\r\n  address: string;\r\n  setAddress: React.Dispatch<React.SetStateAction<string>>;\r\n  email: string;\r\n  setEmail: React.Dispatch<React.SetStateAction<string>>;\r\n  salesId: string;\r\n  setSalesId: React.Dispatch<React.SetStateAction<string>>;\r\n  phoneNumber: string;\r\n  setPhoneNumber: React.Dispatch<React.SetStateAction<string>>;\r\n  setOrder: React.Dispatch<React.SetStateAction<'asc' | 'desc'>>;\r\n  setOrderBy: React.Dispatch<React.SetStateAction<string>>;\r\n  handleChangeRowsPerPage: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\r\n  handleChangePage: (event: React.MouseEvent<HTMLButtonElement> | null, page: number) => void;\r\n}\r\n\r\nconst dummySales: SalesModel = {\r\n  id: 0,\r\n  salesId: '',\r\n  name: '',\r\n  address: '',\r\n  phoneNumber: '',\r\n  email: ''\r\n};\r\n\r\nconst CommissionPageTable: FC<Props> = props => {\r\n  const {\r\n    isLoadingData,\r\n    count,\r\n    currentPage,\r\n    rowsPerPage,\r\n    salesCommissions,\r\n    order,\r\n    orderBy,\r\n    name,\r\n    setName,\r\n    address,\r\n    setAddress,\r\n    email,\r\n    setEmail,\r\n    salesId,\r\n    setSalesId,\r\n    phoneNumber,\r\n    setPhoneNumber,\r\n    handleChangePage,\r\n    handleChangeRowsPerPage,\r\n    setOrder,\r\n    setOrderBy,\r\n    queryString\r\n  } = props;\r\n\r\n  const [showSkeleton, setShowSkeleton] = useState<boolean>(false);\r\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: string) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoadingData) {\r\n      setShowSkeleton(true);\r\n    }\r\n    return () => {\r\n      setShowSkeleton(false);\r\n    };\r\n  }, [isLoadingData]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Table>\r\n        <TableHead>\r\n          <HeaderRow\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            headers={[\r\n              { id: 'salesId', label: 'ID', sort: true },\r\n              { id: 'name', label: 'NAMA SALSE', sort: true },\r\n              { id: 'email', label: 'EMAIL', sort: true },\r\n              { id: 'phoneNumber', label: 'NO.HANDPHONE', sort: true },\r\n              { id: 'address', label: 'ADDRESS', sort: true },\r\n              { label: '' }\r\n            ]}\r\n          />\r\n          <TableRow>\r\n            <TableCell>\r\n              <TextField id='salesId' variant='outlined' value={salesId} onChange={event => setSalesId(event.target.value)} size='small' />\r\n            </TableCell>\r\n            <TableCell>\r\n              <TextField id='name' variant='outlined' value={name} onChange={event => setName(event.target.value)} size='small' />\r\n            </TableCell>\r\n            <TableCell>\r\n              <TextField id='email' variant='outlined' value={email} onChange={event => setAddress(event.target.value)} size='small' />\r\n            </TableCell>\r\n\r\n            <TableCell>\r\n              <TextField\r\n                id='cellPhoneNumber'\r\n                variant='outlined'\r\n                value={phoneNumber}\r\n                onChange={event => setPhoneNumber(event.target.value)}\r\n                size='small'\r\n              />\r\n            </TableCell>\r\n            <TableCell>\r\n              <TextField id='address' variant='outlined' value={address} onChange={event => setAddress(event.target.value)} size='small' />\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {showSkeleton ? (\r\n            [0, 1, 2, 3].map(index => <BodyRow key={index + 1} isLoading={showSkeleton} salesCommission={dummySales} />)\r\n          ) : salesCommissions && salesCommissions.length > 0 ? (\r\n            salesCommissions.map((value, index) => <BodyRow key={index + 1} isLoading={showSkeleton} salesCommission={value} />)\r\n          ) : (\r\n            <Fragment>\r\n              <TableRow>\r\n                <TableCell colSpan={7} align='center'>\r\n                  {queryString ? 'No matching result' : 'Data Not Available'}\r\n                </TableCell>\r\n              </TableRow>\r\n            </Fragment>\r\n          )}\r\n\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 15]}\r\n            count={count}\r\n            rowsPerPage={rowsPerPage}\r\n            page={currentPage}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </TableBody>\r\n      </Table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CommissionPageTable;\r\n","import { createMuiTheme } from '@material-ui/core';\r\nimport { responsiveFontSizes } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport { WHITE, BLACK, BLUE_PRIMARY } from 'constants/colors';\r\n\r\ndeclare module '@material-ui/core/styles/createMuiTheme' {\r\n  interface Theme {\r\n    border: {\r\n      primary: string;\r\n    };\r\n    \r\n  }\r\n  // allow configuration using `createMuiTheme`\r\n  interface ThemeOptions {\r\n    border?: {\r\n      primary?: string;\r\n    };\r\n  }\r\n}\r\n\r\nlet theme = createMuiTheme({\r\n  border: {\r\n    primary: grey[300]\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: WHITE,\r\n      contrastText: WHITE\r\n    },\r\n    secondary: {\r\n      main: BLUE_PRIMARY,\r\n      contrastText: WHITE\r\n    }\r\n  },\r\n  typography: {\r\n    h4: {\r\n      fontSize: '20px',\r\n      fontWeight: 500\r\n    },\r\n    h5: {\r\n      fontSize: '16px',\r\n      fontWeight: 500\r\n    },\r\n    h6: {\r\n      fontSize: '14px',\r\n      fontWeight: 400\r\n    },\r\n    body1: {\r\n      fontSize: '13px'\r\n    },\r\n    body2: {\r\n      fontSize: '12px',\r\n      lineHeight: '12px'\r\n    },\r\n    subtitle1: {\r\n      fontSize: '13px',\r\n      fontWeight: 500\r\n    },\r\n    button: {\r\n      fontSize: '13px'\r\n    },\r\n    overline: {\r\n      fontSize: '13px',\r\n      lineHeight: '13px'\r\n    },\r\n    caption: {\r\n      fontSize: '11px',\r\n      lineHeight: '11px'\r\n    }\r\n  },\r\n  overrides: {\r\n    MuiOutlinedInput: {\r\n      adornedStart: {\r\n        paddingLeft: 0,\r\n        marginLeft: 0\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\ntheme = responsiveFontSizes(theme);\r\n\r\nexport default theme;\r\n","import React, { FC, useEffect, useCallback, useState } from 'react';\r\nimport { Grid, Container, Typography, makeStyles, Button, Paper } from '@material-ui/core';\r\nimport { Page, StandardConfirmationDialog } from 'components';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport { SALES_BASE_URL } from 'constants/url';\r\nimport SearchInput from 'components/SearchInput';\r\nimport useDebounce from 'hooks/useDebounce';\r\nimport CommissionPageTable from './components/CommissionPageTable';\r\nimport theme from 'theme';\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    fontWeight: 500,\r\n    fontStyle: 'normal',\r\n    fontSize: '28px',\r\n    lineHeight: '32px'\r\n  },\r\n  text: {\r\n    fontWeight: 'bold',\r\n    fontSize: '30px',\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  paperSpace: {\r\n    marginTop: theme.spacing(5),\r\n    paddingTop: theme.spacing(5)\r\n  },\r\n  textSpace: {\r\n    fontWeight: 'bold',\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  searchSpace: {\r\n    paddingLeft: theme.spacing(3)\r\n  },\r\n  leftHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    marginLeft: theme.spacing(1),\r\n    paddingLeft: theme.spacing(1)\r\n  },\r\n  titleWrapper: {\r\n    width: '169px',\r\n    height: '32px',\r\n    top: '112px',\r\n    left: '239px',\r\n    marginTop: theme.spacing(5)\r\n  }\r\n});\r\n\r\nconst dummySales: SalesModel = {\r\n  id: 0,\r\n  salesId: '#123',\r\n  name: 'Jhon',\r\n  address: 'JL.Sei.Kampar',\r\n  phoneNumber: '0812123434',\r\n  email: 'jhon@gmail.com'\r\n};\r\n\r\nconst CommissionPage: FC = () => {\r\n  const styles = useStyles();\r\n  const classes = useStyles();\r\n\r\n  const [count, setCount] = useState<number>(0);\r\n  const [query, setQuery] = useState<string>('');\r\n  const [queryString, setQueryString] = useState<string>();\r\n  const [isLoadingData, setIsLoadingData] = useState<boolean>(false);\r\n  const [currentPage, setCurrentPage] = useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(10);\r\n  const [salesCommissions, setSalesCommissions] = useState<SalesModel[]>([dummySales]);\r\n  const [order, setOrder] = useState<'asc' | 'desc'>('asc');\r\n  const [orderBy, setOrderBy] = useState<string>('id');\r\n  const [salesId, setSalesId] = useState<string>('');\r\n  const [name, setName] = useState<string>('');\r\n  const [address, setAddress] = useState<string>('');\r\n  const [email, setEmail] = useState<string>('');\r\n  const [phoneNumber, setPhoneNumber] = useState<string>('');\r\n  const [snackbarVariant, setSnackbarVariant] = useState<'success' | 'error'>('success');\r\n  const [message, setMessage] = useState<string>('');\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    setIsLoadingData(true);\r\n\r\n    const getQueryParams = () => {\r\n      const params = new URLSearchParams();\r\n      if (queryString) {\r\n        params.append('keyword', queryString);\r\n      }\r\n\r\n      if (name) {\r\n        params.append('keyword', name);\r\n      }\r\n\r\n      if (email) {\r\n        params.append('keyword', email);\r\n      }\r\n\r\n      if (phoneNumber) {\r\n        params.append('keyword', phoneNumber);\r\n      }\r\n      if (address) {\r\n        params.append('keyword', address);\r\n      }\r\n\r\n      if (salesId) {\r\n        params.append('keyword', salesId);\r\n      }\r\n\r\n      if (orderBy || order) {\r\n        params.append('orderBy', orderBy);\r\n        params.append('ordered', order);\r\n      }\r\n\r\n      params.append('perPage', rowsPerPage.toString());\r\n      params.append('page', currentPage.toString());\r\n\r\n      return params.toString();\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`${SALES_BASE_URL}?${getQueryParams()}`, { cancelToken: cancelTokenSource.token });\r\n      setSalesCommissions(data.data);\r\n      setCount(data.meta.total);\r\n    } catch (error) {}\r\n    setIsLoadingData(false);\r\n    return () => {\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, [queryString, orderBy, order, name, address, email, salesId, phoneNumber, currentPage, rowsPerPage]);\r\n\r\n  const performActionAndRevertPage = (action: React.Dispatch<React.SetStateAction<any>>, actionParam: any) => {\r\n    setCurrentPage(0);\r\n    action(actionParam);\r\n  };\r\n\r\n  const handleSearch = useCallback((searchQuery: string) => {\r\n    performActionAndRevertPage(setQueryString, searchQuery);\r\n  }, []);\r\n\r\n  const debouncedSearchTerm = useDebounce(query, 500);\r\n\r\n  useEffect(() => {\r\n    if (debouncedSearchTerm.length >= 3) {\r\n      handleSearch(debouncedSearchTerm);\r\n    } else if (debouncedSearchTerm.length === 0) {\r\n      handleSearch(debouncedSearchTerm);\r\n    }\r\n  }, [debouncedSearchTerm, handleSearch]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n    <Page title='Komisi'>\r\n      <Container>\r\n        <Grid container spacing={3}>\r\n          <Grid item sm={6}>\r\n            <Typography className={classes.text} variant='h3'>\r\n              Komisi\r\n            </Typography>\r\n            <Typography className={classes.textSpace} variant='h4'>\r\n              Awal {'>'}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Paper className={classes.paperSpace}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\r\n              <Grid container direction='row' justify='flex-start' alignItems='center' className={classes.leftHeader}>\r\n                <SearchInput\r\n                  withBorder\r\n                  withTransition={false}\r\n                  width={150}\r\n                  placeHolder='Cari Komisi disini'\r\n                  iconColor='#989898'\r\n                  tableSearchValue={query}\r\n                  setTableSearchValue={setQuery}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <CommissionPageTable\r\n            isLoadingData={isLoadingData}\r\n            count={count}\r\n            currentPage={currentPage}\r\n            rowsPerPage={rowsPerPage}\r\n            salesCommissions={salesCommissions}\r\n            queryString={queryString}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            name={name}\r\n            setName={setName}\r\n            address={address}\r\n            setAddress={setAddress}\r\n            email={email}\r\n            setEmail={setEmail}\r\n            salesId={salesId}\r\n            setSalesId={setSalesId}\r\n            phoneNumber={phoneNumber}\r\n            setPhoneNumber={setPhoneNumber}\r\n            setOrder={setOrder}\r\n            setOrderBy={setOrderBy}\r\n            handleChangeRowsPerPage={event => performActionAndRevertPage(setRowsPerPage, +event.target.value)}\r\n            handleChangePage={(event, page) => setCurrentPage(page)}\r\n          />\r\n\r\n          <StandardConfirmationDialog\r\n            variant={snackbarVariant}\r\n            titleMessage={snackbarVariant === 'success' ? 'Success!' : 'Error!'}\r\n            message={message}\r\n            open={openSnackbar}\r\n            handleClose={handleCloseSnackbar}\r\n            onConfirm={handleCloseSnackbar}\r\n            noCancelButton={true}\r\n          />\r\n        </Paper>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CommissionPage;\r\n","import React, { FC, useState } from 'react';\r\nimport { Card, CardHeader, CardContent, Divider, Grid, makeStyles, Theme, Typography } from '@material-ui/core';\r\nimport { GREY } from 'constants/colors';\r\ninterface Props {\r\n  salesCommission: SalesModel;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  card: {\r\n    borderRadius: 25,\r\n    marginRight: 4\r\n  },\r\n  cardHeader: {\r\n    padding: theme.spacing(2)\r\n  },\r\n\r\n  CardContent: { padding: 0 },\r\n  actionIcon: {\r\n    fontSize: 20\r\n  },\r\n  gridOdd: {\r\n    backgroundColor: '#F2F4F7',\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2)\r\n  },\r\n  gridEven: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2)\r\n  },\r\n  contentLabel: {\r\n    fontWeight: 'normal',\r\n    color: GREY\r\n  },\r\n  contentValue: {\r\n    paddingLeft: theme.spacing(4)\r\n  },\r\n  healthIssueGrid: {\r\n    paddingBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst SalesDetail: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { salesCommission } = props;\r\n\r\n  const { id, name, email, address, phoneNumber } = salesCommission!;\r\n\r\n  const [salesEmail, setSalesEmail] = useState<string>(email);\r\n  const [salesContactNumber, setSalesContactNumber] = useState<string>(phoneNumber);\r\n  const [salesId, setSalesId] = useState<number>(id);\r\n  const [salesAddress, setSalesAddress] = useState<string>(address);\r\n  const [salesName, setSalesName] = useState<string>(name);\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Card className={classes.card}>\r\n        <CardHeader className={classes.cardHeader} title={<Typography variant='h5'>Detail Informasi</Typography>} />\r\n        <Divider />\r\n        <CardContent className={classes.CardContent}>\r\n          <Grid container className={classes.gridEven}>\r\n            <Grid item xs={10}>\r\n              <Typography variant='h6' color='primary' className={classes.contentLabel}>\r\n                Name\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={2} className={classes.contentValue}>\r\n              <Typography variant='h6'>{salesName}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.gridEven}>\r\n            <Grid item xs={10}>\r\n              <Typography variant='h6' color='primary' className={classes.contentLabel}>\r\n                Email\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={2} className={classes.contentValue}>\r\n              <Typography variant='h6'>{salesEmail}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.gridEven}>\r\n            <Grid item xs={10}>\r\n              <Typography variant='h6' color='primary' className={classes.contentLabel}>\r\n                No.Handphone\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={2} className={classes.contentValue}>\r\n              <Typography variant='h6'>{salesContactNumber}</Typography>{' '}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.gridEven}>\r\n            <Grid item xs={10}>\r\n              <Typography variant='h6' color='primary' className={classes.contentLabel}>\r\n                Address\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={2} className={classes.contentValue}>\r\n              <Typography variant='h6'>{salesAddress}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SalesDetail;\r\n","import React, { FC, Fragment } from 'react';\r\nimport { TableCell, TableRow, withStyles, createStyles, Theme, Button, Paper, Chip, makeStyles } from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { GREEN } from 'constants/colors';\r\ninterface Props {\r\n  invoiceDetail: SalesModel;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      height: '75px',\r\n      borderRadius: 20\r\n    },\r\n    chip: {\r\n      borderRadius: 27\r\n    }\r\n  })\r\n)(TableRow);\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  chip: {\r\n    borderRadius: 7\r\n  },\r\n  paidChip: {\r\n    color: GREEN,\r\n    borderRadius: 27\r\n  }\r\n}));\r\n\r\nconst BodyRow: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { invoiceDetail, isLoading } = props;\r\n  const { invoices } = invoiceDetail;\r\n\r\n  return (\r\n    <Fragment>\r\n      <StyledTableRow>\r\n        <TableCell>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : invoices && invoices[0].id}</TableCell>\r\n        <TableCell>\r\n          {isLoading ? <Skeleton variant='text' width={100} height={25} /> : invoices && invoices[0].statusInvoice}\r\n          <Chip\r\n            // label={invoices && invoices[0].statusInvoice}\r\n            className={classes.chip}\r\n            variant='default'\r\n            label='Dibayar'\r\n            color={invoices && invoices[0].statusInvoice === 'DIBAYAR' ? 'primary' : 'secondary'}\r\n          />\r\n        </TableCell>\r\n        <TableCell>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : invoices && invoices[0].amount}</TableCell>\r\n        <TableCell>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : invoices && invoices[0].amountOwed}</TableCell>\r\n        <TableCell>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : invoices && invoices[0].invoiceDate}</TableCell>\r\n        <TableCell>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : invoices && invoices[0].dueDate}</TableCell>\r\n        <TableCell>{isLoading ? <Skeleton variant='text' width={100} height={25} /> : invoices && invoices[0].status}</TableCell>\r\n      </StyledTableRow>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BodyRow;\r\n","import React, { FC, useState, Fragment, useEffect } from 'react';\r\nimport { Table, TableBody, TableHead, TableRow, TableCell, TextField, makeStyles, Paper } from '@material-ui/core';\r\nimport HeaderRow from 'components/Table/HeaderRow';\r\nimport BodyRow from './components/BodyRow';\r\nimport TablePagination from 'components/TablePagination';\r\nimport theme from 'theme';\r\n\r\ninterface Props {\r\n  isLoadingData: boolean;\r\n  count: number;\r\n  currentPage: number;\r\n  rowsPerPage: number;\r\n  salesCommissions?: SalesModel[];\r\n  queryString?: string;\r\n  order: 'asc' | 'desc';\r\n  orderBy: string;\r\n  statusInvoice: string;\r\n  setStatusInvoice: React.Dispatch<React.SetStateAction<string>>;\r\n  amount: string;\r\n  setAmount: React.Dispatch<React.SetStateAction<string>>;\r\n  amountOwed: string;\r\n  setAmountOwed: React.Dispatch<React.SetStateAction<string>>;\r\n  invoiceDate: string;\r\n  setInvoiceDate: React.Dispatch<React.SetStateAction<string>>;\r\n  dueDate: string;\r\n  setDueDate: React.Dispatch<React.SetStateAction<string>>;\r\n  status: string;\r\n  setStatus: React.Dispatch<React.SetStateAction<string>>;\r\n  invoiceId: string;\r\n  setInvoiceId: React.Dispatch<React.SetStateAction<string>>;\r\n  setOrder: React.Dispatch<React.SetStateAction<'asc' | 'desc'>>;\r\n  setOrderBy: React.Dispatch<React.SetStateAction<string>>;\r\n  handleChangeRowsPerPage: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\r\n  handleChangePage: (event: React.MouseEvent<HTMLButtonElement> | null, page: number) => void;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  paperSpace: {\r\n    marginTop: theme.spacing(5),\r\n    paddingTop: theme.spacing(5)\r\n  },\r\n  dividerStyle: {\r\n    marginTop: theme.spacing(1.5)\r\n  }\r\n});\r\n\r\nconst dummySales: SalesModel = {\r\n  id: 0,\r\n  salesId: '',\r\n  name: '',\r\n  address: '',\r\n  phoneNumber: '',\r\n  email: ''\r\n};\r\n\r\nconst InvoiceDetail: FC<Props> = props => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    isLoadingData,\r\n    count,\r\n    currentPage,\r\n    rowsPerPage,\r\n    salesCommissions,\r\n    order,\r\n    orderBy,\r\n    invoiceId,\r\n    setInvoiceId,\r\n    statusInvoice,\r\n    setStatusInvoice,\r\n    handleChangePage,\r\n    handleChangeRowsPerPage,\r\n    setOrder,\r\n    setOrderBy,\r\n    queryString\r\n  } = props;\r\n\r\n  const [showSkeleton, setShowSkeleton] = useState<boolean>(false);\r\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: string) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoadingData) {\r\n      setShowSkeleton(true);\r\n    }\r\n    return () => {\r\n      setShowSkeleton(false);\r\n    };\r\n  }, [isLoadingData]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper className={classes.paperSpace}>\r\n        <Table>\r\n          <TableHead>\r\n            <HeaderRow\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              headers={[\r\n                { id: 'invoiceIdId', label: 'ID', sort: true },\r\n                { id: 'statusInvoice', label: 'STATUS INVOICE', sort: true },\r\n                { id: 'amount', label: 'JUMLAH', sort: true },\r\n                { id: 'amountOwed', label: 'JUMLAH TERHUTANG', sort: true },\r\n                { id: 'invoiceDate', label: 'TANGGAL INVOICE', sort: true },\r\n                { id: 'dueDate', label: 'TANGGAL JATUH TEMPO', sort: true },\r\n                { id: 'status', label: 'TERKIRIM', sort: true },\r\n                { label: '' }\r\n              ]}\r\n            />\r\n            <TableRow>\r\n              <TableCell>\r\n                <TextField id='invoiceIdId' variant='outlined' value={invoiceId} onChange={event => setInvoiceId(event.target.value)} size='small' />\r\n              </TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  id='statusInvoice'\r\n                  variant='outlined'\r\n                  value={statusInvoice}\r\n                  onChange={event => setStatusInvoice(event.target.value)}\r\n                  size='small'\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {showSkeleton ? (\r\n              [0, 1, 2, 3].map(index => <BodyRow key={index + 1} isLoading={showSkeleton} invoiceDetail={dummySales} />)\r\n            ) : salesCommissions && salesCommissions.length > 0 ? (\r\n              salesCommissions.map((value, index) => <BodyRow key={index + 1} isLoading={showSkeleton} invoiceDetail={value} />)\r\n            ) : (\r\n              <Fragment>\r\n                <TableRow>\r\n                  <TableCell colSpan={7} align='center'>\r\n                    {queryString ? 'No matching result' : 'Data Not Available'}\r\n                  </TableCell>\r\n                </TableRow>\r\n              </Fragment>\r\n            )}\r\n\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 15]}\r\n              count={count}\r\n              rowsPerPage={rowsPerPage}\r\n              page={currentPage}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default InvoiceDetail;\r\n","import React, { FC, useState, useEffect, useCallback } from 'react';\r\nimport clsx from 'clsx';\r\nimport { Container, makeStyles, Typography, Grid, Theme, Divider } from '@material-ui/core';\r\nimport { Page, StandardConfirmationDialog } from 'components';\r\nimport { SALES_BASE_URL } from 'constants/url';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport useRouter from 'hooks/useRouter';\r\nimport SalesDetail from './components/SalesDetail';\r\nimport InvoiceDetail from './components/InvoiceDetail';\r\nimport useDebounce from 'hooks/useDebounce';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  title: {\r\n    fontWeight: 500,\r\n    fontStyle: 'normal',\r\n    fontSize: '28px',\r\n    lineHeight: '32px',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3)\r\n  },\r\n  text: {\r\n    fontWeight: 'bold',\r\n    fontSize: '30px',\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  textSpace: {\r\n    fontWeight: 'bold',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3)\r\n  },\r\n  divider: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  titleWrapper: {\r\n    width: '169px',\r\n    height: '32px',\r\n    top: '112px',\r\n    left: '239px'\r\n  },\r\n  secondGrid: {\r\n    marginTop: 10\r\n  }\r\n}));\r\n\r\nconst dummyPartner: SalesModel = {\r\n  id: 0,\r\n  salesId: '12',\r\n  name: 'Jhon',\r\n  address: 'JL.Sei.Kampar',\r\n  email: 'jhno@gmail.com',\r\n  phoneNumber: '0812121212'\r\n};\r\n\r\nconst CommissionDetail: FC = () => {\r\n  const classes = useStyles();\r\n  const { location } = useRouter();\r\n  // eslint-disable-next-line\r\n  const params: any = location.state;\r\n\r\n  const [isLoadingData, setIsLoadingData] = useState<boolean>(false);\r\n  const [salesCommission, setSalesCommission] = useState<SalesModel>(dummyPartner);\r\n  const [confirmationDelete, setConfirmationDelete] = useState<boolean>(false);\r\n  const [snackbarVariant, setSnackbarVariant] = useState<'success' | 'error'>('success');\r\n  const [message, setMessage] = useState<string>('');\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const dummySales: SalesModel = {\r\n    id: 0,\r\n    salesId: '#123',\r\n    name: 'Jhon',\r\n    address: 'JL.Sei.Kampar',\r\n    phoneNumber: '0812123434',\r\n    email: 'jhon@gmail.com'\r\n  };\r\n\r\n  const [query, setQuery] = useState<string>('');\r\n  const [count, setCount] = useState<number>(0);\r\n  const [status, setStatus] = useState<string>('');\r\n  const [queryString, setQueryString] = useState<string>();\r\n  const [currentPage, setCurrentPage] = useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(10);\r\n  const [salesCommissions, setSalesCommissions] = useState<SalesModel[]>([dummySales]);\r\n  const [order, setOrder] = useState<'asc' | 'desc'>('asc');\r\n  const [orderBy, setOrderBy] = useState<string>('id');\r\n  const [amountOwed, setAmountOwed] = useState<string>('');\r\n  const [amount, setAmount] = useState<string>('');\r\n  const [invoiceDate, setInvoiceDate] = useState<string>('');\r\n  const [invoiceId, setInvoiceId] = useState<string>('');\r\n  const [dueDate, setDueDate] = useState<string>('');\r\n  const [statusInvoice, setStatusInvoice] = useState<string>('');\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const cancelTokenSource: CancelTokenSource = axios.CancelToken.source();\r\n    setIsLoadingData(true);\r\n\r\n    const getQueryParams = () => {\r\n      const params = new URLSearchParams();\r\n      if (queryString) {\r\n        params.append('keyword', queryString);\r\n      }\r\n\r\n      if (statusInvoice) {\r\n        params.append('keyword', statusInvoice);\r\n      }\r\n\r\n      if (invoiceId) {\r\n        params.append('keyword', invoiceId);\r\n      }\r\n\r\n      if (orderBy || order) {\r\n        params.append('orderBy', orderBy);\r\n        params.append('ordered', order);\r\n      }\r\n\r\n      params.append('perPage', rowsPerPage.toString());\r\n      params.append('page', currentPage.toString());\r\n\r\n      return params.toString();\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`${SALES_BASE_URL}?${getQueryParams()}`, { cancelToken: cancelTokenSource.token });\r\n      setSalesCommissions(data.data);\r\n      setCount(data.meta.total);\r\n    } catch (error) {}\r\n    setIsLoadingData(false);\r\n    return () => {\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, [queryString, orderBy, order, invoiceId, statusInvoice, currentPage, rowsPerPage]);\r\n\r\n  const handleCloseConfirmationDelete = () => {\r\n    setConfirmationDelete(false);\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  const performActionAndRevertPage = (action: React.Dispatch<React.SetStateAction<any>>, actionParam: any) => {\r\n    setCurrentPage(0);\r\n    action(actionParam);\r\n  };\r\n\r\n  const handleSearch = useCallback((searchQuery: string) => {\r\n    performActionAndRevertPage(setQueryString, searchQuery);\r\n  }, []);\r\n\r\n  const debouncedSearchTerm = useDebounce(query, 500);\r\n\r\n  useEffect(() => {\r\n    if (debouncedSearchTerm.length >= 3) {\r\n      handleSearch(debouncedSearchTerm);\r\n    } else if (debouncedSearchTerm.length === 0) {\r\n      handleSearch(debouncedSearchTerm);\r\n    }\r\n  }, [debouncedSearchTerm, handleSearch]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return (\r\n    <Page title='Mitra'>\r\n      <Container>\r\n        <Grid container spacing={3}>\r\n          <Grid item sm={6}>\r\n            <Typography className={classes.text} variant='h3'>\r\n              Komisi\r\n            </Typography>\r\n            <Typography className={classes.textSpace} variant='h4'>\r\n              Awal {'>'}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <SalesDetail salesCommission={salesCommission} />\r\n\r\n        <StandardConfirmationDialog\r\n          variant={snackbarVariant}\r\n          titleMessage={snackbarVariant === 'success' ? 'Success!' : 'Error!'}\r\n          message={message}\r\n          open={openSnackbar}\r\n          handleClose={handleCloseSnackbar}\r\n          onConfirm={handleCloseSnackbar}\r\n          noCancelButton={true}\r\n        />\r\n        <InvoiceDetail\r\n          isLoadingData={isLoadingData}\r\n          count={count}\r\n          currentPage={currentPage}\r\n          rowsPerPage={rowsPerPage}\r\n          salesCommissions={salesCommissions}\r\n          queryString={queryString}\r\n          order={order}\r\n          orderBy={orderBy}\r\n          statusInvoice={statusInvoice}\r\n          setStatusInvoice={setStatusInvoice}\r\n          amount={amount}\r\n          setAmount={setAmount}\r\n          amountOwed={amountOwed}\r\n          setAmountOwed={setAmountOwed}\r\n          invoiceDate={invoiceDate}\r\n          setInvoiceDate={setInvoiceDate}\r\n          dueDate={dueDate}\r\n          setDueDate={setDueDate}\r\n          status={status}\r\n          setStatus={setStatus}\r\n          invoiceId={invoiceId}\r\n          setInvoiceId={setInvoiceId}\r\n          setOrder={setOrder}\r\n          setOrderBy={setOrderBy}\r\n          handleChangeRowsPerPage={event => performActionAndRevertPage(setRowsPerPage, +event.target.value)}\r\n          handleChangePage={(event, page) => setCurrentPage(page)}\r\n        />\r\n\r\n        <StandardConfirmationDialog\r\n          variant={'danger'}\r\n          titleMessage={'Delete'}\r\n          message={'Are you sure want to delete this data?'}\r\n          open={confirmationDelete}\r\n          handleClose={handleCloseConfirmationDelete}\r\n        />\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CommissionDetail;\r\n","import React, { FC, useContext, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { AppBar, Avatar, Grid, IconButton, ListItemIcon, makeStyles, Menu, MenuItem, Theme, Toolbar, Typography } from '@material-ui/core';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { LOGOUT_URL } from 'constants/url';\r\nimport { CurrentUserContext } from 'contexts/CurrentUserContext';\r\nimport IdentifyIcon from '@material-ui/icons/PermIdentityRounded';\r\nimport LogoutIcon from '@material-ui/icons/PowerSettingsNewRounded';\r\nimport clsx from 'clsx';\r\nimport logo from 'images/logo_round.png';\r\nimport { format } from 'date-fns';\r\nimport avatar from 'images/avatar.png';\r\nimport SearchInput from '../components/SearchInput';\r\nimport { WHITE, BLACK, GRAY_3 } from 'constants/colors';\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  handleDrawerOpen(): void;\r\n}\r\n\r\nconst { REACT_APP_DRAWER_WIDTH = '240' } = process.env;\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  avatar: {\r\n    margin: 10,\r\n    width: 30,\r\n    height: 30\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24 // keep right padding when drawer closed\r\n  },\r\n  appBar: {\r\n    background: WHITE,\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    boxShadow: '0px 5px 8px 0px #000000 8%',\r\n    filter: 'drop-shadow(0px 5px 8px rgba(0, 0, 0, 0.08))',\r\n  },\r\n  appBarShift: {\r\n    marginLeft: REACT_APP_DRAWER_WIDTH,\r\n    width: `calc(100% - ${REACT_APP_DRAWER_WIDTH}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none'\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  ListItemIcon: {\r\n    minWidth: theme.spacing(5)\r\n  },\r\n  logo: {\r\n    width: '1em'\r\n  },\r\n  greeting:{\r\n    marginLeft: theme.spacing(1),\r\n    color: BLACK,\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    lineHeight: '24px'\r\n  },\r\n  date:{\r\n    marginLeft: theme.spacing(1),\r\n    color: GRAY_3,\r\n    fontSize: 12,\r\n    lineHeight: '16px'\r\n  }\r\n}));\r\n\r\nconst dummyUser: CurrentUser = {\r\n  id: 0,\r\n  displayName: '',\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  contactNumber: ''\r\n};\r\n\r\nconst AppHeader: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { currentUser, unsetCurrentUser } = useContext(CurrentUserContext);\r\n  const { id, displayName } = currentUser ? currentUser : dummyUser;\r\n\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const { open, handleDrawerOpen } = props;\r\n  const [user, setUser] = useState();\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOpenProfileModal = (userProfileId: number): React.MouseEventHandler => () => {\r\n    handleClose();\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    handleClose();\r\n    try {\r\n      await axios.post(LOGOUT_URL);\r\n    } catch (err) {}\r\n    unsetCurrentUser();\r\n  };\r\n\r\n  const detailDate = format(new Date(), 'cccc, dd MMMM yyyy, HH:mm:ss').toString();\r\n  const renderGreeting = () => {\r\n    const now = format(new Date(), 'aa').toString();\r\n    if (now === 'AM') {\r\n      return 'Selamat Pagi,';\r\n    } else if (now === 'PM') {\r\n      return 'Selamat Sore,';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppBar elevation={0} position='absolute' className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          edge='start'\r\n          color='inherit'\r\n          aria-label='Open drawer'\r\n          onClick={handleDrawerOpen}\r\n          className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n        >\r\n          <img src={logo} alt='' className={classes.logo} />\r\n        </IconButton>\r\n        <IconButton size='small' color='inherit'>\r\n          <Avatar src={avatar}></Avatar>\r\n        </IconButton>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <Typography component='p' display='inline' className={classes.greeting}>\r\n              {renderGreeting()} Admin\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <Typography display='inline' className={classes.date}>\r\n              {detailDate}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React, { FC, ComponentType } from 'react';\r\nimport { SvgIconProps } from '@material-ui/core/SvgIcon';\r\nimport { ListItem, ListItemIcon, ListItemText, Tooltip,Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {WHITE} from 'constants/colors';\r\nimport useRouter from 'hooks/useRouter';\r\n\r\ninterface Props {\r\n  Icon: ComponentType<SvgIconProps>;\r\n  path: string;\r\n  label: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n\r\n  colorDrawer: {\r\n    color: WHITE,\r\n    fontSize: '20px',\r\n  },\r\n  textDrawer: {\r\n    fontSize: 40\r\n  },\r\n}));\r\n\r\nconst DrawerItem: FC<Props> = props => {\r\n  const { history } = useRouter();\r\n  const classes = useStyles();\r\n  const { Icon, path, label } = props;\r\n\r\n  const onClickHandler: React.MouseEventHandler = event => {\r\n    event.preventDefault();\r\n\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <Tooltip title={label} placement='right'>\r\n      <ListItem button onClick={onClickHandler}>\r\n        <ListItemIcon>\r\n          <Icon className={classes.colorDrawer} />\r\n        </ListItemIcon>\r\n        <ListItemText primary={label} />\r\n      </ListItem>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default DrawerItem;\r\n","import React, { FC } from 'react';\r\nimport { Drawer, IconButton, List, Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport clsx from 'clsx';\r\nimport logo from 'images/logo.png';\r\nimport DrawerItem from './components/DrawerItem';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ClientsIcon from '@material-ui/icons/SupervisorAccount';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { BLUE_PRIMARY, WHITE, GRADIENT_DRAWER_COLOR } from 'constants/colors';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\nimport { ConfirmationNumber } from '@material-ui/icons';\r\ninterface Props {\r\n  openDrawer: boolean;\r\n  handleDrawerClose(): void;\r\n}\r\n\r\nconst { REACT_APP_DRAWER_WIDTH = '240' } = process.env;\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    background: GRADIENT_DRAWER_COLOR,\r\n    width: +REACT_APP_DRAWER_WIDTH,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    background: GRADIENT_DRAWER_COLOR,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9)\r\n    }\r\n  },\r\n  logoContainer: {\r\n    textAlign: 'center'\r\n  },\r\n  textIcon: {\r\n    color: WHITE,\r\n    fontSize: 50,\r\n    fontWeight: 'bold'\r\n  },\r\n  logo: {\r\n    width: '50%',\r\n    margin: `0px ${theme.spacing(8)}px`\r\n  }\r\n}));\r\n\r\nconst AppDrawer: FC<Props> = props => {\r\n  const classes = useStyles();\r\n  const { openDrawer, handleDrawerClose } = props;\r\n\r\n  return (\r\n    <Drawer\r\n      variant='permanent'\r\n      classes={{\r\n        paper: clsx(classes.drawerPaper, !openDrawer && classes.drawerPaperClose)\r\n      }}\r\n      open={openDrawer}\r\n    >\r\n      <div className={classes.toolbarIcon}>\r\n        <div className={classes.logoContainer}>\r\n          <img src={logo} alt='' className={classes.logo} />\r\n        </div>\r\n\r\n        <IconButton onClick={handleDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n\r\n      <List className={classes.textIcon}>\r\n        <DrawerItem Icon={HomeIcon} path='/overview' label='Overview' />\r\n        <DrawerItem Icon={PeopleIcon} path='/mitra' label='Mitra' />\r\n        <DrawerItem Icon={PeopleIcon} path='/produk' label='Katalog' />\r\n        <DrawerItem Icon={PeopleIcon} path='/kategori' label='Kategori' />\r\n        <DrawerItem Icon={ShoppingCartIcon} path='/orders' label='Order' />\r\n        <DrawerItem Icon={DescriptionIcon} path='/invoices' label='Invoice' />\r\n        <DrawerItem Icon={ClientsIcon} path='/commissions' label='Komisi' />\r\n        <DrawerItem Icon={ConfirmationNumberIcon} path='/commission' label='Komisi' />\r\n        <DrawerItem Icon={SettingsIcon} path='/settings' label='Settings' />\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AppDrawer;\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport clsx from 'clsx';\r\nimport axios from 'axios';\r\nimport { Box, Theme, Typography } from '@material-ui/core';\r\nimport { Switch, Route } from 'react-router';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SettingsPage from 'pages/SettingsPage';\r\nimport UserPage from 'pages/UserPage';\r\nimport AccesPage from 'pages/AccesPage';\r\nimport ConditionalRoute from 'components/ConditionalRoute';\r\nimport LoginPage from 'pages/LoginPage';\r\nimport HomePage from 'pages/HomePage';\r\nimport NotFoundPage from 'pages/NotFoundPage';\r\nimport CompanyPage from 'pages/CompanyPage';\r\nimport PartnerPage from 'pages/PartnerPage';\r\nimport CategoryPage from 'pages/CategoryPage';\r\nimport ProductPage from 'pages/ProductPage';\r\nimport ProductDetailPage from 'pages/ProductDetailPage';\r\nimport PartnerDetailPage from 'pages/PartnerDetailPage';\r\nimport CommissionPage from 'pages/CommissionPage';\r\nimport CommissionDetailPage from 'pages/CommissionDetail';\r\nimport AppHeader from 'components/AppHeader';\r\nimport AppDrawer from 'components/AppDrawer';\r\n\r\nimport { CurrentUserProvider } from 'contexts/CurrentUserContext';\r\nimport { isUserAuthenticated } from 'selectors';\r\nimport { attachTokenToHeader, detachTokenFromHeader } from 'utils/AxiosUtils';\r\nimport { GET_CURRENT_USER_URL } from 'constants/url';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '95vh',\r\n    overflow: 'auto'\r\n  },\r\n  footerPaddingIsLoggedIn: {\r\n    paddingRight: theme.spacing(6)\r\n  }\r\n}));\r\n\r\nconst App: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [CurrentUserData, setCurrentUserData] = useState<CurrentUser>();\r\n  const [isAuthenticating, setAuthenticating] = useState(true);\r\n  const [openDrawer, setOpenDrawer] = useState(true);\r\n\r\n  const isLoggedIn = isUserAuthenticated(CurrentUserData);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpenDrawer(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpenDrawer(false);\r\n  };\r\n\r\n  const setCurrentUser = (currentUser: CurrentUser, token: string): void => {\r\n    localStorage.setItem('token', token);\r\n    attachTokenToHeader(token);\r\n    setCurrentUserData(currentUser);\r\n  };\r\n\r\n  const unsetCurrentUser = (): void => {\r\n    localStorage.removeItem('token');\r\n    detachTokenFromHeader();\r\n\r\n    setCurrentUserData(undefined);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getPersistedToken = () => {\r\n      return localStorage.getItem('token');\r\n    };\r\n\r\n    const getCurrentUserData = async () => {\r\n      setAuthenticating(true);\r\n      const token = getPersistedToken();\r\n      if (token) {\r\n        try {\r\n          const response = await axios.get(GET_CURRENT_USER_URL, { headers: { Authorization: `Bearer ${token}` } });\r\n          const data: CurrentUser = response.data;\r\n          setCurrentUser(data, token);\r\n        } catch (err) {\r\n          unsetCurrentUser();\r\n        }\r\n      }\r\n      setAuthenticating(false);\r\n    };\r\n    getCurrentUserData();\r\n  }, []);\r\n\r\n  return isAuthenticating ? null : (\r\n    <Box>\r\n      <CurrentUserProvider\r\n        value={{\r\n          currentUser: CurrentUserData,\r\n          setCurrentUser,\r\n          unsetCurrentUser\r\n        }}\r\n      >\r\n        <div className={classes.root}>\r\n          {isLoggedIn && (\r\n            <Fragment>\r\n              <AppHeader open={openDrawer} handleDrawerOpen={handleDrawerOpen} />\r\n              <AppDrawer openDrawer={openDrawer} handleDrawerClose={handleDrawerClose} />\r\n            </Fragment>\r\n          )}\r\n          <main className={classes.content}>\r\n            {isLoggedIn && <div className={classes.appBarSpacer} />}\r\n            <Switch>\r\n              <ConditionalRoute exact={true} path={'/'} routeCondition={!isLoggedIn} component={LoginPage} redirectTo={'/home'} />\r\n              <ConditionalRoute exact={true} path={'/home'} routeCondition={isLoggedIn} component={HomePage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/settings'} routeCondition={isLoggedIn} component={SettingsPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/users'} routeCondition={isLoggedIn} component={UserPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/access'} routeCondition={isLoggedIn} component={AccesPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/company'} routeCondition={isLoggedIn} component={CompanyPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/mitra'} routeCondition={isLoggedIn} component={PartnerPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/mitra/detail'} routeCondition={isLoggedIn} component={PartnerDetailPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/produk'} routeCondition={isLoggedIn} component={ProductPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/produk/detail'} routeCondition={isLoggedIn} component={ProductDetailPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/kategori'} routeCondition={isLoggedIn} component={CategoryPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/commission'} routeCondition={isLoggedIn} component={CommissionPage} redirectTo={'/'} />\r\n              <ConditionalRoute exact={true} path={'/commission/detail'} routeCondition={isLoggedIn} component={CommissionDetailPage} redirectTo={'/'} />\r\n              <Route component={NotFoundPage} />\r\n            </Switch>\r\n          </main>\r\n        </div>\r\n      </CurrentUserProvider>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import axios, { AxiosResponse, AxiosError } from 'axios';\r\n\r\nimport { remountApp } from '..';\r\n\r\nexport const attachTokenToHeader = (token: string) => {\r\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n};\r\n\r\nexport const detachTokenFromHeader = () => {\r\n  delete axios.defaults.headers.common.Authorization;\r\n};\r\n\r\nexport const setUpAxiosInterceptors = () => {\r\n  const onFulfilled = (response: AxiosResponse) => {\r\n    return response;\r\n  };\r\n\r\n  const onRejected = (error: AxiosError) => {\r\n    if (error.message === 'Network Error') {\r\n      return;\r\n    }\r\n\r\n    const response = error.response;\r\n\r\n    if (response && response.data.errorCode === 1) {\r\n      localStorage.removeItem('token');\r\n      remountApp();\r\n    }\r\n\r\n    return Promise.reject(response);\r\n  };\r\n\r\n  axios.interceptors.response.use(onFulfilled, onRejected);\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { BLUE_PRIMARY, BLUE_SECONDARY, BLACK, WHITE, GREY, BACKGROUND, GRAY_3, RED } from 'constants/colors';\r\n\r\ndeclare module '@material-ui/core/styles/createMuiTheme' {\r\n  interface Theme {\r\n    border: {\r\n      primary: string;\r\n    };\r\n  }\r\n  // allow configuration using `createMuiTheme`\r\n  interface ThemeOptions {\r\n    border?: {\r\n      primary?: string;\r\n    };\r\n  }\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n  border: {\r\n    primary: '#F2F2F2'\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: BLUE_PRIMARY,\r\n      dark: BLUE_SECONDARY,\r\n      contrastText: WHITE\r\n    },\r\n    secondary: {\r\n      main: GREY,\r\n      contrastText: WHITE\r\n    },\r\n    background: {\r\n      default: BACKGROUND\r\n    },\r\n    error: {\r\n      main: RED\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: ['\"Rubik\"'].join(','),\r\n    h1: {\r\n      fontSize: '28px',\r\n      fontWeight: 500,\r\n      fontStyle: 'normal',\r\n      color: GRAY_3\r\n    },\r\n    h6: {\r\n      fontSize: '16px',\r\n      fontWeight: 500,\r\n      fontStyle: 'normal',\r\n      color: '#333333'\r\n    },\r\n    subtitle1: {\r\n      fontSize: '12px',\r\n      fontWeight: 400,\r\n      fontStyle: 'normal',\r\n      color: GRAY_3,\r\n      letterSpacing: '0.4px',\r\n      lineHeight: ''\r\n    }\r\n  },\r\n  props: {\r\n    MuiButton: {\r\n      variant: 'contained',\r\n      color: 'primary'\r\n    },\r\n    MuiTableCell: {\r\n      color: '#2E384D',\r\n      align: 'left'\r\n    },\r\n    MuiPaper: {\r\n      elevation: 0\r\n    },\r\n    MuiTextField: {\r\n      margin: 'dense',\r\n      size: 'small',\r\n      variant: 'outlined'\r\n    }\r\n  },\r\n  overrides: {\r\n    MuiOutlinedInput: {\r\n      root: {\r\n        background: '#F7F9FC'\r\n      }\r\n    },\r\n    MuiIconButton: {\r\n      root: {\r\n        color: '#231F20'\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport theme from 'theme/hady';\r\nimport { setUpAxiosInterceptors } from './utils/AxiosUtils';\r\n\r\nexport const remountApp = () => {\r\n  ReactDOM.unmountComponentAtNode(document.getElementById('root')!);\r\n  render();\r\n};\r\n\r\nconst render = () => {\r\n  ReactDOM.render(\r\n    <Router>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <App />\r\n      </ThemeProvider>\r\n    </Router>,\r\n    document.getElementById('root')\r\n  );\r\n};\r\n\r\n// Actual rendering\r\nrender();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n// This is to set up axios interceptors for handling 401 errors\r\nsetUpAxiosInterceptors();\r\n\r\n// For hot-reloading\r\nif (module.hot) {\r\n  module.hot.accept('./App', () => {\r\n    render();\r\n  });\r\n}\r\n"],"sourceRoot":""}